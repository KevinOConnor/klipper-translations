# Languages add-on <noreply-addon-languages@weblate.org>, 2025.
# தமிழ்நேரம் <anishprabu.t@gmail.com>, 2025.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2025-01-08 00:04+0000\n"
"Last-Translator: தமிழ்நேரம் <anishprabu.t@gmail.com>\n"
"Language-Team: Tamil <https://hosted.weblate.org/projects/klipper/bootloaders/ta/>\n"
"Language: ta\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.10-dev\n"

msgid ""
"This document provides information on common bootloaders found on micro-"
"controllers that Klipper supports."
msgstr ""
"இந்த ஆவணம் கிளிப்பர் ஆதரிக்கும் மைக்ரோகண்ட்ரோலர்களில் காணப்படும் பொதுவான "
"துவக்க ஏற்றி பற்றிய தகவல்களை வழங்குகிறது."

msgid ""
"The bootloader is 3rd-party software that runs on the micro-controller when it"
" is first powered on. It is typically used to flash a new application (eg, "
"Klipper) to the micro-controller without requiring specialized hardware. "
"Unfortunately, there is no industry wide standard for flashing a micro-"
"controller, nor is there a standard bootloader that works across all micro-"
"controllers. Worse, it is common for each bootloader to require a different "
"set of steps to flash an application."
msgstr ""
"துவக்க ஏற்றி 3 வது தரப்பு மென்பொருளாகும், இது முதலில் இயக்கப்படும் போது "
"மைக்ரோ-கன்ட்ரோலரில் இயங்குகிறது. சிறப்பு வன்பொருள் தேவையில்லாமல் "
"மைக்ரோ-கன்ட்ரோலருக்கு ஒரு புதிய பயன்பாட்டை (எ.கா., கிளிப்பர்) ஒளிரச் செய்ய இது"
" பொதுவாகப் பயன்படுத்தப்படுகிறது. துரதிர்ச்டவசமாக, மைக்ரோ-கன்ட்ரோலரை ஒளிரச் "
"செய்வதற்கு தொழில் பரந்த தரநிலை இல்லை, அல்லது அனைத்து மைக்ரோ-கன்ட்ரோலர்களிலும் "
"செயல்படும் ஒரு நிலையான துவக்க ஏற்றி இல்லை. மோசமான சேதி என்னவென்றால், ஒவ்வொரு "
"துவக்க ஏற்றுதலுக்கும் ஒரு பயன்பாட்டை ஒளிரச் செய்ய வெவ்வேறு படிகள் தேவைப்படுவது"
" பொதுவானது."

msgid ""
"If one can flash a bootloader to a micro-controller then one can generally "
"also use that mechanism to flash an application, but care should be taken when"
" doing this as one may inadvertently remove the bootloader. In contrast, a "
"bootloader will generally only permit a user to flash an application. It is "
"therefore recommended to use a bootloader to flash an application where "
"possible."
msgstr ""
"ஒரு துவக்க ஏற்றியை ஒரு மைக்ரோ-கன்ட்ரோலருக்கு ஒளிரச் செய்ய முடிந்தால், பொதுவாக "
"ஒரு பயன்பாட்டை ஒளிரச் செய்ய அந்த பொறிமுறையையும் பயன்படுத்தலாம், ஆனால் இதைச் "
"செய்யும்போது கவனக்குறைவாக துவக்க ஏற்றியை அகற்றலாம். இதற்கு நேர்மாறாக, ஒரு "
"துவக்க ஏற்றி பொதுவாக ஒரு பயனரை ஒரு பயன்பாட்டை ஒளிரச் செய்ய மட்டுமே "
"அனுமதிக்கும். எனவே ஒரு பயன்பாட்டை சாத்தியமான இடங்களில் ஒளிரச் செய்ய துவக்க "
"ஏற்றி பயன்படுத்த பரிந்துரைக்கப்படுகிறது."

msgid ""
"This document attempts to describe common bootloaders, the steps needed to "
"flash a bootloader, and the steps needed to flash an application. This "
"document is not an authoritative reference; it is intended as a collection of "
"useful information that the Klipper developers have accumulated."
msgstr ""
"இந்த ஆவணம் பொதுவான துவக்க ஏற்றிகள், துவக்க ஏற்றியை ஒளிரச் செய்ய தேவையான படிகள்"
" மற்றும் ஒரு பயன்பாட்டை ஒளிரச் செய்ய தேவையான படிகளை விவரிக்க முயற்சிக்கிறது. "
"இந்த ஆவணம் அதிகாரப்பூர்வ குறிப்பு அல்ல; கிளிப்பர் உருவாக்குபவர்கள் குவித்த "
"பயனுள்ள தகவல்களின் தொகுப்பாக இது கருதப்படுகிறது."

msgid "AVR micro-controllers"
msgstr "ஏ.வி.ஆர் மைக்ரோ-கன்ட்ரோலர்கள்"

msgid ""
"To flash a bootloader itself, the AVR chips require an external hardware "
"flashing tool (which communicates with the chip using SPI). This tool can be "
"purchased (for example, do a web search for \"avr isp\", \"arduino isp\", or "
"\"usb tiny isp\"). It is also possible to use another Arduino or Raspberry Pi "
"to flash an AVR bootloader (for example, do a web search for \"program an avr "
"using raspberry pi\"). The examples below are written assuming an \"AVR ISP "
"Mk2\" type device is in use."
msgstr ""
"ஒரு துவக்க ஏற்றியை ஒளிரச் செய்ய, ஏ.வி.ஆர் சில்லுகளுக்கு வெளிப்புற வன்பொருள் "
"ஒளிரும் கருவி தேவைப்படுகிறது (இது SPI ஐப் பயன்படுத்தி சிப்புடன் தொடர்பு "
"கொள்கிறது). இந்த கருவியை வாங்கலாம் (எடுத்துக்காட்டாக, \"ஏ.வி.ஆர் ஐ.எச்.பி\", "
"\"ஆர்டுயினோ ஐ.எச்.பி\" அல்லது \"யூ.எச்.பி டைனி ஐ.எச்.பி\" க்கான வலைத் தேடலைச் "
"செய்யுங்கள்). ஏ.வி.ஆர் துவக்க ஏற்றியை ஒளிரச் செய்ய மற்றொரு அர்டுயினோ அல்லது "
"ராச்பெர்ரி பைவைப் பயன்படுத்தவும் முடியும் (எடுத்துக்காட்டாக, \"ராச்பெர்ரி பை "
"பயன்படுத்தி ஏ.வி.ஆர் நிரல்\" என்பதற்கான வலைத் தேடலைச் செய்யுங்கள்). கீழே உள்ள "
"எடுத்துக்காட்டுகள் \"ஏ.வி.ஆர் ஐ.எச்.பி எம்.கே 2\" வகை சாதனம் பயன்பாட்டில் "
"இருப்பதாகக் கருதி எழுதப்பட்டுள்ளன."

msgid ""
"The \"avrdude\" program is the most common tool used to flash atmega chips "
"(both bootloader flashing and application flashing)."
msgstr ""
"\"அவ்ர்தூட்\" நிரல் என்பது ஆட்மெகா சில்லுகளை ஒளிரச் செய்யப் பயன்படுத்தப்படும் "
"மிகவும் பொதுவான கருவியாகும் (துவக்க ஏற்றி ஒளிரும் மற்றும் பயன்பாட்டு ஒளிரும் "
"இரண்டும்)."

msgid "Atmega2560"
msgstr "Atmega2560"

msgid ""
"This chip is typically found in the \"Arduino Mega\" and is very common in 3d "
"printer boards."
msgstr ""
"இந்த சிப் பொதுவாக \"அர்டுயினோ மெகா\" இல் காணப்படுகிறது மற்றும் 3D அச்சுப்பொறி "
"பலகைகளில் மிகவும் பொதுவானது."

msgid "To flash the bootloader itself use something like:"
msgstr "துவக்க ஏற்றி ஃபிளாச் செய்ய இதுபோன்ற ஒன்றைப் பயன்படுத்துங்கள்:"

msgid "To flash an application use something like:"
msgstr "ஒரு பயன்பாட்டை ஒளிரச் செய்ய இதுபோன்ற ஒன்றைப் பயன்படுத்தவும்:"

msgid "Atmega1280"
msgstr "Atmega1280"

msgid "This chip is typically found in earlier versions of the \"Arduino Mega\"."
msgstr ""
"இந்த சிப் பொதுவாக \"அர்டுயினோ மெகா\" இன் முந்தைய பதிப்புகளில் காணப்படுகிறது."

msgid "Atmega1284p"
msgstr "Atmega1284p"

msgid "This chip is commonly found in \"Melzi\" style 3d printer boards."
msgstr "இந்த சிப் பொதுவாக \"மெல்சி\" பாணி 3D அச்சுப்பொறி பலகைகளில் காணப்படுகிறது."

msgid ""
"Note that a number of \"Melzi\" style boards come preloaded with a bootloader "
"that uses a baud rate of 57600. In this case, to flash an application use "
"something like this instead:"
msgstr ""
"57600 என்ற பாட் வீதத்தைப் பயன்படுத்தும் துவக்க ஏற்றி மூலம் பல \"மெல்சி\" பாணி "
"பலகைகள் முன்பே ஏற்றப்பட்டுள்ளன என்பதை நினைவில் கொள்க. இந்த விசயத்தில், ஒரு "
"பயன்பாட்டை ஒளிரச் செய்ய இதுபோன்ற ஒன்றைப் பயன்படுத்தவும்:"

msgid "At90usb1286"
msgstr "AT90USB1286"

msgid ""
"This document does not cover the method to flash a bootloader to the "
"At90usb1286 nor does it cover general application flashing to this device."
msgstr ""
"இந்த ஆவணம் AT90USB1286 க்கு ஒரு துவக்க ஏற்றியை ஒளிரச் செய்வதற்கான முறையை "
"மறைக்காது அல்லது இந்த சாதனத்திற்கு பொதுவான பயன்பாட்டை ஒளிரச் செய்யாது."

msgid "Atmega168"
msgstr "Atmega168"

msgid ""
"The atmega168 has limited flash space. If using a bootloader, it is "
"recommended to use the Optiboot bootloader. To flash that bootloader use "
"something like:"
msgstr ""
"ATMEGA168 வரையறுக்கப்பட்ட ஃபிளாச் இடத்தைக் கொண்டுள்ளது. துவக்க ஏற்றி "
"பயன்படுத்தினால், ஆப்டிபூட் துவக்க ஏற்றி பயன்படுத்த பரிந்துரைக்கப்படுகிறது. "
"அந்த துவக்க ஏற்றி போன்ற ஒன்றைப் பயன்படுத்துங்கள்:"

msgid "To flash an application via the Optiboot bootloader use something like:"
msgstr ""
"ஆப்டிபூட் துவக்க ஏற்றி வழியாக ஒரு பயன்பாட்டை ஒளிரச் செய்ய இதுபோன்ற ஒன்றைப் "
"பயன்படுத்தவும்:"

msgid "SAM3 micro-controllers (Arduino Due)"
msgstr "SAM3 மைக்ரோ-கன்ட்ரோலர்கள் (Arduino காரணமாக)"

msgid ""
"It is not common to use a bootloader with the SAM3 mcu. The chip itself has a "
"ROM that allows the flash to be programmed from 3.3V serial port or from USB."
msgstr ""
"SAM3 MCU உடன் துவக்க ஏற்றி பயன்படுத்துவது பொதுவானதல்ல. சிப்பில் ஒரு ரோம் "
"உள்ளது, இது ஃபிளாச் 3.3 வி சீரியல் போர்ட்டிலிருந்து அல்லது யூ.எச்.பி."

msgid ""
"To enable the ROM, the \"erase\" pin is held high during a reset, which erases"
" the flash contents, and causes the ROM to run. On an Arduino Due, this "
"sequence can be accomplished by setting a baud rate of 1200 on the "
"\"programming usb port\" (the USB port closest to the power supply)."
msgstr ""
"ROM ஐ இயக்க, மீட்டமைப்பின் போது \"அழித்தல்\" முள் அதிகமாக உள்ளது, இது ஃபிளாச் "
"உள்ளடக்கங்களை அழிக்கிறது, மேலும் ரோம் இயங்குகிறது. ஒரு ஆர்டுயினோவில், "
"\"புரோகிராமிங் யூ.எச்.பி துறைமுகம்\" (மின்சார விநியோகத்திற்கு மிக நெருக்கமான "
"யூ.எச்.பி போர்ட்) இல் 1200 என்ற பாட் வீதத்தை அமைப்பதன் மூலம் இந்த வரிசையை "
"நிறைவேற்ற முடியும்."

msgid "SAM4 micro-controllers (Duet Wifi)"
msgstr "SAM4S மைக்ரோகண்ட்ரோலர் (டூயட் வைஃபை)"

msgid ""
"It is not common to use a bootloader with the SAM4 mcu. The chip itself has a "
"ROM that allows the flash to be programmed from 3.3V serial port or from USB."
msgstr ""
"SAM4 MCU உடன் துவக்க ஏற்றி பயன்படுத்துவது பொதுவானதல்ல. சிப்பில் ஒரு ரோம் "
"உள்ளது, இது ஃபிளாச் 3.3 வி சீரியல் போர்ட்டிலிருந்து அல்லது யூ.எச்.பி."

msgid ""
"To enable the ROM, the \"erase\" pin is held high during a reset, which erases"
" the flash contents, and causes the ROM to run."
msgstr ""
"ROM ஐ இயக்க, மீட்டமைப்பின் போது \"அழித்தல்\" முள் அதிகமாக உள்ளது, இது ஃபிளாச் "
"உள்ளடக்கங்களை அழிக்கிறது, மேலும் ரோம் இயங்குகிறது."

msgid "SAMD21 micro-controllers (Arduino Zero)"
msgstr "SAMD21 மைக்ரோ-கன்ட்ரோலர்கள் (ஆர்டுயினோ சீரோ)"

msgid ""
"The SAMD21 bootloader is flashed via the ARM Serial Wire Debug (SWD) "
"interface. This is commonly done with a dedicated SWD hardware dongle. "
"Alternatively, one can use a [Raspberry Pi with OpenOCD](#running-openocd-on-"
"the-raspberry-pi)."
msgstr ""
"SAMD21 துவக்க ஏற்றி கை சீரியல் கம்பி பிழைத்திருத்த (SWD) இடைமுகம் வழியாக "
"ஒளிரும். இது பொதுவாக ஒரு பிரத்யேக SWD வன்பொருள் டாங்கிள் மூலம் "
"செய்யப்படுகிறது. மாற்றாக, ஒருவர் [ஓபன்ஓசிடி உடன் ராச்பெர்ரி பை] "
"(#ரன்னிங்-ஓபெனோக்ட்-ஆன்-தி-ராச்பெர்ரி-பிஐ) பயன்படுத்தலாம்."

msgid "To flash a bootloader with OpenOCD use the following chip config:"
msgstr ""
"OpenOCD உடன் துவக்க ஏற்றி ஒளிரச் செய்ய பின்வரும் சிப் உள்ளமைவைப் "
"பயன்படுத்தவும்:"

msgid "Obtain a bootloader - for example:"
msgstr "ஒரு துவக்க ஏற்றியைப் பெறுங்கள் - எடுத்துக்காட்டாக:"

msgid "Flash with OpenOCD commands similar to:"
msgstr "ஓபன்ஓசிடி கட்டளைகளுடன் ஃபிளாச் இதுபோன்றது:"

msgid ""
"The most common bootloader on the SAMD21 is the one found on the \"Arduino "
"Zero\". It uses an 8KiB bootloader (the application must be compiled with a "
"start address of 8KiB). One can enter this bootloader by double clicking the "
"reset button. To flash an application use something like:"
msgstr ""
"SAMD21 இல் மிகவும் பொதுவான துவக்க ஏற்றி \"Arduino பூச்சியத்தில்\" "
"காணப்படுகிறது. இது 8kib துவக்க ஏற்றி பயன்படுத்துகிறது (பயன்பாடு 8kib இன் "
"தொடக்க முகவரியுடன் தொகுக்கப்பட வேண்டும்). மீட்டமை பொத்தானை இருமுறை சொடுக்கு "
"செய்வதன் மூலம் இந்த துவக்க ஏற்றியை உள்ளிடலாம். ஒரு பயன்பாட்டை ஒளிரச் செய்ய "
"இதுபோன்ற ஒன்றைப் பயன்படுத்தவும்:"

msgid ""
"In contrast, the \"Arduino M0\" uses a 16KiB bootloader (the application must "
"be compiled with a start address of 16KiB). To flash an application on this "
"bootloader, reset the micro-controller and run the flash command within the "
"first few seconds of boot - something like:"
msgstr ""
"இதற்கு நேர்மாறாக, \"Arduino M0\" 16kib துவக்க ஏற்றியைப் பயன்படுத்துகிறது "
"(பயன்பாடு 16kib இன் தொடக்க முகவரியுடன் தொகுக்கப்பட வேண்டும்). இந்த துவக்க "
"ஏற்றியில் ஒரு பயன்பாட்டை ஒளிரச் செய்ய, மைக்ரோ -கன்ட்ரோலரை மீட்டமைத்து, "
"துவக்கத்தின் முதல் சில நொடிகளில் ஃபிளாச் கட்டளையை இயக்கவும் - இது போன்றது:"

msgid "SAMD51 micro-controllers (Adafruit Metro-M4 and similar)"
msgstr "SAMD51 மைக்ரோ-கன்ட்ரோலர்கள் (அடாஃப்ரூட் மெட்ரோ-எம் 4 மற்றும் ஒத்த)"

msgid ""
"Like the SAMD21, the SAMD51 bootloader is flashed via the ARM Serial Wire "
"Debug (SWD) interface. To flash a bootloader with [OpenOCD on a Raspberry "
"Pi](#running-openocd-on-the-raspberry-pi) use the following chip config:"
msgstr ""
"SAMD21 ஐப் போலவே, SAMD51 துவக்க ஏற்றி கை சீரியல் கம்பி பிழைத்திருத்த (SWD) "
"இடைமுகம் வழியாக ஒளிரும். [ராச்பெர்ரி பை மீது ஓபன்ஓசிடி] "
"(#ரன்னிங்-ஓபெனோக்ட்-ஆன்-தி-ராச்பெர்ரி-பிஐ) உடன் ஒரு துவக்க ஏற்றியை ஒளிரச் "
"செய்ய பின்வரும் சிப் கட்டமைப்பைப் பயன்படுத்தவும்:"

msgid ""
"The SAMD51 uses a 16KiB bootloader (the application must be compiled with a "
"start address of 16KiB). To flash an application use something like:"
msgstr ""
"SAMD51 16KIB துவக்க ஏற்றியைப் பயன்படுத்துகிறது (பயன்பாடு 16KIB இன் தொடக்க "
"முகவரியுடன் தொகுக்கப்பட வேண்டும்). ஒரு பயன்பாட்டை ஒளிரச் செய்ய இதுபோன்ற "
"ஒன்றைப் பயன்படுத்தவும்:"

msgid "STM32F103 micro-controllers (Blue Pill devices)"
msgstr "STM32F103 மைக்ரோ-கன்ட்ரோலர்கள் (நீல மாத்திரை சாதனங்கள்)"

msgid ""
"After flashing, set both \"boot 0\" and \"boot 1\" back to low so that future "
"resets boot from flash."
msgstr ""
"ஒளிரும் பிறகு, \"பூட் 0\" மற்றும் \"துவக்க 1\" இரண்டையும் குறைவாக அமைக்கவும், "
"இதனால் எதிர்காலம் ஃப்ளாச் மூலம் துவக்கத்தை மீட்டமைக்கிறது."

msgid "STM32F103 with stm32duino bootloader"
msgstr "STM32F103 STM32Duino Boottloader உடன்"

msgid "This bootloader can be flashed via 3.3V serial with something like:"
msgstr ""
"இந்த துவக்க ஏற்றி 3.3 வி சீரியல் வழியாக இதுபோன்ற ஒன்றைக் கொண்டிருக்கலாம்:"

msgid ""
"This bootloader uses 8KiB of flash space (the application must be compiled "
"with a start address of 8KiB). Flash an application with something like:"
msgstr ""
"இந்த துவக்க ஏற்றி 8 கிப் ஃபிளாச் இடத்தைப் பயன்படுத்துகிறது (பயன்பாடு 8KIB இன் "
"தொடக்க முகவரியுடன் தொகுக்கப்பட வேண்டும்). போன்ற ஒரு பயன்பாட்டை ஒளிரச் "
"செய்யுங்கள்:"

msgid ""
"The bootloader typically runs for only a short period after boot. It may be "
"necessary to time the above command so that it runs while the bootloader is "
"still active (the bootloader will flash a board led while it is running). "
"Alternatively, set the \"boot 0\" pin to low and \"boot 1\" pin to high to "
"stay in the bootloader after a reset."
msgstr ""
"துவக்க ஏற்றி பொதுவாக துவக்கத்திற்குப் பிறகு ஒரு குறுகிய காலத்திற்கு மட்டுமே "
"இயங்கும். மேலே உள்ள கட்டளையை நேரம் செய்ய வேண்டியது தேவை, இதனால் துவக்க ஏற்றி "
"இன்னும் செயலில் இருக்கும்போது அது இயங்கும் (துவக்க ஏற்றி இயங்கும் போது ஒரு "
"போர்டு எல்.ஈ.டி ஒளிரும்). மாற்றாக, மீட்டமைக்கப்பட்ட பிறகு துவக்க ஏற்றியில் "
"தங்குவதற்கு \"பூட் 0\" முள் குறைவாகவும், \"துவக்க 1\" முள் உயரமாகவும் "
"அமைக்கவும்."

msgid "STM32F103 with HID bootloader"
msgstr "HID துவக்க ஏற்றியுடன் STM32F103"

msgid ""
"It is not possible to use stm32flash for the SKR Mini E3 as the boot0 pin is "
"tied directly to ground and not broken out via header pins. It is recommended "
"to use a STLink V2 with STM32Cubeprogrammer to flash the bootloader. If you "
"don't have access to a STLink it is also possible to use a [Raspberry Pi and "
"OpenOCD](#running-openocd-on-the-raspberry-pi) with the following chip config:"
msgstr ""
"SKR மினி E3 க்கு STM32flash ஐப் பயன்படுத்த முடியாது, ஏனெனில் பூட் 0 முள் "
"நேரடியாக தரையில் பிணைக்கப்பட்டுள்ளது மற்றும் தலைப்பு ஊசிகள் வழியாக "
"உடைக்கப்படவில்லை. துவக்க ஏற்றியை ஒளிரச் செய்ய STM32CubeProgrammer உடன் STLINK "
"V2 ஐப் பயன்படுத்த பரிந்துரைக்கப்படுகிறது. உங்களுக்கு ஒரு ச்ட்லிங்க் அணுகல் "
"இல்லையென்றால், பின்வரும் சிப் உள்ளமைவுடன் ஒரு [ராச்பெர்ரி பை மற்றும் "
"ஓபன்ஓசிடி] (#ரன்னிங்-ஓபெனோக்ட்-ஆன்-தி-ராச்பெர்ரி-பிஐ) பயன்படுத்தவும் முடியும்:"

msgid ""
"If you wish you can make a backup of the current flash with the following "
"command. Note that it may take some time to complete:"
msgstr ""
"நீங்கள் விரும்பினால், தற்போதைய ஃபிளாச் பின்வரும் கட்டளையுடன் காப்புப்பிரதி "
"எடுக்கலாம். முடிக்க சிறிது நேரம் ஆகலாம் என்பதை நினைவில் கொள்க:"

msgid "finally, you can flash with commands similar to:"
msgstr "இறுதியாக, நீங்கள் ஒத்த கட்டளைகளுடன் ஒளிரலாம்:"

msgid "NOTES:"
msgstr "குறிப்புகள்:"

msgid ""
"The example above erases the chip then programs the bootloader. Regardless of "
"the method chosen to flash it is recommended to erase the chip prior to "
"flashing."
msgstr ""
"மேலே உள்ள எடுத்துக்காட்டு சிப்பை அழிக்கிறது, பின்னர் துவக்க ஏற்றியை நிரல் "
"செய்கிறது. ஃபிளாச் செய்ய தேர்ந்தெடுக்கப்பட்ட முறையைப் பொருட்படுத்தாமல், "
"ஒளிரும் முன் சிப்பை அழிக்க பரிந்துரைக்கப்படுகிறது."

msgid ""
"Prior flashing the SKR Mini E3 with this bootloader you should be aware that "
"you will no longer be able to update firmware via the sdcard."
msgstr ""
"இந்த துவக்க ஏற்றி மூலம் எச்.கே.ஆர் மினி இ 3 ஐ ஒளிரச் செய்வதற்கு முன், நீங்கள் "
"இனி எச்.டி.கார்டு வழியாக ஃபார்ம்வேரைப் புதுப்பிக்க முடியாது என்பதை நீங்கள் "
"அறிந்திருக்க வேண்டும்."

msgid ""
"This bootloader requires 2KiB of flash space (the application must be compiled"
" with a start address of 2KiB)."
msgstr ""
"இந்த துவக்க ஏற்றிக்கு 2 கிப் ஃபிளாச் இடம் தேவைப்படுகிறது (பயன்பாடு 2KIB இன் "
"தொடக்க முகவரியுடன் தொகுக்கப்பட வேண்டும்)."

msgid ""
"The hid-flash program is used to upload a binary to the bootloader. You can "
"install this software with the following commands:"
msgstr ""
"துவக்க ஏற்றிக்கு பைனரியைப் பதிவேற்ற HID FLASH நிரல் பயன்படுத்தப்படுகிறது. இந்த"
" மென்பொருளை பின்வரும் கட்டளைகளுடன் நிறுவலாம்:"

msgid "If the bootloader is running you can flash with something like:"
msgstr "துவக்க ஏற்றி இயங்கினால், நீங்கள் போன்ற ஒன்றைக் கொண்டு ஒளிரலாம்:"

msgid "alternatively, you can use `make flash` to flash klipper directly:"
msgstr ""
"மாற்றாக, கிளிப்பரை நேரடியாக ஃபிளாச் செய்ய `மேக் ஃப்ளாச்` ஐப் பயன்படுத்தலாம்:"

msgid "OR if klipper has been previously flashed:"
msgstr "அல்லது கிளிப்பர் முன்பு ஒளிரப்பட்டிருந்தால்:"

msgid "STM32F4 micro-controllers (SKR Pro 1.1)"
msgstr "STM32F4 மைக்ரோ-கன்ட்ரோலர்கள் (SKR PRO 1.1)"

msgid ""
"This bootloader requires 16Kib of flash space on the STM32F4 (the application "
"must be compiled with a start address of 16KiB)."
msgstr ""
"இந்த துவக்க ஏற்றிக்கு STM32F4 இல் 16 கிப் ஃபிளாச் இடம் தேவைப்படுகிறது "
"(பயன்பாடு 16KIB இன் தொடக்க முகவரியுடன் தொகுக்கப்பட வேண்டும்)."

msgid ""
"As with the STM32F1, the STM32F4 uses the hid-flash tool to upload binaries to"
" the MCU. See the instructions above for details on how to build and use hid-"
"flash."
msgstr ""
"STM32F1 ஐப் போலவே, STM32F4 MCU இல் பைனரிகளைப் பதிவேற்ற HID FLASH கருவியைப் "
"பயன்படுத்துகிறது. HID-FLASH ஐ எவ்வாறு உருவாக்குவது மற்றும் பயன்படுத்துவது "
"என்பது குறித்த விவரங்களுக்கு மேலே உள்ள வழிமுறைகளைப் பார்க்கவும்."

msgid ""
"It may be necessary to manually enter the bootloader, this can be done by "
"setting \"boot 0\" low, \"boot 1\" high and plugging in the device. After "
"programming is complete unplug the device and set \"boot 1\" back to low so "
"the application will be loaded."
msgstr ""
"துவக்க ஏற்றியை கைமுறையாக உள்ளிடுவது அவசியமாக இருக்கலாம், இதை \"துவக்க 0\" "
"குறைந்த, \"துவக்க 1\" உயர் அமைப்பதன் மூலமும் சாதனத்தில் செருகுவதன் மூலமும் "
"செய்ய முடியும். நிரலாக்கமானது சாதனத்தை அவிழ்த்துவிட்டு, \"துவக்க 1\" ஐ "
"மீண்டும் குறைவாக அமைக்கவும், எனவே பயன்பாடு ஏற்றப்படும்."

msgid "LPC176x micro-controllers (Smoothieboards)"
msgstr "எல்பிசி 1768 மைக்ரோகண்ட்ரோலர் (ச்மூத்த்போர்டு)"

msgid "Running OpenOCD on the Raspberry PI"
msgstr "ராச்பெர்ரி பையில் ஓபன்ஓக்ட் இயங்குகிறது"

msgid ""
"OpenOCD is a software package that can perform low-level chip flashing and "
"debugging. It can use the GPIO pins on a Raspberry Pi to communicate with a "
"variety of ARM chips."
msgstr ""
"OpenOCD என்பது ஒரு மென்பொருள் தொகுப்பாகும், இது குறைந்த அளவிலான சிப் ஒளிரும் "
"மற்றும் பிழைத்திருத்தத்தை செய்ய முடியும். இது பலவிதமான கை சில்லுகளுடன் தொடர்பு"
" கொள்ள ராச்பெர்ரி பையில் GPIO ஊசிகளைப் பயன்படுத்தலாம்."

msgid ""
"Begin by downloading and compiling the software (each step may take several "
"minutes and the \"make\" step may take 30+ minutes):"
msgstr ""
"மென்பொருளைப் பதிவிறக்கம் செய்து தொகுத்தல் மூலம் தொடங்கவும் (ஒவ்வொரு அடியும் பல"
" நிமிடங்கள் ஆகலாம், மேலும் \"மேக்\" படி 30+ நிமிடங்கள் ஆகலாம்):"

msgid "Configure OpenOCD"
msgstr "OpenOCD ஐ உள்ளமைக்கவும்"

msgid "Create an OpenOCD config file:"
msgstr "OpenOCD கட்டமைப்பு கோப்பை உருவாக்கவும்:"

msgid "Use a config similar to the following:"
msgstr "பின்வருவனவற்றைப் போன்ற ஒரு உள்ளமைவைப் பயன்படுத்தவும்:"

msgid "Wire the Raspberry Pi to the target chip"
msgstr "ராச்பெர்ரி பை இலக்கு சிப்பிற்கு கம்பி"

msgid ""
"Poweroff both the the Raspberry Pi and the target chip before wiring! Verify "
"the target chip uses 3.3V prior to connecting to a Raspberry Pi!"
msgstr ""
"வயரிங் முன் ராச்பெர்ரி பை மற்றும் இலக்கு சிப் இரண்டையும் பவர்ஆஃப்! ராச்பெர்ரி "
"பைவுடன் இணைப்பதற்கு முன் இலக்கு சிப் 3.3V ஐப் பயன்படுத்துகிறது என்பதை "
"சரிபார்க்கவும்!"

msgid ""
"Connect GND, SWDCLK, SWDIO, and RST on the target chip to GND, GPIO25, GPIO24,"
" and GPIO18 respectively on the Raspberry Pi."
msgstr ""
"ராச்பெர்ரி பை மீது முறையே சி.என்.டி, சி.பி.ஐ.ஓ 25, சி.பி.ஐ.ஓ 24 மற்றும் "
"சி.பி.ஐ.ஓ 18 உடன் இலக்கு சிப்பில் சி.என்.டி, எச்.டபிள்யூ.டி.சி.எல், "
"எச்.டபிள்யூ.டி.ஐ.ஓ மற்றும் ஆர்.எச்.டி ஆகியவற்றை இணைக்கவும்."

msgid "Then power up the Raspberry Pi and provide power to the target chip."
msgstr "பின்னர் ராச்பெர்ரி பைவை இயக்கி, இலக்கு சிப்பிற்கு சக்தியை வழங்கவும்."

msgid "Run OpenOCD"
msgstr "OpenOCD ஐ இயக்கவும்"

msgid "Run OpenOCD:"
msgstr "OpenOCD ஐ இயக்கவும்:"

msgid ""
"The above should cause OpenOCD to emit some text messages and then wait (it "
"should not immediately return to the Unix shell prompt). If OpenOCD exits on "
"its own or if it continues to emit text messages then double check the wiring."
msgstr ""
"மேலே உள்ளவை OpenOCD சில குறுஞ்செய்திகளை வெளியிட்டு பின்னர் காத்திருக்க "
"வேண்டும் (அது உடனடியாக யூனிக்ச் செல் வரியில் திரும்பக்கூடாது). OpenOCD அதன் "
"சொந்தமாக வெளியேறினால் அல்லது அது தொடர்ந்து குறுஞ்செய்திகளை வெளியிட்டால், "
"வயரிங் இருமுறை சரிபார்க்கவும்."

msgid ""
"Once OpenOCD is running and is stable, one can send it commands via telnet. "
"Open another ssh session and run the following:"
msgstr ""
"OpenOCD இயங்கும் மற்றும் நிலையானதாக இருந்தால், ஒருவர் அதை டெல்நெட் வழியாக "
"கட்டளைகளை அனுப்பலாம். மற்றொரு பாஓடு அமர்வைத் திறந்து பின்வருவனவற்றை இயக்கவும்:"

msgid ""
"(One can exit telnet by pressing ctrl+] and then running the \"quit\" "
"command.)"
msgstr ""
"(Ctrl+] ஐ அழுத்துவதன் மூலம் ஒருவர் டெல்நெட்டிலிருந்து வெளியேறலாம், பின்னர் "
"\"வெளியேறு\" கட்டளையை இயக்கலாம்.)"

msgid "OpenOCD and gdb"
msgstr "OpenOCD மற்றும் GDB"

msgid ""
"It is possible to use OpenOCD with gdb to debug Klipper. The following "
"commands assume one is running gdb on a desktop class machine."
msgstr ""
"கிளிப்பரை பிழைத்திருத்த சி.டி.பி உடன் ஓபன்ஓசிடியைப் பயன்படுத்த முடியும். "
"ஒருவர் டெச்க்டாப் வகுப்பு கணினியில் GDB ஐ இயக்குகிறார் என்று பின்வரும் "
"கட்டளைகள் கருதுகின்றன."

msgid "Add the following to the OpenOCD config file:"
msgstr "OpenOCD கட்டமைப்பு கோப்பில் பின்வருவனவற்றைச் சேர்க்கவும்:"

msgid ""
"Restart OpenOCD on the Raspberry Pi and then run the following Unix command on"
" the desktop machine:"
msgstr ""
"ராச்பெர்ரி பை மீது OpenOCD ஐ மறுதொடக்கம் செய்து, பின்னர் டெச்க்டாப் கணினியில் "
"பின்வரும் யூனிக்ச் கட்டளையை இயக்கவும்:"

msgid "Within gdb run:"
msgstr "GDB ரன்னுக்குள்:"

msgid ""
"(Replace \"octopi\" with the host name of the Raspberry Pi.) Once gdb is "
"running it is possible to set breakpoints and to inspect registers."
msgstr ""
"(Replace \"octopi\" with the விருந்தோம்பி பெயர் of the புற்றுப்பழம் Pi.) Once "
"gdb is running it is possible பெறுநர் கணம் breakpoints and பெறுநர் inspect "
"registers."

#: docs/Bootloaders.md:block 1 (header)
msgid "Bootloaders"
msgstr "துவக்க ஏற்றிகள்"

#: docs/Bootloaders.md:block 7 (paragraph)
msgid ""
"In general, the Arduino project is a good reference for bootloaders and "
"flashing procedures on the 8-bit Atmel Atmega micro-controllers. In "
"particular, the \"boards.txt\" file: "
"<https://github.com/arduino/Arduino/blob/1.8.5/hardware/arduino/avr/boards.txt>"
" is a useful reference."
msgstr ""
"பொதுவாக, 8-பிட் அட்மெல் அட்மகா மைக்ரோ-கன்ட்ரோலர்களில் துவக்க ஏற்றிகள் மற்றும் "
"ஒளிரும் நடைமுறைகளுக்கு ARDUINO திட்டம் ஒரு நல்ல குறிப்பு ஆகும். குறிப்பாக, "
"\"போர்டுகள்."

#: docs/Bootloaders.md:block 32 (paragraph)
msgid ""
"The Teensy++ device from pjrc.com comes with a proprietary bootloader. It "
"requires a custom flashing tool from "
"<https://github.com/PaulStoffregen/teensy_loader_cli>. One can flash an "
"application with it using something like:"
msgstr ""
"Pjrc.com இலிருந்து டீன் ஏச் ++ சாதனம் தனியுரிம துவக்க ஏற்றி மூலம் வருகிறது. "
"இதற்கு <https://github.com/paulstoffregen/teensy_loader_cli> இலிருந்து "
"தனிப்பயன் ஒளிரும் கருவி தேவைப்படுகிறது. இதுபோன்ற ஒன்றைப் பயன்படுத்தி ஒரு "
"பயன்பாட்டை ஒளிரச் செய்யலாம்:"

#: docs/Bootloaders.md:block 42 (paragraph)
msgid ""
"The code at <https://github.com/shumatech/BOSSA> can be used to program the "
"SAM3. It is recommended to use version 1.9 or later."
msgstr ""
"<https://github.com/shumatech/bossa> இல் உள்ள குறியீட்டை SAM3 ஐ நிரல் செய்ய "
"பயன்படுத்தலாம். பதிப்பு 1.9 அல்லது அதற்குப் பிறகு பயன்படுத்த "
"பரிந்துரைக்கப்படுகிறது."

#: docs/Bootloaders.md:block 48 (paragraph)
msgid ""
"The code at <https://github.com/shumatech/BOSSA> can be used to program the "
"SAM4. It is necessary to use version `1.8.0` or higher."
msgstr ""
"<https://github.com/shumatech/bossa> இல் உள்ள குறியீட்டை SAM4 ஐ நிரல் செய்ய "
"பயன்படுத்தலாம். `1.8.0` அல்லது அதற்கு மேற்பட்ட பதிப்பைப் பயன்படுத்துவது தேவை."

#: docs/Bootloaders.md:block 66 (paragraph)
msgid ""
"Obtain a bootloader - several bootloaders are available from "
"<https://github.com/adafruit/uf2-samdx1/releases/latest>. For example:"
msgstr ""
"ஒரு துவக்க ஏற்றியைப் பெறுங்கள் - பல துவக்க ஏற்றிகள் "
"<https://github.com/adafruit/uf2-samdx1/releases/latest> இலிருந்து "
"கிடைக்கின்றன. உதாரணமாக:"

#: docs/Bootloaders.md:block 78 (paragraph)
msgid ""
"The \"stm32duino\" project has a USB capable bootloader - see: "
"<https://github.com/rogerclarkmelbourne/STM32duino-bootloader>"
msgstr ""
"\"STM32Duino\" திட்டத்தில் யூ.எச்.பி திறன் கொண்ட துவக்க ஏற்றி உள்ளது - காண்க: "
"<https://github.com/rogerclarkmelbourne/stm32duino-bootloader>"

#: docs/Bootloaders.md:block 113 (paragraph)
msgid ""
"This document does not describe the method to flash a bootloader itself - see:"
" <http://smoothieware.org/flashing-the-bootloader> for further information on "
"that topic."
msgstr ""
"இந்த ஆவணம் ஒரு துவக்க ஏற்றியை ஒளிரச் செய்வதற்கான முறையை விவரிக்கவில்லை-காண்க: "
"<http://smoothieware.org/flashing-the-bootloader> அந்த தலைப்பில் மேலதிக "
"தகவல்களுக்கு."

#: docs/Bootloaders.md:block 114 (paragraph)
msgid ""
"It is common for Smoothieboards to come with a bootloader from: "
"<https://github.com/triffid/LPC17xx-DFU-Bootloader>. When using this "
"bootloader the application must be compiled with a start address of 16KiB. The"
" easiest way to flash an application with this bootloader is to copy the "
"application file (eg, `out/klipper.bin`) to a file named `firmware.bin` on an "
"SD card, and then to reboot the micro-controller with that SD card."
msgstr ""
"மிருதுவான போர்டுகள் ஒரு துவக்க ஏற்றியுடன் வருவது பொதுவானது: "
"<https://github.com/triffid/lpc17xx-dfu-bootloader>. இந்த துவக்க ஏற்றியைப் "
"பயன்படுத்தும் போது பயன்பாடு 16KIB இன் தொடக்க முகவரியுடன் தொகுக்கப்பட வேண்டும்."
" இந்த துவக்க ஏற்றி மூலம் ஒரு பயன்பாட்டை ஒளிரச் செய்வதற்கான எளிதான வழி, "
"பயன்பாட்டு கோப்பை (எ.கா., `அவுட்/கிளிப்பர்.பின்`) ஒரு எச்டி கார்டில்` "
"ஃபார்ம்வேர்.பின்` என்ற கோப்பில் நகலெடுக்கவும், பின்னர் மைக்ரோ-கன்ட்ரோலரை "
"மீண்டும் துவக்கவும் அந்த எச்டி அட்டை."

#: docs/Bootloaders.md:block 117 (paragraph)
msgid ""
"This section describes how one can install and launch OpenOCD. It is derived "
"from the instructions at: <https://learn.adafruit.com/programming-"
"microcontrollers-using-openocd-on-raspberry-pi>"
msgstr ""
"OpenOCD ஐ எவ்வாறு நிறுவலாம் மற்றும் தொடங்கலாம் என்பதை இந்த பிரிவு "
"விவரிக்கிறது. இது அறிவுறுத்தல்களிலிருந்து பெறப்பட்டது: "
"<https://learn.adafruit.com/programming-microcontrollers-using-openocd-on-"
"raspberry-pi-pi>"

#: docs/Bootloaders.md:block 75 (paragraph)
msgid ""
"Note that if one is using a Raspberry Pi for the 3.3V serial, the stm32flash "
"protocol uses a serial parity mode which the Raspberry Pi's \"mini UART\" does"
" not support. See "
"<https://www.raspberrypi.com/documentation/computers/configuration.html#configuring-"
"uarts> for details on enabling the full uart on the Raspberry Pi GPIO pins."
msgstr ""
"3.3 வி சீரியலுக்கு ஒருவர் ராச்பெர்ரி பி.ஐ.யைப் பயன்படுத்துகிறார் என்றால், "
"எச்.டி.எம் 32 ஃப்ளாச் நெறிமுறை ஒரு தொடர் சமநிலை பயன்முறையைப் பயன்படுத்துகிறது,"
" இது ராச்பெர்ரி பியின் \"மினி யுஆர்ட்\" ஆதரிக்காது. ராச்பெர்ரி பை சி.பி.ஐ.ஓ "
"ஊசிகளில் முழு யுஆர்ட்டை இயக்குவது குறித்த விவரங்களுக்கு "
"<https://www.raspberrypi.com/documentation/computers/configuration.html#configuring-"
"uarts> ஐப் பார்க்கவும்."

#: docs/Bootloaders.md:block 85 (paragraph)
msgid ""
"The [HID bootloader](https://github.com/Serasidis/STM32_HID_Bootloader) is a "
"compact, driverless bootloader capable of flashing over USB. Also available is"
" a [fork with builds specific to the SKR Mini E3 "
"1.2](https://github.com/Arksine/STM32_HID_Bootloader/releases/latest)."
msgstr ""
"[HID BOOTLOADER] (https://github.com/serasidis/stm32_hid_bootloader) என்பது "
"யூ.எச்.பி மீது ஒளிரும் திறன் கொண்ட ஒரு சிறிய, இயக்கி இல்லாத துவக்க ஏற்றி "
"ஆகும். [எச்.கே.ஆர் மினி இ 3 1.2] "
"(https://github.com/arksine/STM32_HID_BOOTLOADER/RELEASES/LATEST) க்கு "
"குறிப்பிட்ட கட்டமைப்பைக் கொண்ட முட்கரண்டி)."

#: docs/Bootloaders.md:block 105 (header)
msgid "STM32F103/STM32F072 with MSC bootloader"
msgstr "MSC துவக்க ஏற்றி உடன் STM32F103/STM32F072"

#: docs/Bootloaders.md:block 106 (paragraph)
msgid ""
"The [MSC bootloader](https://github.com/Telekatz/MSC-stm32f103-bootloader) is "
"a driverless bootloader capable of flashing over USB."
msgstr ""
"[MSC துவக்க ஏற்றி] (https://github.com/telekatz/msc-stm32f103-bootloader) "
"என்பது யூ.எச்.பி மீது ஒளிரும் திறன் கொண்ட இயக்கி இல்லாத துவக்க ஏற்றி ஆகும்."

#: docs/Bootloaders.md:block 108 (paragraph)
msgid ""
"For STM32F072 boards it is also possible to flash the bootloader over USB (via"
" DFU) with something like:"
msgstr ""
"STM32F072 பலகைகளுக்கு யூ.எச்.பி (டி.எஃப்.யூ வழியாக) மீது துவக்க ஏற்றியை ஒளிரச்"
" செய்யலாம்:"

#: docs/Bootloaders.md:block 110 (paragraph)
msgid ""
"This bootloader uses 8KiB or 16KiB of flash space, see description of the "
"bootloader (the application must be compiled with with the corresponding "
"starting address)."
msgstr ""
"இந்த துவக்க ஏற்றி 8 கிப் அல்லது 16 கிப் ஃபிளாச் இடத்தைப் பயன்படுத்துகிறது, "
"துவக்க ஏற்றியின் விளக்கத்தைப் பார்க்கவும் (பயன்பாடு தொடர்புடைய தொடக்க "
"முகவரியுடன் தொகுக்கப்பட வேண்டும்)."

#: docs/Bootloaders.md:block 111 (paragraph)
msgid ""
"The bootloader can be activated by pressing the reset button of the board "
"twice. As soon as the bootloader is activated, the board appears as a USB "
"flash drive onto which the klipper.bin file can be copied."
msgstr ""
"பலகையின் மீட்டமைப்பு பொத்தானை இரண்டு முறை அழுத்துவதன் மூலம் துவக்க ஏற்றி "
"செயல்படுத்தப்படலாம். துவக்க ஏற்றி செயல்படுத்தப்பட்டவுடன், பலகை யூ.எச்.பி "
"ஃபிளாச் டிரைவாக தோன்றும், அதில் klipper.bin கோப்பை நகலெடுக்க முடியும்."

#: docs/Bootloaders.md:block 73 (paragraph)
msgid ""
"The STM32F103 devices have a ROM that can flash a bootloader or application "
"via 3.3V serial. Typically one would wire the PA10 (MCU Rx) and PA9 (MCU Tx) "
"pins to a 3.3V UART adapter. To access the ROM, one should connect the \"boot "
"0\" pin to high and \"boot 1\" pin to low, and then reset the device. The "
"\"stm32flash\" package can then be used to flash the device using something "
"like:"
msgstr ""
"STM32F103 சாதனங்களில் ஒரு ரோம் உள்ளது, இது ஒரு துவக்க ஏற்றி அல்லது பயன்பாட்டை "
"3.3V சீரியல் வழியாக ஒளிரச் செய்யலாம். பொதுவாக ஒருவர் PA10 (MCU RX) மற்றும் PA9"
" (MCU TX) ஊசிகளை 3.3V UART அடாப்டருக்கு கம்பி செய்வார். ROM ஐ அணுக, ஒருவர் "
"\"பூட் 0\" முள் உயரமாகவும், \"துவக்க 1\" முள் குறைவாகவும், பின்னர் சாதனத்தை "
"மீட்டமைக்க வேண்டும். \"STM32flash\" தொகுப்பு பின்னர் சாதனத்தை ஒளிரச் செய்ய "
"பயன்படுத்தப்படலாம்:"

#: docs/Bootloaders.md:block 112 (header)
msgid "STM32F103/STM32F0x2 with CanBoot bootloader"
msgstr "CANBOOT BOOTHLOADER உடன் STM32F103/STM32F0X2"

#: docs/Bootloaders.md:block 113 (paragraph)
msgid ""
"The [CanBoot](https://github.com/Arksine/CanBoot) bootloader provides an "
"option for uploading Klipper firmware over the CANBUS. The bootloader itself "
"is derived from Klipper's source code. Currently CanBoot supports the "
"STM32F103, STM32F042, and STM32F072 models."
msgstr ""
"[Canboot] (https://github.com/arksine/canboot) பூட்லோடர் கான்பச் மீது "
"கிளிப்பர் ஃபார்ம்வேரைப் பதிவேற்றுவதற்கான விருப்பத்தை வழங்குகிறது. துவக்க ஏற்றி"
" கிளிப்பரின் மூலக் குறியீட்டிலிருந்து பெறப்பட்டது. தற்போது கான்பூட் STM32F103,"
" STM32F042 மற்றும் STM32F072 மாதிரிகளை ஆதரிக்கிறது."

#: docs/Bootloaders.md:block 115 (paragraph)
msgid ""
"The first time CanBoot has been flashed it should detect that no application "
"is present and enter the bootloader. If this doesn't occur it is possible to "
"enter the bootloader by pressing the reset button twice in succession."
msgstr ""
"முதல் முறையாக கான்பூட் ஒளிரும் போது, எந்த பயன்பாடும் இல்லை என்பதைக் கண்டறிந்து"
" துவக்க ஏற்றியை உள்ளிட வேண்டும். இது நிகழவில்லை என்றால், மீட்டமை பொத்தானை "
"இரண்டு முறை அடுத்தடுத்து அழுத்துவதன் மூலம் துவக்க ஏற்றியை உள்ளிட முடியும்."

#: docs/Bootloaders.md:block 116 (paragraph)
msgid ""
"The `flash_can.py` utility supplied in the `lib/canboot` folder may be used to"
" upload Klipper firmware. The device UUID is necessary to flash. If you do not"
" have a UUID it is possible to query nodes currently running the bootloader:"
msgstr ""
"கிளிப்பர் ஃபார்ம்வேரைப் பதிவேற்ற `லிப்/கான்பூட்` கோப்புறையில் வழங்கப்பட்ட` "
"ஃப்ளாச்_கான்.பை` பயன்பாடு பயன்படுத்தப்படலாம். ஃபிளாச் செய்ய சாதனம் UUID தேவை. "
"உங்களிடம் UUID இல்லையென்றால், தற்போது துவக்க ஏற்றியை இயக்கும் முனைகளை வினவ "
"முடியும்:"

#: docs/Bootloaders.md:block 118 (paragraph)
msgid ""
"This will return UUIDs for all connected nodes not currently assigned a UUID. "
"This should include all nodes currently in the bootloader."
msgstr ""
"இது தற்போது UUID ஒதுக்கப்படாத அனைத்து இணைக்கப்பட்ட முனைகளுக்கும் UUID களைத் "
"தரும். இது தற்போது துவக்க ஏற்றியில் உள்ள அனைத்து முனைகளையும் கொண்டிருக்க "
"வேண்டும்."

#: docs/Bootloaders.md:block 119 (paragraph)
msgid "Once you have a UUID, you may upload firmware with following command:"
msgstr ""
"உங்களிடம் UUID கிடைத்ததும், பின்வரும் கட்டளையுடன் ஃபார்ம்வேரை பதிவேற்றலாம்:"

#: docs/Bootloaders.md:block 121 (paragraph)
msgid ""
"Where `aabbccddeeff` is replaced by your UUID. Note that the `-i` and `-f` "
"options may be omitted, they default to `can0` and `~/klipper/out/klipper.bin`"
" respectively."
msgstr ""
"`Aabbccddeeff` உங்கள் UUID ஆல் மாற்றப்படுகிறது. `-I` மற்றும்` -f` விருப்பங்கள்"
" தவிர்க்கப்படலாம் என்பதை நினைவில் கொள்க, அவை முறையே `can0` மற்றும்` "
"~/klipper/out/klipper.bin` க்கு இயல்புநிலையாக இருக்கும்."

#: docs/Bootloaders.md:block 122 (paragraph)
msgid ""
"When building Klipper for use with CanBoot, select the 8 KiB Bootloader "
"option."
msgstr ""
"கான்பூட் உடன் பயன்படுத்த கிளிப்பரை உருவாக்கும்போது, 8 KIB துவக்க ஏற்றி "
"விருப்பத்தைத் தேர்ந்தெடுக்கவும்."

#: docs/Bootloaders.md:block 86 (paragraph)
msgid ""
"For generic STM32F103 boards such as the blue pill it is possible to flash the"
" bootloader via 3.3V serial using stm32flash as noted in the stm32duino "
"section above, substituting the file name for the desired hid bootloader "
"binary (ie: hid_generic_pc13.bin for the blue pill)."
msgstr ""
"நீல மாத்திரை போன்ற பொதுவான STM32F103 பலகைகளுக்கு, மேலே உள்ள STM32Duino "
"பிரிவில் குறிப்பிடப்பட்டுள்ளபடி STM32flash ஐப் பயன்படுத்தி 3.3V சீரியல் வழியாக"
" துவக்க ஏற்றியை ஒளிரச் செய்ய முடியும், விரும்பிய HID துவக்க ஏற்றி பைனரிக்கு "
"(IE: HID_GENERIC_PC13.Bin க்கு கோப்பு பெயரை மாற்றுகிறது. )."

#: docs/Bootloaders.md:block 104 (paragraph)
msgid ""
"It may be necessary to manually enter the bootloader, this can be done by "
"setting \"boot 0\" low and \"boot 1\" high. On the SKR Mini E3 \"Boot 1\" is "
"not available, so it may be done by setting pin PA2 low if you flashed "
"\"hid_btt_skr_mini_e3.bin\". This pin is labeled \"TX0\" on the TFT header in "
"the SKR Mini E3's \"PIN\" document. There is a ground pin next to PA2 which "
"you can use to pull PA2 low."
msgstr ""
"துவக்க ஏற்றியை கைமுறையாக உள்ளிடுவது அவசியமாக இருக்கலாம், இதை \"பூட் 0\" "
"குறைந்த மற்றும் \"துவக்க 1\" உயர் அமைப்பதன் மூலம் இதைச் செய்யலாம். எச்.கே.ஆர் "
"மினி இ 3 \"பூட் 1\" இல் கிடைக்கவில்லை, எனவே நீங்கள் "
"\"HID_BTT_SKR_MINI_E3.BIN\" இந்த முள் எச்.கே.ஆர் மினி இ 3 இன் \"முள்\" "
"ஆவணத்தில் டிஎஃப்டி தலைப்பில் \"டிஎக்ச் 0\" என்று பெயரிடப்பட்டுள்ளது. PA2 க்கு "
"அடுத்ததாக ஒரு தரை முள் உள்ளது, இது PA2 ஐ குறைவாக இழுக்க பயன்படுத்தலாம்."

#: docs/Bootloaders.md:block 107 (paragraph)
msgid ""
"It is possible to flash the bootloader via 3.3V serial using stm32flash as "
"noted in the stm32duino section above, substituting the file name for the "
"desired MSC bootloader binary (ie: MSCboot-Bluepill.bin for the blue pill)."
msgstr ""
"மேலே உள்ள STM32Duino பிரிவில் குறிப்பிடப்பட்டுள்ளபடி STM32Flash ஐப் "
"பயன்படுத்தி 3.3V சீரியல் வழியாக துவக்க ஏற்றியை ஒளிரச் செய்ய முடியும், "
"விரும்பிய MSC துவக்க ஏற்றி பைனரியின் கோப்பு பெயரை மாற்றுகிறது (அதாவது நீல "
"மாத்திரைக்கு MSCBOOT-BLUEPILL.BIN)."

#: docs/Bootloaders.md:block 114 (paragraph)
msgid ""
"It is recommended to use a ST-Link Programmer to flash CanBoot, however it "
"should be possible to flash using `stm32flash` on STM32F103 devices, and `dfu-"
"util` on STM32F042/STM32F072 devices. See the previous sections in this "
"document for instructions on these flashing methods, substituting "
"`canboot.bin` for the file name where appropriate. The CanBoot repository "
"linked above provides instructions for building the bootloader."
msgstr ""
"கேன்பூட்டை ஃபிளாச் செய்ய எச்.டி-லிங்க் புரோகிராமரைப் பயன்படுத்த "
"பரிந்துரைக்கப்படுகிறது, இருப்பினும் எச்.டி.எம் 32 எஃப் 103 சாதனங்களில் "
"`எச்.டி.எம் 32 ஃப்ளாச்` ஐப் பயன்படுத்தி ஃபிளாச் செய்ய முடியும், மேலும் "
"எச்.டி.எம் 32 எஃப் 042/எச்.டி.எம் 32 எஃப் 072 சாதனங்களில்` டி.எஃப்.யூ-யுடில்`."
" இந்த ஒளிரும் முறைகள் குறித்த வழிமுறைகளுக்கு இந்த ஆவணத்தில் உள்ள முந்தைய "
"பிரிவுகளைப் பார்க்கவும், பொருத்தமான இடங்களில் கோப்பு பெயருக்கு `canboot.bin` ஐ"
" மாற்றியமைத்தல். மேலே இணைக்கப்பட்ட கான்பூட் களஞ்சியமானது துவக்க ஏற்றியை "
"உருவாக்குவதற்கான வழிமுறைகளை வழங்குகிறது."

#: docs/Bootloaders.md:block 124 (paragraph)
msgid ""
"STM32F4 micro-controllers come equipped with a built-in system bootloader "
"capable of flashing over USB (via DFU), 3.3V Serial, and various other methods"
" (see STM Document AN2606 for more information). Some STM32F4 boards, such as "
"the SKR Pro 1.1, are not able to enter the DFU bootloader. The HID bootloader "
"is available for STM32F405/407 based boards should the user prefer flashing "
"over USB over using the sdcard. Note that you may need to configure and build "
"a version specific to your board, a [build for the SKR Pro 1.1 is available "
"here](https://github.com/Arksine/STM32_HID_Bootloader/releases/latest)."
msgstr ""
"STM32F4 மைக்ரோ-கன்ட்ரோலர்கள் யூ.எச்.பி (டி.எஃப்.யூ வழியாக), 3.3 வி சீரியல் "
"மற்றும் பல்வேறு முறைகள் மீது ஒளிரும் திறன் கொண்ட உள்ளமைக்கப்பட்ட கணினி துவக்க "
"ஏற்றி பொருத்தப்பட்டுள்ளன (மேலும் தகவலுக்கு எச்.டி.எம் ஆவணம் AN2606 ஐப் "
"பார்க்கவும்). எச்.கே.ஆர் புரோ 1.1 போன்ற சில எச்.டி.எம் 32 எஃப் 4 பலகைகள் "
"டி.எஃப்.யூ துவக்க ஏற்றிக்குள் நுழைய முடியாது. SDCARD ஐப் பயன்படுத்துவதை விட "
"யூ.எச்.பி -ஐ விட பயனரை விரும்பினால், STM32F405/407 அடிப்படையிலான பலகைகளுக்கு "
"HID துவக்க ஏற்றி கிடைக்கிறது. உங்கள் போர்டுக்கு குறிப்பிட்ட ஒரு பதிப்பை "
"நீங்கள் உள்ளமைக்க வேண்டும் மற்றும் உருவாக்க வேண்டியிருக்கலாம் என்பதை நினைவில் "
"கொள்க, ஒரு [SKR Pro 1.1 க்கான கட்டமைப்பானது இங்கே கிடைக்கிறது] "
"(https://github.com/arksine/stm32_hid_bootloader/relaess/latest)."

#: docs/Bootloaders.md:block 125 (paragraph)
msgid ""
"Unless your board is DFU capable the most accessible flashing method is likely"
" via 3.3V serial, which follows the same procedure as [flashing the STM32F103 "
"using stm32flash](#stm32f103-micro-controllers-blue-pill-devices). For "
"example:"
msgstr ""
"உங்கள் போர்டு டி.எஃப்.யு திறன் கொண்டதாக இல்லாவிட்டால், மிகவும் அணுகக்கூடிய "
"ஒளிரும் முறை 3.3 வி சீரியல் வழியாக இருக்கலாம், இது [STM32F103 ஐ ஒளிரும் "
"STM32F103 ஐ ஒளிரச் செய்கிறது] "
"(#STM32F103-மைக்ரோ-கன்ட்ரோலர்கள்-ப்ளூ-பில்-பங்கேற்பு) போன்ற அதே நடைமுறையைப் "
"பின்பற்றுகிறது. உதாரணமாக:"

#: docs/Bootloaders.md:block 51 (header)
msgid "SAMDC21 micro-controllers (Duet3D Toolboard 1LC)"
msgstr "SAMDC21 மைக்ரோ-கன்ட்ரோலர்கள் (டூட் 3 டி கருவித்தலை 1 எல்.சி)"

#: docs/Bootloaders.md:block 52 (paragraph)
msgid ""
"The SAMC21 is flashed via the ARM Serial Wire Debug (SWD) interface. This is "
"commonly done with a dedicated SWD hardware dongle. Alternatively, one can use"
" a [Raspberry Pi with OpenOCD](#running-openocd-on-the-raspberry-pi)."
msgstr ""
"SAMC21 கை சீரியல் கம்பி பிழைத்திருத்த (SWD) இடைமுகம் வழியாக ஒளிரும். இது "
"பொதுவாக ஒரு பிரத்யேக SWD வன்பொருள் டாங்கிள் மூலம் செய்யப்படுகிறது. மாற்றாக, "
"ஒருவர் [ஓபன்ஓசிடி உடன் ராச்பெர்ரி பை] "
"(#ரன்னிங்-ஓபெனோக்ட்-ஆன்-தி-ராச்பெர்ரி-பிஐ) பயன்படுத்தலாம்."

#: docs/Bootloaders.md:block 53 (paragraph)
msgid ""
"When using OpenOCD with the SAMC21, extra steps must be taken to first put the"
" chip into Cold Plugging mode if the board makes use of the SWD pins for other"
" purposes. If using OpenOCD on a Rasberry Pi, this can be done by running the "
"following commands before invoking OpenOCD."
msgstr ""
"SAMC21 உடன் OpenOCD ஐப் பயன்படுத்தும் போது, மற்ற நோக்கங்களுக்காக SWD ஊசிகளைப் "
"பயன்படுத்தினால், முதலில் சிப்பை குளிர் சொருகும் பயன்முறையில் வைக்க கூடுதல் "
"படிகள் எடுக்கப்பட வேண்டும். ராச்பெர்ரி பை மீது OpenOCD ஐப் பயன்படுத்தினால், "
"OpenOCD ஐத் தொடங்குவதற்கு முன் பின்வரும் கட்டளைகளை இயக்குவதன் மூலம் இதைச் "
"செய்யலாம்."

#: docs/Bootloaders.md:block 55 (paragraph)
msgid "To flash a program with OpenOCD use the following chip config:"
msgstr ""
"OpenOCD உடன் ஒரு நிரலை ஒளிரச் செய்ய பின்வரும் சிப் கட்டமைப்பைப் "
"பயன்படுத்தவும்:"

#: docs/Bootloaders.md:block 57 (paragraph)
msgid ""
"Obtain a program; for instance, klipper can be built for this chip. Flash with"
" OpenOCD commands similar to:"
msgstr ""
"ஒரு நிரலைப் பெறுங்கள்; உதாரணமாக, இந்த சிப்பிற்காக கிளிப்பரை உருவாக்க முடியும்."
" ஓபன்ஓசிடி கட்டளைகளுடன் ஃபிளாச்:"

#: docs/Bootloaders.md:block 102 (unordered list)
msgid ""
"You may need to hold down the reset button on the board while launching "
"OpenOCD. It should display something like:After which you can release the "
"reset button."
msgstr ""

#~ msgid ""
#~ "wget 'https://github.com/arduino/Arduino/raw/1.8.5/hardware/arduino/avr/bootloaders/stk500v2/stk500boot_v2_mega2560.hex'\n"
#~ "\n"
#~ "avrdude -cavrispv2 -patmega2560 -P/dev/ttyACM0 -b115200 -e -u -U lock:w:0x3F:m -U efuse:w:0xFD:m -U hfuse:w:0xD8:m -U lfuse:w:0xFF:m\n"
#~ "avrdude -cavrispv2 -patmega2560 -P/dev/ttyACM0 -b115200 -U flash:w:stk500boot_v2_mega2560.hex\n"
#~ "avrdude -cavrispv2 -patmega2560 -P/dev/ttyACM0 -b115200 -U lock:w:0x0F:m\n"
#~ msgstr ""
#~ "wget 'https://github.com/arduino/arduino/raw/1.8.5/hardware/arduino/avr/bootloaders/stk500v2/stk500boot_v2_mega2560.hex'\n"
#~ "\n"
#~ " avrdude -cavrispv2 -patmega2560 -p/dev/ttyacm0 -b115200 -e -u -u lock: w: 0x3f: m -u efuse: w: 0xfd: m -u hfuse: w: 0xd8: m -u lfuse: w: 0xff: மீ\n"
#~ " avrdude -cavrispv2 -patmega2560 -p/dev/ttyacm0 -b115200 -u ஃப்ளாச்: W: STK500BOOT_V2_MEGA2560.hex\n"
#~ " avrdude -cavrispv2 -patmega2560 -p/dev/ttyacm0 -b115200 -u lock: w: 0x0f: m\n"

#~ msgid ""
#~ "avrdude -cwiring -patmega2560 -P/dev/ttyACM0 -b115200 -D "
#~ "-Uflash:w:out/klipper.elf.hex:i\n"
#~ msgstr ""
#~ "avrdude -cwiring -patmega2560 -p/dev/ttyacm0 -b115200 -d -uflash: w: "
#~ "out/klipper.elf.hex: i\n"

#~ msgid ""
#~ "wget 'https://github.com/arduino/Arduino/raw/1.8.5/hardware/arduino/avr/bootloaders/atmega/ATmegaBOOT_168_atmega1280.hex'\n"
#~ "\n"
#~ "avrdude -cavrispv2 -patmega1280 -P/dev/ttyACM0 -b115200 -e -u -U lock:w:0x3F:m -U efuse:w:0xF5:m -U hfuse:w:0xDA:m -U lfuse:w:0xFF:m\n"
#~ "avrdude -cavrispv2 -patmega1280 -P/dev/ttyACM0 -b115200 -U flash:w:ATmegaBOOT_168_atmega1280.hex\n"
#~ "avrdude -cavrispv2 -patmega1280 -P/dev/ttyACM0 -b115200 -U lock:w:0x0F:m\n"
#~ msgstr ""
#~ "wget 'https://github.com/arduino/arduino/raw/1.8.5/hardware/arduino/avr/bootloaders/atmega/atmegaboot_168_atmega1280.hex'\n"
#~ "\n"
#~ " avrdude -cavrispv2 -patmega1280 -p/dev/ttyacm0 -b115200 -e -u -u lock: w: 0x3f: m -u efuse: w: 0xf5: m -u hfuse: w: 0xda: m -u lfuse: w: 0xff: மீ\n"
#~ " avrdude -cavrispv2 -patmega1280 -p/dev/ttyacm0 -b115200 -u ஃப்ளாச்: W: atmegaboot_168_atmega1280.hex\n"
#~ " avrdude -cavrispv2 -patmega1280 -p/dev/ttyacm0 -b115200 -u lock: w: 0x0f: m\n"

#~ msgid ""
#~ "avrdude -carduino -patmega1280 -P/dev/ttyACM0 -b57600 -D "
#~ "-Uflash:w:out/klipper.elf.hex:i\n"
#~ msgstr ""
#~ "avrdude -carduino -patmega1280 -p/dev/ttyacm0 -b57600 -d -uflash: w: "
#~ "out/klipper.elf.hex: i\n"

#~ msgid ""
#~ "wget 'https://github.com/Lauszus/Sanguino/raw/1.0.2/bootloaders/optiboot/optiboot_atmega1284p.hex'\n"
#~ "\n"
#~ "avrdude -cavrispv2 -patmega1284p -P/dev/ttyACM0 -b115200 -e -u -U lock:w:0x3F:m -U efuse:w:0xFD:m -U hfuse:w:0xDE:m -U lfuse:w:0xFF:m\n"
#~ "avrdude -cavrispv2 -patmega1284p -P/dev/ttyACM0 -b115200 -U flash:w:optiboot_atmega1284p.hex\n"
#~ "avrdude -cavrispv2 -patmega1284p -P/dev/ttyACM0 -b115200 -U lock:w:0x0F:m\n"
#~ msgstr ""
#~ "wget 'https://github.com/lauszus/sanguina/raw/1.0.2/bootloaders/optiboot/optiboot_atmega1284p.hex'\n"
#~ "\n"
#~ " avrdude -cavrispv2 -patmega1284p -p/dev/ttyacm0 -b115200 -e -u -u lock: w: 0x3f: m -u efuse: w: 0xfd: m -u hfuse: w: 0xde: m -u lfuse: w: 0xff: மீ\n"
#~ " avrdude -cavrispv2 -patmega1284p -p/dev/ttyacm0 -b115200 -u ஃப்ளாச்: W: optiboot_atmega1284p.hex\n"
#~ " avrdude -cavrispv2 -patmega1284p -p/dev/ttyacm0 -b115200 -u lock: w: 0x0f: m\n"

#~ msgid ""
#~ "avrdude -carduino -patmega1284p -P/dev/ttyACM0 -b115200 -D "
#~ "-Uflash:w:out/klipper.elf.hex:i\n"
#~ msgstr ""
#~ "avrdude -carduino -patmega1284p -p/dev/ttyacm0 -b115200 -d -uflash: w: "
#~ "out/klipper.elf.hex: i\n"

#~ msgid ""
#~ "avrdude -carduino -patmega1284p -P/dev/ttyACM0 -b57600 -D "
#~ "-Uflash:w:out/klipper.elf.hex:i\n"
#~ msgstr ""
#~ "avrdude -carduino -patmega1284p -p/dev/ttyacm0 -b57600 -d -uflash: w: "
#~ "out/klipper.elf.hex: i\n"

#~ msgid "teensy_loader_cli --mcu=at90usb1286 out/klipper.elf.hex -v\n"
#~ msgstr "teensy_loader_cli --mcu = at90usb1286 out/klipper.elf.hex -v\n"

#~ msgid ""
#~ "wget 'https://github.com/arduino/Arduino/raw/1.8.5/hardware/arduino/avr/bootloaders/optiboot/optiboot_atmega168.hex'\n"
#~ "\n"
#~ "avrdude -cavrispv2 -patmega168 -P/dev/ttyACM0 -b115200 -e -u -U lock:w:0x3F:m -U efuse:w:0x04:m -U hfuse:w:0xDD:m -U lfuse:w:0xFF:m\n"
#~ "avrdude -cavrispv2 -patmega168 -P/dev/ttyACM0 -b115200 -U flash:w:optiboot_atmega168.hex\n"
#~ "avrdude -cavrispv2 -patmega168 -P/dev/ttyACM0 -b115200 -U lock:w:0x0F:m\n"
#~ msgstr ""
#~ "wget 'https://github.com/arduino/arduino/raw/1.8.5/hardware/arduino/avr/bootloaders/optiboot/optiboot_atmega168.hex'\n"
#~ "\n"
#~ " avrdude -cavrispv2 -patmega168 -p/dev/ttyacm0 -b115200 -e -u -u -u lock: w: 0x3f: m -u efuse: w: 0x04: m -u hfuse: w: 0xdd: m -u lfus: W: 0xff: மீ\n"
#~ " avrdude -cavrispv2 -patmega168 -p/dev/ttyacm0 -b115200 -u ஃப்ளாச்: W: optiboot_atmega168.hex\n"
#~ " avrdude -cavrispv2 -patmega168 -p/dev/ttyacm0 -b115200 -u lock: w: 0x0f: m\n"

#~ msgid ""
#~ "avrdude -carduino -patmega168 -P/dev/ttyACM0 -b115200 -D "
#~ "-Uflash:w:out/klipper.elf.hex:i\n"
#~ msgstr ""
#~ "avrdude -carduino -patmega168 -p/dev/ttyacm0 -b115200 -d -uflash: w: "
#~ "out/klipper.elf.hex: i\n"

#~ msgid ""
#~ "bossac -U -p /dev/ttyACM0 -a -e -w out/klipper.bin -v -b\n"
#~ "bossac -U -p /dev/ttyACM0 -R\n"
#~ msgstr ""
#~ "bosac -u -p/dev/ttyacm0 -a -e -w out/klipper.bin -v -b\n"
#~ " bosac -u -p /dev /ttyacm0 -r\n"

#~ msgid "bossac --port=/dev/ttyACM0 -b -U -e -w -v -R out/klipper.bin\n"
#~ msgstr "bosac --port =/dev/ttyacm0 -u -u -e -w -v -r out/klipper.bin\n"

#~ msgid "source [find target/at91samdXX.cfg]\n"
#~ msgstr "சான்று [இலக்கு/AT91SAMDXX.CFG ஐக் கண்டறியவும்]\n"

#~ msgid ""
#~ "wget 'https://github.com/arduino/ArduinoCore-"
#~ "samd/raw/1.8.3/bootloaders/zero/samd21_sam_ba.bin'\n"
#~ msgstr ""
#~ "wget 'https://github.com/arduino/arduinocore-"
#~ "samd/raw/1.8.3/bootloaders/zero/samd21_sam_ba.bin'\n"

#~ msgid ""
#~ "at91samd bootloader 0\n"
#~ "program samd21_sam_ba.bin verify\n"
#~ msgstr ""
#~ "AT91SAMD துவக்க ஏற்றி 0\n"
#~ " நிரல் samd21_sam_ba.bin சரிபார்க்கவும்\n"

#~ msgid "bossac -U -p /dev/ttyACM0 --offset=0x2000 -w out/klipper.bin -v -b -R\n"
#~ msgstr ""
#~ "bosac -u -u -p/dev/ttyacm0 --offset = 0x2000 -w out/klipper.bin -v -b -r\n"

#~ msgid ""
#~ "avrdude -c stk500v2 -p atmega2560 -P /dev/ttyACM0 -u "
#~ "-Uflash:w:out/klipper.elf.hex:i\n"
#~ msgstr ""
#~ "avrdude -c stk500v2 -p atmega2560 -p/dev/ttyacm0 -u -uflash: w: "
#~ "out/klipper.elf.hex: i\n"

#~ msgid "source [find target/atsame5x.cfg]\n"
#~ msgstr "சான்று [இலக்கு/atsame5x.cfg ஐக் கண்டறியவும்]\n"

#~ msgid ""
#~ "wget "
#~ "'https://github.com/adafruit/uf2-samdx1/releases/download/v3.7.0/bootloader-"
#~ "itsybitsy_m4-v3.7.0.bin'\n"
#~ msgstr ""
#~ "wget "
#~ "'https://github.com/adafruit/uf2-samdx1/relaises/download/v3.7.0/bootloader-"
#~ "isybitsy_m4-v3.7.0.bin'\n"

#~ msgid ""
#~ "at91samd bootloader 0\n"
#~ "program bootloader-itsybitsy_m4-v3.7.0.bin verify\n"
#~ "at91samd bootloader 16384\n"
#~ msgstr ""
#~ "AT91SAMD துவக்க ஏற்றி 0\n"
#~ " நிரல் பூட்ட்லோடர்-ஐடிபிட்சி_எம் 4-வி 3.7.0.bin சரிபார்க்கவும்\n"
#~ " AT91SAMD துவக்க ஏற்றி 16384\n"

#~ msgid "bossac -U -p /dev/ttyACM0 --offset=0x4000 -w out/klipper.bin -v -b -R\n"
#~ msgstr ""
#~ "bosac -u -u -p/dev/ttyacm0 --offset = 0x4000 -w out/klipper.bin -v -b -r\n"

#~ msgid "stm32flash -w out/klipper.bin -v -g 0 /dev/ttyAMA0\n"
#~ msgstr "STM32flash -in ut/clipper.bin -in -g 0/virgins0\n"

#~ msgid ""
#~ "wget 'https://github.com/rogerclarkmelbourne/STM32duino-bootloader/raw/master/binaries/generic_boot20_pc13.bin'\n"
#~ "\n"
#~ "stm32flash -w generic_boot20_pc13.bin -v -g 0 /dev/ttyAMA0\n"
#~ msgstr ""
#~ "wget 'https://github.com/rogerclarkmelbourne/stm32duino-bootloader/raw/master/binaries/generic_boot20_pc13.bin'\n"
#~ "\n"
#~ " STM32FLASH -W generic_boot20_pc13.bin -v -g 0 /dev /ttyama00\n"

#~ msgid "dfu-util -d 1eaf:0003 -a 2 -R -D out/klipper.bin\n"
#~ msgstr "dfu -util -d 1eaf: 0003 -a 2 -r -d out/klipper.bin\n"

#~ msgid "source [find target/stm32f1x.cfg]\n"
#~ msgstr "சான்று [இலக்கு/STM32F1X.CFG ஐக் கண்டறியவும்]\n"

#~ msgid "flash read_bank 0 btt_skr_mini_e3_backup.bin\n"
#~ msgstr "ஃப்ளாச் ரீட்_பேங்க் 0 BTT_SKR_MINI_E3_BACKUP.BIN\n"

#~ msgid ""
#~ "stm32f1x mass_erase 0\n"
#~ "program hid_btt_skr_mini_e3.bin verify 0x08000000\n"
#~ msgstr ""
#~ "STM32F1x mass_erase 0\n"
#~ " நிரல் hid_btt_skr_mini_e3.bin 0x08000000 ஐ சரிபார்க்கவும்\n"

#~ msgid ""
#~ "You may need to hold down the reset button on the board while launching OpenOCD. It should display something like:Open On-Chip Debugger 0.10.0+dev-01204-gc60252ac-dirty (2020-04-27-16:00)\n"
#~ "Licensed under GNU GPL v2\n"
#~ "For bug reports, read\n"
#~ "        http://openocd.org/doc/doxygen/bugs.html\n"
#~ "DEPRECATED! use 'adapter speed' not 'adapter_khz'\n"
#~ "Info : BCM2835 GPIO JTAG/SWD bitbang driver\n"
#~ "Info : JTAG and SWD modes enabled\n"
#~ "Info : clock speed 40 kHz\n"
#~ "Info : SWD DPIDR 0x1ba01477\n"
#~ "Info : stm32f1x.cpu: hardware has 6 breakpoints, 4 watchpoints\n"
#~ "Info : stm32f1x.cpu: external reset detected\n"
#~ "Info : starting gdb server for stm32f1x.cpu on 3333\n"
#~ "Info : Listening on port 3333 for gdb connections\n"
#~ msgstr ""
#~ "OpenOCD ஐ தொடங்கும்போது பலகையில் மீட்டமை பொத்தானை நீங்கள் வைத்திருக்க வேண்டியிருக்கலாம். இது போன்ற ஒன்றைக் காண்பிக்க வேண்டும்: திறந்த சிப் பிழைத்திருத்தியை 0.10.0+DEV-01204-GC60252AC-dirty (2020-04-27-16: 00)\n"
#~ " குனு சிபிஎல் வி 2 இன் கீழ் உரிமம் பெற்றது\n"
#~ " பிழை அறிக்கைகளுக்கு, படிக்கவும்\n"
#~ " http://openocd.org/doc/doxygen/bugs.html\n"
#~ " மதிப்பிடப்பட்டது! 'அடாப்டர் விரைவு' அல்ல 'அடாப்டர்_கெச்'\n"
#~ " தகவல்: BCM2835 GPIO JTAG/SWD பிட்பாங் டிரைவர்\n"
#~ " தகவல்: JTAG மற்றும் SWD முறைகள் இயக்கப்பட்டன\n"
#~ " தகவல்: கடிகார விரைவு 40 கிலோஎர்ட்ச்\n"
#~ " தகவல்: SWD DPIDR 0x1BA01477\n"
#~ " தகவல்: STM32F1X.CPU: வன்பொருளில் 6 பிரேக் பாயிண்ட்ச், 4 கண்காணிப்பு புள்ளிகள் உள்ளன\n"
#~ " தகவல்: STM32F1X.CPU: வெளிப்புற மீட்டமைப்பு கண்டறியப்பட்டது\n"
#~ " தகவல்: 3333 இல் STM32F1X.CPU க்கான GDB சேவையகத்தைத் தொடங்குகிறது\n"
#~ " தகவல்: சிடிபி இணைப்புகளுக்கு துறைமுகம் 3333 இல் கேட்பது\n"

#~ msgid "After which you can release the reset button."
#~ msgstr "அதன் பிறகு நீங்கள் மீட்டமை பொத்தானை வெளியிடலாம்."

#~ msgid ""
#~ "sudo apt install libusb-1.0\n"
#~ "cd ~/klipper/lib/hidflash\n"
#~ "make\n"
#~ msgstr ""
#~ "sudo apt install libusb-1.0\n"
#~ " சிடி ~/கிளிப்பர்/லிப்/இட்ஃப்ளாச்\n"
#~ " உருவாக்கு\n"

#~ msgid "~/klipper/lib/hidflash/hid-flash ~/klipper/out/klipper.bin\n"
#~ msgstr "~/mow/lib/hidflash/hid-flash ~/mower/out/rocks.bin\n"

#~ msgid "make flash FLASH_DEVICE=1209:BEBA\n"
#~ msgstr "ஃப்ளாச் ஃப்ளாச்_டெவிச் = 1209: பெபா\n"

#~ msgid "make flash FLASH_DEVICE=/dev/ttyACM0\n"
#~ msgstr "ஃப்ளாச் ஃப்ளாச்_டெவிச் =/dev/ttyacm0 ஐ உருவாக்கவும்\n"

#~ msgid ""
#~ "wget https://github.com/Arksine/STM32_HID_Bootloader/releases/download/v0.5-beta/hid_bootloader_SKR_PRO.bin\n"
#~ "\n"
#~ "stm32flash -w hid_bootloader_SKR_PRO.bin -v -g 0 /dev/ttyAMA0\n"
#~ msgstr ""
#~ "wget https://github.com/arksine/stm32_hid_bootloader/relaess/download/v0.5-beta/hid_bootloader_skr_pro.bin\n"
#~ "\n"
#~ " STM32FLASH -W HID_BOOTLOADER_SKR_PRO.BIN -V -G 0 /DEV /TTYAMA00\n"

#~ msgid ""
#~ "sudo apt-get update\n"
#~ "sudo apt-get install autoconf libtool telnet\n"
#~ "mkdir ~/openocd\n"
#~ "cd ~/openocd/\n"
#~ "git clone http://openocd.zylin.com/openocd\n"
#~ "cd openocd\n"
#~ "./bootstrap\n"
#~ "./configure --enable-sysfsgpio --enable-bcm2835gpio --prefix=/home/pi/openocd/install\n"
#~ "make\n"
#~ "make install\n"
#~ msgstr ""
#~ "sudo apt-get Update\n"
#~ " sudo apt-get anatoconf libtool telnet ஐ நிறுவவும்\n"
#~ " mkdir ~/openocd\n"
#~ " cd ~/openocd/\n"
#~ " git நகலி http://openocd.zylin.com/openocd\n"
#~ " குறுவட்டு ஓபன்ஓஆர்டி\n"
#~ " ./bootstrap\n"
#~ " ./configure --enable-sysfsgpio --enable-bcm2835gpio --prefix=/home/pi/openocd/install\n"
#~ " உருவாக்கு\n"
#~ " நிறுவவும்\n"

#~ msgid "nano ~/openocd/openocd.cfg\n"
#~ msgstr "நானோ ~/openocd/openocd.cfg\n"

#~ msgid ""
#~ "# Uses RPi pins: GPIO25 for SWDCLK, GPIO24 for SWDIO, GPIO18 for nRST\n"
#~ "source [find interface/raspberrypi2-native.cfg]\n"
#~ "bcm2835gpio_swd_nums 25 24\n"
#~ "bcm2835gpio_srst_num 18\n"
#~ "transport select swd\n"
#~ "\n"
#~ "# Use hardware reset wire for chip resets\n"
#~ "reset_config srst_only\n"
#~ "adapter_nsrst_delay 100\n"
#~ "adapter_nsrst_assert_width 100\n"
#~ "\n"
#~ "# Specify the chip type\n"
#~ "source [find target/atsame5x.cfg]\n"
#~ "\n"
#~ "# Set the adapter speed\n"
#~ "adapter_khz 40\n"
#~ "\n"
#~ "# Connect to chip\n"
#~ "init\n"
#~ "targets\n"
#~ "reset halt\n"
#~ msgstr ""
#~ "# RPI ஊசிகளைப் பயன்படுத்துகிறது: SWDCLK க்கு GPIO25, SWDIO க்கு GPIO24, NRST க்கு GPIO18\n"
#~ " சான்று [இடைமுகத்தைக் கண்டறியவும்/raspberrypi2- native.cfg]\n"
#~ " BCM2835GPIO_SWD_NUMS 25 24\n"
#~ " BCM2835GPIO_SRST_NUM 18\n"
#~ " போக்குவரத்து SWD ஐத் தேர்ந்தெடுக்கவும்\n"
#~ "\n"
#~ " # சிப் மீட்டமைப்புகளுக்கு வன்பொருள் மீட்டமைப்பு கம்பியைப் பயன்படுத்தவும்\n"
#~ " Reset_config srst_only\n"
#~ " அடாப்டர்_என்எச்ஆர்எச்டி_டெலே 100\n"
#~ " அடாப்டர்_என்எச்ஆர்எச்டி_செர்ட்_விட் 100\n"
#~ "\n"
#~ " # சிப் வகையைக் குறிப்பிடவும்\n"
#~ " சான்று [இலக்கு/atsame5x.cfg ஐக் கண்டறியவும்]\n"
#~ "\n"
#~ " # அடாப்டர் வேகத்தை அமைக்கவும்\n"
#~ " அடாப்டர்_கெச் 40\n"
#~ "\n"
#~ " # சிப்புடன் இணைக்கவும்\n"
#~ " init\n"
#~ " இலக்குகள்\n"
#~ " நிறுத்தத்தை மீட்டமை\n"

#~ msgid ""
#~ "cd ~/openocd/\n"
#~ "sudo ~/openocd/install/bin/openocd -f ~/openocd/openocd.cfg\n"
#~ msgstr ""
#~ "cd ~/openocd/\n"
#~ " sudo ~/openocd/install/bin/openocd -f ~/openocd/openocd.cfg\n"

#~ msgid "telnet 127.0.0.1 4444\n"
#~ msgstr "டெல்நெட் 127.0.0.1 4444\n"

#~ msgid ""
#~ "bindto 0.0.0.0\n"
#~ "gdb_port 44444\n"
#~ msgstr ""
#~ "பிண்டோ 0.0.0.0\n"
#~ " GDB_PORT 44444\n"

#~ msgid ""
#~ "cd /path/to/klipper/\n"
#~ "gdb out/klipper.elf\n"
#~ msgstr ""
#~ "குறுவட்டு/பாதை/முதல்/கட்டர்/\n"
#~ " GDB அவுட்/கிளிஃப்ச்\n"

#~ msgid "target remote octopi:44444\n"
#~ msgstr "இலக்கு தொலை ஆக்டோபி: 44444\n"

#~ msgid ""
#~ " dfu-util -d 0483:df11 -a 0 -R -D  MSCboot-STM32F072.bin -s0x08000000:leave\n"
#~ msgstr ""
#~ " dfu -util -d 0483: df11 -a 0 -r -d mscboot -stm32f072.bin -s0x08000000: "
#~ "விடுப்பு\n"

#~ msgid "python3 flash_can.py -q\n"
#~ msgstr "பைதான் 3 ஃப்ளாச்_கான்.பை -கியூ\n"

#~ msgid ""
#~ "python3 flash_can.py -i can0 -f ~/klipper/out/klipper.bin -u aabbccddeeff\n"
#~ msgstr ""
#~ "பைதான் 3 ஃப்ளாச்_சிகான்.பை -ஐ கேன் 0 -எஃப் ~/மோவர்/அவுட்/ராக்ச்.பின் -யூ "
#~ "ஏஏபிசி.டி டீஃப்\n"

#~ msgid ""
#~ "SWCLK=25\n"
#~ "SWDIO=24\n"
#~ "SRST=18\n"
#~ "\n"
#~ "echo \"Exporting SWCLK and SRST pins.\"\n"
#~ "echo $SWCLK > /sys/class/gpio/export\n"
#~ "echo $SRST > /sys/class/gpio/export\n"
#~ "echo \"out\" > /sys/class/gpio/gpio$SWCLK/direction\n"
#~ "echo \"out\" > /sys/class/gpio/gpio$SRST/direction\n"
#~ "\n"
#~ "echo \"Setting SWCLK low and pulsing SRST.\"\n"
#~ "echo \"0\" > /sys/class/gpio/gpio$SWCLK/value\n"
#~ "echo \"0\" > /sys/class/gpio/gpio$SRST/value\n"
#~ "echo \"1\" > /sys/class/gpio/gpio$SRST/value\n"
#~ "\n"
#~ "echo \"Unexporting SWCLK and SRST pins.\"\n"
#~ "echo $SWCLK > /sys/class/gpio/unexport\n"
#~ "echo $SRST > /sys/class/gpio/unexport\n"
#~ msgstr ""
#~ "SWCLK = 25\n"
#~ " Swdio = 24\n"
#~ " Srst = 18\n"
#~ "\n"
#~ " எதிரொலி \"SWCLK மற்றும் SRST ஊசிகளை ஏற்றுமதி செய்தல்.\"\n"
#~ " எதிரொலி $ swclk>/sys/class/gpio/ஏற்றுமதி\n"
#~ " எதிரொலி $ srst>/sys/class/gpio/ஏற்றுமதி\n"
#~ " எதிரொலி \"அவுட்\">/sys/class/gpio/gpio $ swclk/திசை\n"
#~ " எதிரொலி \"அவுட்\">/sys/class/gpio/gpio $ srst/dicersion\n"
#~ "\n"
#~ " எக்கோ \"SWCLK குறைந்த மற்றும் துடிக்கும் SRST ஐ அமைத்தல்.\"\n"
#~ " எதிரொலி \"0\">/sys/class/gpio/gpio $ swclk/value\n"
#~ " எதிரொலி \"0\">/sys/class/gpio/gpio $ srst/value\n"
#~ " எதிரொலி \"1\">/sys/class/gpio/gpio $ srst/value\n"
#~ "\n"
#~ " எதிரொலி \"திட்டமிடப்படாத SWCLK மற்றும் SRST PINS.\"\n"
#~ " எதிரொலி $ swclk>/sys/class/gpio/Unpport\n"
#~ " எதிரொலி $ srst>/sys/class/gpio/Unpport\n"

#~ msgid ""
#~ "at91samd chip-erase\n"
#~ "at91samd bootloader 0\n"
#~ "program out/klipper.elf verify\n"
#~ msgstr ""
#~ "at91SAMD சிப்-ராச்\n"
#~ " AT91SAMD துவக்க ஏற்றி 0\n"
#~ " நிரல் வெளியே/klipper.elf சரிபார்க்கவும்\n"

#~ msgid ""
#~ "For generic STM32F103 boards such as the blue pill it is possible to flash the"
#~ " bootloader via 3.3v serial using stm32flash as noted in the stm32duino "
#~ "section above, substituting the file name for the desired hid bootloader "
#~ "binary (ie: hid_generic_pc13.bin for the blue pill)."
#~ msgstr ""

#~ msgid ""
#~ "It may be necessary to manually enter the bootloader, this can be done by "
#~ "setting \"boot 0\" low and \"boot 1\" high. On the SKR Mini E3 \"Boot 1\" is "
#~ "not available, so it may be done by setting pin PA2 low if you flashed "
#~ "\"hid_btt_skr_mini_e3.bin\". This pin is labeld \"TX0\" on the TFT header in "
#~ "the SKR Mini E3's \"PIN\" document. There is a ground pin next to PA2 which "
#~ "you can use to pull PA2 low."
#~ msgstr ""

#~ msgid ""
#~ "Unless your board is DFU capable the most accessable flashing method is likely"
#~ " via 3.3v serial, which follows the same procedure as [flashing the STM32F103 "
#~ "using stm32flash](#stm32f103-micro-controllers-blue-pill-devices). For "
#~ "example:"
#~ msgstr ""

#~ msgid ""
#~ "STM32F4 microcontrollers come equipped with a built-in system bootloader "
#~ "capable of flashing over USB (via DFU), 3.3v Serial, and various other methods"
#~ " (see STM Document AN2606 for more information). Some STM32F4 boards, such as "
#~ "the SKR Pro 1.1, are not able to enter the DFU bootloader. The HID bootloader "
#~ "is available for STM32F405/407 based boards should the user prefer flashing "
#~ "over USB over using the sdcard. Note that you may need to configure and build "
#~ "a version specific to your board, a [build for the SKR Pro 1.1 is available "
#~ "here](https://github.com/Arksine/STM32_HID_Bootloader/releases/latest)."
#~ msgstr ""

#~ msgid ""
#~ "It is possible to flash the bootloader via 3.3v serial using stm32flash as "
#~ "noted in the stm32duino section above, substituting the file name for the "
#~ "desired MSC bootloader binary (ie: MSCboot-Bluepill.bin for the blue pill)."
#~ msgstr ""

#~ msgid ""
#~ "It is recommended to use a ST-Link Programmer to flash CanBoot, however it "
#~ "should be possible to flash using `stm32flash` on STM32F103 devices, and `dfu-"
#~ "util` on STM32F042/STM32F072 devices. See the previous sections in this "
#~ "document for instructions on these flashing methods, substituting "
#~ "`canboot.bin` for the file name where appropriate. The CanBoot repo linked "
#~ "above provides instructions for building the bootloader."
#~ msgstr ""

#~ msgid ""
#~ "The STM32F103 devices have a ROM that can flash a bootloader or application "
#~ "via 3.3V serial. To access this ROM, one should connect the \"boot 0\" pin to "
#~ "high and \"boot 1\" pin to low, and then reset the device. The \"stm32flash\" "
#~ "package can then be used to flash the device using something like:"
#~ msgstr ""

#~ msgid ""
#~ "The [HID bootloader](https://github.com/Serasidis/STM32_HID_Bootloader) is a "
#~ "compact, driverless bootloader capable of flashing over USB. Also available is"
#~ " a [fork with builds specific to the SKR Mini E3 "
#~ "1.2](https://github.com/Arksine/STM32_HID_Bootloader/releases/tag/v0.5-beta)."
#~ msgstr ""

#~ msgid ""
#~ "STM32F4 microcontrollers come equipped with a built-in system bootloader "
#~ "capable of flashing over USB (via DFU), 3.3v Serial, and various other methods"
#~ " (see STM Document AN2606 for more information). Some STM32F4 boards, such as "
#~ "the SKR Pro 1.1, are not able to enter the DFU bootloader. The HID bootloader "
#~ "is available for STM32F405/407 based boards should the user prefer flashing "
#~ "over USB over using the sdcard. Note that you may need to configure and build "
#~ "a version specific to your board, a [build for the SKR Pro 1.1 is available "
#~ "here](https://github.com/Arksine/STM32_HID_Bootloader/releases/tag/v0.5-beta)."
#~ msgstr ""

#~ msgid ""
#~ "Note that if one is using a Raspberry Pi for the 3.3V serial, the stm32flash "
#~ "protocol uses a serial parity mode which the Raspberry Pi's \"miniuart\" does "
#~ "not support. See "
#~ "<https://www.raspberrypi.org/documentation/configuration/uart.md> for details "
#~ "on enabling the full uart on the Raspberry Pi GPIO pins."
#~ msgstr ""

#~ msgid ""
#~ "In general, the Arduino project is a good reference for bootloaders and "
#~ "flashing procedures on the 8-bit Atmel Atmega micro-controllers. In "
#~ "particular, the \"boards.txt\" file: "
#~ "[https://github.com/arduino/Arduino/blob/1.8.5/hardware/arduino/avr/boards.txt](https://github.com/arduino/Arduino/blob/1.8.5/hardware/arduino/avr/boards.txt)"
#~ " is a useful reference."
#~ msgstr ""

#~ msgid ""
#~ "The Teensy++ device from pjrc.com comes with a proprietary bootloader. It "
#~ "requires a custom flashing tool from "
#~ "[https://github.com/PaulStoffregen/teensy_loader_cli](https://github.com/PaulStoffregen/teensy_loader_cli)."
#~ " One can flash an application with it using something like:"
#~ msgstr ""

#~ msgid ""
#~ "The code at "
#~ "[https://github.com/shumatech/BOSSA](https://github.com/shumatech/BOSSA) can "
#~ "be used to program the SAM3. It is recommended to use version 1.9 or later."
#~ msgstr ""

#~ msgid ""
#~ "The code at "
#~ "[https://github.com/shumatech/BOSSA](https://github.com/shumatech/BOSSA) can "
#~ "be used to program the SAM4. It is necessary to use version `1.8.0` or higher."
#~ msgstr ""

#~ msgid ""
#~ "Obtain a bootloader - several bootloaders are available from "
#~ "[https://github.com/adafruit/uf2-samdx1/releases/latest](https://github.com/adafruit/uf2-samdx1/releases/latest)."
#~ " For example:"
#~ msgstr ""

#~ msgid ""
#~ "Note that if one is using a Raspberry Pi for the 3.3V serial, the stm32flash "
#~ "protocol uses a serial parity mode which the Raspberry Pi's \"miniuart\" does "
#~ "not support. See "
#~ "[https://www.raspberrypi.org/documentation/configuration/uart.md](https://www.raspberrypi.org/documentation/configuration/uart.md)"
#~ " for details on enabling the full uart on the Raspberry Pi GPIO pins."
#~ msgstr ""

#~ msgid ""
#~ "The \"stm32duino\" project has a USB capable bootloader - see: "
#~ "[https://github.com/rogerclarkmelbourne/STM32duino-"
#~ "bootloader](https://github.com/rogerclarkmelbourne/STM32duino-bootloader)"
#~ msgstr ""

#~ msgid ""
#~ "This document does not describe the method to flash a bootloader itself - see:"
#~ " [http://smoothieware.org/flashing-the-"
#~ "bootloader](http://smoothieware.org/flashing-the-bootloader) for further "
#~ "information on that topic."
#~ msgstr ""

#~ msgid ""
#~ "It is common for Smoothieboards to come with a bootloader from: "
#~ "[https://github.com/triffid/LPC17xx-DFU-"
#~ "Bootloader](https://github.com/triffid/LPC17xx-DFU-Bootloader). When using "
#~ "this bootloader the application must be compiled with a start address of "
#~ "16KiB. The easiest way to flash an application with this bootloader is to copy"
#~ " the application file (eg, `out/klipper.bin`) to a file named `firmware.bin` "
#~ "on an SD card, and then to reboot the micro-controller with that SD card."
#~ msgstr ""

#~ msgid ""
#~ "This section describes how one can install and launch OpenOCD. It is derived "
#~ "from the instructions at: [https://learn.adafruit.com/programming-"
#~ "microcontrollers-using-openocd-on-raspberry-"
#~ "pi](https://learn.adafruit.com/programming-microcontrollers-using-openocd-on-"
#~ "raspberry-pi)"
#~ msgstr ""
