# Владислав <vlad.marusenko2000@gmail.com>, 2024.
# Максим Горпиніч <mgorpinic2005@gmail.com>, 2024.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2024-11-07 00:00+0000\n"
"Last-Translator: Максим Горпиніч <mgorpinic2005@gmail.com>\n"
"Language-Team: Ukrainian <https://hosted.weblate.org/projects/klipper/mcu_commands/uk/>\n"
"Language: uk\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Weblate 5.8.2\n"

msgid ""
"This document provides information on the low-level micro-controller commands "
"that are sent from the Klipper \"host\" software and processed by the Klipper "
"micro-controller software. This document is not an authoritative reference for"
" these commands, nor is it an exclusive list of all available commands."
msgstr ""
"Цей документ надає інформацію про команди мікроконтролерів низького рівня, які"
" надсилаються з програмного забезпечення Klipper \"host\" та обробляються "
"програмним забезпеченням мікроконтролера Klipper. Цей документ не є "
"авторитетним посиланням для цих команд, а не є ексклюзивним переліком всіх "
"доступних команд."

msgid ""
"This document may be useful for developers interested in understanding the "
"low-level micro-controller commands."
msgstr ""
"Цей документ може бути корисним для розробників, які зацікавлені у розумінні "
"команди мікроконтролерів низького рівня."

msgid ""
"See the [protocol](Protocol.md) document for more information on the format of"
" commands and their transmission. The commands here are described using their "
"\"printf\" style syntax - for those unfamiliar with that format, just note "
"that where a '%...' sequence is seen it should be replaced with an actual "
"integer. For example, a description with \"count=%c\" could be replaced with "
"the text \"count=10\". Note that parameters that are considered "
"\"enumerations\" (see the above protocol document) take a string value which "
"is automatically converted to an integer value for the micro-controller. This "
"is common with parameters named \"pin\" (or that have a suffix of \"_pin\")."
msgstr ""
"Перегляд [protocol](Protocol.md) документа для отримання додаткової інформації"
" про формат команд та їх передачу. Командами тут описуються за допомогою "
"синтаксису стилю «printf» - для тих, хто не знайомий з цим форматом, просто "
"зауважити, що де «%...» побачить, що його потрібно замінити на власне ціле. "
"Наприклад, опис з \"count=%c\" можна замінити текстом \"count=10\". Зауважте, "
"що параметри, які вважаються \"генераціями\" (див. вище протокол документа) "
"приймають значення рядка, яка автоматично перетворюється на ціле значення для "
"мікроконтролера. Це поширене з параметрами «pin» (або які мають суфікс "
"«_pin»)."

msgid "Startup Commands"
msgstr "Команди стартапів"

msgid ""
"It may be necessary to take certain one-time actions to configure the micro-"
"controller and its peripherals. This section lists common commands available "
"for that purpose. Unlike most micro-controller commands, these commands run as"
" soon as they are received and they do not require any particular setup."
msgstr ""
"Щоб налаштувати мікроконтролер і його периферію, необхідно приймати певні "
"одноразові дії. Цей розділ містить загальні команди, доступні для цього. На "
"відміну від більшості команд мікроконтролера, ці команди працюють, як тільки "
"вони отримують, і вони не вимагають певного налаштування."

msgid "Common startup commands:"
msgstr "Загальні команди стартапів:"

msgid ""
"`set_digital_out pin=%u value=%c` : This command immediately configures the "
"given pin as a digital out GPIO and it sets it to either a low level (value=0)"
" or a high level (value=1). This command may be useful for configuring the "
"initial value of LEDs and for configuring the initial value of stepper driver "
"micro-stepping pins."
msgstr ""
"`set_digital_out pin=%u значення=%c` : Ця команда відразу налаштовує задану "
"шпильку як цифровий від GPIO, і вона встановлює її як низький рівень "
"(значення=0) або високий рівень (значення=1). Ця команда може бути корисною "
"для налаштування початкового значення світлодіодів і для налаштування "
"початкового значення крокової драйвера мікрокропінгових штифтів."

msgid ""
"`set_pwm_out pin=%u cycle_ticks=%u value=%hu` : This command will immediately "
"configure the given pin to use hardware based pulse-width-modulation (PWM) "
"with the given number of cycle_ticks. The \"cycle_ticks\" is the number of MCU"
" clock ticks each power on and power off cycle should last. A cycle_ticks "
"value of 1 can be used to request the fastest possible cycle time. The "
"\"value\" parameter is between 0 and 255 with 0 indicating a full off state "
"and 255 indicating a full on state. This command may be useful for enabling "
"CPU and nozzle cooling fans."
msgstr ""
"`set_pwm_out pin=%u циклу_ticks=%u значення=%hu` : Ця команда відразу "
"налаштовує дана шпилька, щоб використовувати апаратні на основі пульс-width-"
"модуляції (PWM) з заданою кількістю циклів_ticks. \"cycle_ticks\" - це "
"кількість годинників МКУ, які повинні тривати потужність і відключити цикл. "
"Цикл_ticks значення 1 може бути використана для того, щоб запросити найбільш "
"оптимальний час циклу. Параметри \"значення\" між 0 і 255 з 0, що вказує на "
"повну стан і 255, що вказують на стан. Ця команда може бути корисною для "
"забезпечення вентиляторів охолодження процесора та сопла."

msgid "Low-level micro-controller configuration"
msgstr "Мікроконтролер низького рівня"

msgid ""
"Most commands in the micro-controller require an initial setup before they can"
" be successfully invoked. This section provides an overview of the "
"configuration process. This section and the following sections are likely only"
" of interest to developers interested in the internal details of Klipper."
msgstr ""
"Більшість команд в мікроконтролері вимагають початкового налаштування, перш "
"ніж вони можуть бути успішно викликані. Цей розділ надає огляд процесу "
"конфігурації. Цей розділ і наступні розділи, швидше за все, тільки проценти "
"розробникам, які цікавляться внутрішніми деталями Klipper."

msgid ""
"When the host first connects to the micro-controller it always starts by "
"obtaining a data dictionary (see [protocol](Protocol.md) for more "
"information). After the data dictionary is obtained the host will check if the"
" micro-controller is in a \"configured\" state and configure it if not. "
"Configuration involves the following phases:"
msgstr ""
"При першому підключенні до мікроконтролера завжди починається отримання "
"словника даних (див. [protocol](Protocol.md) для отримання додаткової "
"інформації). Після отримання словника даних ведучий перевірить, якщо "
"мікроконтролер знаходиться в \"настроченому\" стані і налаштовує його, якщо "
"ні. Конфігурація передбачає наступні етапи:"

msgid ""
"`get_config` : The host starts by checking if the micro-controller is already "
"configured. The micro-controller responds to this command with a \"config\" "
"response message. The micro-controller software always starts in an "
"unconfigured state at power-on. It remains in this state until the host "
"completes the configuration processes (by issuing a finalize_config command). "
"If the micro-controller is already configured from a previous session (and is "
"configured with the desired settings) then no further action is needed by the "
"host and the configuration process ends successfully."
msgstr ""
"`get_config` : Ведуться перевірки, якщо вже налаштований мікроконтролер. "
"Micro-controller реагує на цю команду з повідомленням \"config\". "
"Мікроконтролерне програмне забезпечення завжди починається в неналаштуваному "
"стані на електромережі. Залишається в цьому стані до моменту завершення "
"конфігураційних процесів (виписавши команду endize_config). Якщо "
"мікроконтролер вже налаштований з попереднього сеансу (і налаштовується з "
"бажаними налаштуваннями) після чого не потрібно подальшої дії за допомогою "
"хосту і процесу налаштування успішно завершується."

msgid ""
"`allocate_oids count=%c` : This command is issued to inform the micro-"
"controller of the maximum number of object-ids (oid) that the host requires. "
"It is only valid to issue this command once. An oid is an integer identifier "
"allocated to each stepper, each endstop, and each schedulable gpio pin. The "
"host determines in advance the number of oids it will require to operate the "
"hardware and passes this to the micro-controller so that it may allocate "
"sufficient memory to store a mapping from oid to internal object."
msgstr ""
"`allocate_oids count=%c` : Ця команда видається, щоб повідомити "
"мікроконтролеру максимальної кількості об'єктів-їдів (недійсним), що має "
"місце. Це тільки дійсний, щоб випустити цю команду один раз. oid є цілим "
"ідентифікатором, виділеним кожному степперу, кожен кінець, і кожен schedulable"
" gpio pin. Ведучий визначає завчасно кількість оїдів, які потрібно буде "
"виконувати апаратне забезпечення і переходить до мікроконтролера, щоб вона "
"може виділяти достатню пам'ять для зберігання картографування від недійсного "
"до внутрішнього об'єкта."

msgid ""
"`config_XXX oid=%c ...` : By convention any command starting with the "
"\"config_\" prefix creates a new micro-controller object and assigns the given"
" oid to it. For example, the config_digital_out command will configure the "
"specified pin as a digital output GPIO and create an internal object that the "
"host can use to schedule changes to the given GPIO. The oid parameter passed "
"into the config command is selected by the host and must be between zero and "
"the maximum count supplied in the allocate_oids command. The config commands "
"may only be run when the micro-controller is not in a configured state (ie, "
"prior to the host sending finalize_config) and after the allocate_oids command"
" has been sent."
msgstr ""
"`config_XXX oid=%c ...` : За умовчанням будь-якої команди, починаючи з "
"попередньогофікса \"config_\", створює новий об'єкт мікроконтролера і "
"призначає даної недійсності. Наприклад, команда config_digital_out налаштовує "
"зазначений штифт як цифровий вихід GPIO і створить внутрішній об'єкт, який "
"може використовуватися для розкладу змін до даної GPIO. Ім'я користувача, що "
"надходить в команду конфігурацій, вибирається хостом, і має бути між нуль і "
"максимальним числом, що надходить в команду виділених_oids. Команди "
"налаштування можуть працювати лише тоді, коли мікроконтролер не знаходиться в "
"налаштованому стані (тобто перед тим, як користувач надсилає остаточне "
"налаштування_config) і після відправки виділених_oids."

msgid ""
"`finalize_config crc=%u` : The finalize_config command transitions the micro-"
"controller from an unconfigured state to a configured state. The crc parameter"
" passed to the micro-controller is stored and provided back to the host in "
"\"config\" response messages. By convention, the host takes a 32bit CRC of the"
" configuration it will request and at the start of subsequent communication "
"sessions it checks that the CRC stored in the micro-controller exactly matches"
" its desired CRC. If the CRC does not match then the host knows the micro-"
"controller has not been configured in the state desired by the host."
msgstr ""
"`finalize_config crc=%u` : Заключення_config команди переходить мікроконтролер"
" від неконфігурованого стану до настроюваного стану. параметр crc, що "
"надходить до мікроконтролера, зберігається і наданий назад до хосту в "
"повідомленнях \"config\" відповідь. За конвенцією, господар приймає 32bit CRC "
"конфігурації, яку він буде запитати і при старті наступних сеансів зв'язку "
"перевірить, що CRC зберігається в мікроконтролері точно відповідає бажаному "
"CRC. Якщо КРТ не відповідає, то хост знає мікроконтролер не був налаштований в"
" стані, бажаному хостом."

msgid "Common micro-controller objects"
msgstr "Загальні мікроконтролери"

msgid "This section lists some commonly used config commands."
msgstr "Цей розділ містить деякі часто використовувані команди налаштування."

msgid ""
"`config_digital_out oid=%c pin=%u value=%c default_value=%c max_duration=%u` :"
" This command creates an internal micro-controller object for the given GPIO "
"'pin'. The pin will be configured in digital output mode and set to an initial"
" value as specified by 'value' (0 for low, 1 for high). Creating a digital_out"
" object allows the host to schedule GPIO updates for the given pin at "
"specified times (see the queue_digital_out command described below). Should "
"the micro-controller software go into shutdown mode then all configured "
"digital_out objects will be set to 'default_value'. The 'max_duration' "
"parameter is used to implement a safety check - if it is non-zero then it is "
"the maximum number of clock ticks that the host may set the given GPIO to a "
"non-default value without further updates. For example, if the default_value "
"is zero and the max_duration is 16000 then if the host sets the gpio to a "
"value of one then it must schedule another update to the gpio pin (to either "
"zero or one) within 16000 clock ticks. This safety feature can be used with "
"heater pins to ensure the host does not enable the heater and then go off-"
"line."
msgstr ""
"`config_digital_out oid=%c pin=%u значення=%c default_value=%c "
"max_duration=%u` : Ця команда створює внутрішній мікроконтролерний об'єкт для "
"даного GPIO 'pin'. Пиріг буде налаштований в режимі цифрового виходу і "
"встановлюється на початкове значення, вказане значенням 'value' (0 для "
"низьких, 1 для високої). Створення об'єкту цифрового_out дозволяє розмістити "
"оновлення GPIO для заданого штифта в зазначені часи (див. команду "
"чергу_digital_out описано нижче). Якщо програмне забезпечення micro-controller"
" перейде в режим вимкнення, то всі налаштовані об'єкти цифрових_out будуть "
"встановлені до 'default_value'. Параметри параметра 'max_duration' "
"використовується для здійснення перевірки безпеки - якщо це не камеро, то це "
"максимальна кількість годинникових кліщів, які хост може встановити дану GPIO "
"до недефектного значення без подальших оновлень. Наприклад, якщо значення за "
"замовчуванням_значення є нульовим і максимальною_duration є 16000, то якщо "
"ведучий встановлює gpio до значення одного, то він повинен розкладати інший "
"оновлення до gpio pin (до нуль або один) в 16000 годинних тик. Ця функція "
"безпеки може бути використана з нагрівачами, щоб забезпечити хост не увімкнути"
" нагрівач, а потім вимкнути лінію."

msgid ""
"`config_pwm_out oid=%c pin=%u cycle_ticks=%u value=%hu default_value=%hu "
"max_duration=%u` : This command creates an internal object for hardware based "
"PWM pins that the host may schedule updates for. Its usage is analogous to "
"config_digital_out - see the description of the 'set_pwm_out' and "
"'config_digital_out' commands for parameter description."
msgstr ""
"`config_pwm_out oid=%c pin=%u cycle_ticks=%u value=%hu default_value=%hu "
"max_duration=%u`: ця команда створює внутрішній об’єкт для апаратних штирів "
"PWM, для яких хост може планувати оновлення. Його використання аналогічне "
"config_digital_out - дивіться опис команд 'set_pwm_out' і 'config_digital_out'"
" для опису параметрів."

msgid ""
"`config_analog_in oid=%c pin=%u` : This command is used to configure a pin in "
"analog input sampling mode. Once configured, the pin can be sampled at regular"
" interval using the query_analog_in command (see below)."
msgstr ""
"`config_analog_in oid=%c pin=%u` : Ця команда використовується для "
"налаштування шпильки в аналоговому режимі відбору вхідних даних. Після "
"настроювання шпилька може бути зразкований з інтервалом за допомогою команди "
"query_analog_in (див. нижче)."

msgid ""
"`config_endstop oid=%c pin=%c pull_up=%c stepper_count=%c` : This command "
"creates an internal \"endstop\" object. It is used to specify the endstop pins"
" and to enable \"homing\" operations (see the endstop_home command below). The"
" command will configure the specified pin in digital input mode. The 'pull_up'"
" parameter determines whether hardware provided pullup resistors for the pin "
"(if available) will be enabled. The 'stepper_count' parameter specifies the "
"maximum number of steppers that this endstop may need to halt during a homing "
"operation (see endstop_home below)."
msgstr ""
"`config_endstop oid=%c pin=%c pull_up=%c stepper_count=%c` : Ця команда "
"створює об'єкт внутрішнього \"endstop\". Використовується для уточнення "
"шпильок торцевої панелі і для включення \"попередня\" операції (див. команду "
"endstop_home нижче). Команда налаштує зазначений шпильок в режимі цифрового "
"введення. Параметри параметра 'pull_up' визначає, чи буде ввімкнено апаратне "
"забезпечення резисторів для шпильки (в наявності). параметр 'stepper_count' "
"визначає максимальну кількість кроків, які цей кінець може знадобитися для "
"загартування під час операції хміння (див. endstop_home нижче)."

msgid ""
"`config_spi oid=%c bus=%u pin=%u mode=%u rate=%u shutdown_msg=%*s` : This "
"command creates an internal SPI object. It is used with spi_transfer and "
"spi_send commands (see below). The \"bus\" identifies the SPI bus to use (if "
"the micro-controller has more than one SPI bus available). The \"pin\" "
"specifies the chip select (CS) pin for the device. The \"mode\" is the SPI "
"mode (should be between 0 and 3). The \"rate\" parameter specifies the SPI bus"
" rate (in cycles per second). Finally, the \"shutdown_msg\" is an SPI command "
"to send to the given device should the micro-controller go into a shutdown "
"state."
msgstr ""
"`config_spi oid=%c bus=%u pin=%u mode=%u enddown_msg=%s` : Ця команда створює "
"внутрішній об'єкт SPI. Використовується з Spi_transfer і spi_send команди "
"(див. нижче). \"автобус\" визначає автобус SPI для використання (якщо "
"мікроконтролер має більше одного автобуса SPI). \"pin\" визначає вибір чіпа "
"(CS) для пристрою. \"mode\" - режим SPI (дозволяє бути між 0 і 3). параметр "
"\"rate\" визначає курс SPI (в циклах на другий). Нарешті, \"shutdown_msg\" - "
"це команда SPI, яка надсилається на даній пристрої, повинна переходити в стан "
"відключення."

msgid ""
"`config_spi_without_cs oid=%c bus=%u mode=%u rate=%u shutdown_msg=%*s` : This "
"command is similar to config_spi, but without a CS pin definition. It is "
"useful for SPI devices that do not have a chip select line."
msgstr ""
"`config_spi_без_cs oid=%c автобус=%u mode=%u enddown_msg=%s` : Ця команда "
"схожа на config_spi, але без визначення шпильок CS. Корисно для пристроїв SPI,"
" які не мають мікросхеми вибору лінії."

msgid "Common commands"
msgstr "Загальні команди"

msgid ""
"This section lists some commonly used run-time commands. It is likely only of "
"interest to developers looking to gain insight into Klipper."
msgstr ""
"Цей розділ містить деякі часто використовувані команди, що працюють. Ми можемо"
" самі зателефонувати одержувачу."

msgid ""
"`set_digital_out_pwm_cycle oid=%c cycle_ticks=%u` : This command configures a "
"digital output pin (as created by config_digital_out) to use \"software PWM\"."
" The 'cycle_ticks' is the number of clock ticks for the PWM cycle. Because the"
" output switching is implemented in the micro-controller software, it is "
"recommended that 'cycle_ticks' correspond to a time of 10ms or greater."
msgstr ""
"`set_digital_out_pwm_cycle oid=%c цикл_ticks=%u` : Ця команда налаштовує "
"цифровий вихідний штифт (як створений config_digital_out) для використання "
"\"software PWM\". «циклопедика» - це кількість годинникових кліщів для циклу "
"PWM. Оскільки вихідний комутації реалізується в програмному забезпеченні "
"мікроконтролера, рекомендується, щоб «циклопедика» відповідала часу 10 м або "
"більше."

msgid ""
"`queue_digital_out oid=%c clock=%u on_ticks=%u` : This command will schedule a"
" change to a digital output GPIO pin at the given clock time. To use this "
"command a 'config_digital_out' command with the same 'oid' parameter must have"
" been issued during micro-controller configuration. If "
"'set_digital_out_pwm_cycle' has been called then 'on_ticks' is the on duration"
" (in clock ticks) for the pwm cycle. Otherwise, 'on_ticks' should be either 0 "
"(for low voltage) or 1 (for high voltage)."
msgstr ""
"`queue_digital_out oid=%c годин=%u on_ticks=%u` : Ця команда буде розкладати "
"зміни в цифровий вихід GPIO шпильки за вказаний час. Щоб використовувати цю "
"команду, команда \"config_digital_out\" з тим самим параметром 'oid' повинна "
"бути випущена під час конфігурації мікроконтролера. Якщо "
"'set_digital_out_pwm_cycle' було викликано після того, як 'on_ticks' є "
"тривалістю (у годинникових клітках) для цикла pwm. В іншому випадку, "
"\"on_ticks\" повинен бути або 0 (для низької напруги) або 1 (для високої "
"напруги)."

msgid ""
"`queue_pwm_out oid=%c clock=%u value=%hu` : Schedules a change to a hardware "
"PWM output pin. See the 'queue_digital_out' and 'config_pwm_out' commands for "
"more info."
msgstr ""
"`queue_pwm_out oid=%c годин=%u value=%hu` : Графік зміни до апаратного PWM "
"вихідного штифта. Переглядайте команди 'queue_digital_out' і 'config_pwm_out' "
"для отримання додаткової інформації."

msgid ""
"`query_analog_in oid=%c clock=%u sample_ticks=%u sample_count=%c rest_ticks=%u"
" min_value=%hu max_value=%hu` : This command sets up a recurring schedule of "
"analog input samples. To use this command a 'config_analog_in' command with "
"the same 'oid' parameter must have been issued during micro-controller "
"configuration. The samples will start as of 'clock' time, it will report on "
"the obtained value every 'rest_ticks' clock ticks, it will over-sample "
"'sample_count' number of times, and it will pause 'sample_ticks' number of "
"clock ticks between over-sample samples. The 'min_value' and 'max_value' "
"parameters implement a safety feature - the micro-controller software will "
"verify the sampled value (after any oversampling) is always between the "
"supplied range. This is intended for use with pins attached to thermistors "
"controlling heaters - it can be used to check that a heater is within a "
"temperature range."
msgstr ""
"`query_analog_in oid=%c clock=%u sample_ticks=%u sample_count=%c rest_ticks=%u"
" min_value=%hu max_value=%hu`: ця команда встановлює повторюваний розклад "
"аналогових вхідних зразків. Щоб використовувати цю команду, під час "
"конфігурації мікроконтролера повинна бути видана команда 'config_analog_in' з "
"тим самим параметром 'oid'. Вибірки починаються з часу 'clock', він "
"звітуватиме про отримане значення кожні такти 'rest_ticks', він перевищуватиме"
" вибірку 'sample_count' кількість разів і призупиняти 'sample_ticks' кількість"
" тактів годинника між понад - зразки зразків. Параметри «min_value» і "
"«max_value» реалізують функцію безпеки — програмне забезпечення "
"мікроконтролера перевірить, що вибіркове значення (після будь-якої надмірної "
"вибірки) завжди знаходиться в межах наданого діапазону. Це призначено для "
"використання зі штифтами, прикріпленими до термісторів, що керують нагрівачами"
" - його можна використовувати, щоб перевірити, чи нагрівач знаходиться в межах"
" діапазону температур."

msgid ""
"`get_clock` : This command causes the micro-controller to generate a \"clock\""
" response message. The host sends this command once a second to obtain the "
"value of the micro-controller clock and to estimate the drift between host and"
" micro-controller clocks. It enables the host to accurately estimate the "
"micro-controller clock."
msgstr ""
"`get_clock` : Ця команда викликає мікроконтролер, щоб генерувати "
"\"розблокувати\" відповідь повідомлення. Ведучий передає цю команду один раз "
"на секунду, щоб отримати значення мікроконтролера годинника і оцінити дрейф "
"між хостами і мікроконтролерами. Ми можемо самі зателефонувати одержувачу."

msgid "Stepper commands"
msgstr "Покрокові команди"

msgid ""
"`queue_step oid=%c interval=%u count=%hu add=%hi` : This command schedules "
"'count' number of steps for the given stepper, with 'interval' number of clock"
" ticks between each step. The first step will be 'interval' number of clock "
"ticks since the last scheduled step for the given stepper. If 'add' is non-"
"zero then the interval will be adjusted by 'add' amount after each step. This "
"command appends the given interval/count/add sequence to a per-stepper queue. "
"There may be hundreds of these sequences queued during normal operation. New "
"sequence are appended to the end of the queue and as each sequence completes "
"its 'count' number of steps it is popped from the front of the queue. This "
"system allows the micro-controller to queue potentially hundreds of thousands "
"of steps - all with reliable and predictable schedule times."
msgstr ""
"`queue_step oid=%c interval=%u count=%hu add=%hi` : ця команда планує "
"«підрахувати» кількість кроків для даного степера з «інтервалом» кількості "
"тактів між кожним кроком. Першим кроком буде «інтервал» кількості тактів "
"годинника з моменту останнього запланованого кроку для даного степера. Якщо "
"«add» не дорівнює нулю, інтервал буде коригуватися на суму «add» після кожного"
" кроку. Ця команда додає заданий інтервал/підрахунок/додавання послідовності "
"до черги кожного кроку. Під час нормальної роботи в черзі можуть бути сотні "
"таких послідовностей. Нова послідовність додається в кінець черги, і коли "
"кожна послідовність завершує «підрахунок» кількості кроків, вона висувається з"
" початку черги. Ця система дозволяє мікроконтролеру поставити в чергу "
"потенційно сотні тисяч кроків - усі з надійним і передбачуваним розкладом."

msgid ""
"`set_next_step_dir oid=%c dir=%c` : This command specifies the value of the "
"dir_pin that the next queue_step command will use."
msgstr ""
"`set_next_step_dir oid=%c dir=%c` : Ця команда визначає значення dir_pin, що "
"використовується наступний чергу_step."

msgid ""
"`reset_step_clock oid=%c clock=%u` : Normally, step timing is relative to the "
"last step for a given stepper. This command resets the clock so that the next "
"step is relative to the supplied 'clock' time. The host usually only sends "
"this command at the start of a print."
msgstr ""
"`reset_step_clock oid=%c годин=%u` : Нормально, step timing є відносно "
"останнього кроку для даної stepper. Ця команда скидає годинник так, щоб "
"наступний крок був відносно поставленого часу 'clock'. Ведуться зазвичай "
"тільки надсилає цю команду на старті друку."

msgid ""
"`stepper_get_position oid=%c` : This command causes the micro-controller to "
"generate a \"stepper_position\" response message with the stepper's current "
"position. The position is the total number of steps generated with dir=1 minus"
" the total number of steps generated with dir=0."
msgstr ""
"`stepper_get_position oid=%c` : Ця команда викликає мікроконтролер, щоб "
"генерувати повідомлення про відповідь \"степпер_положення\". Позиція - "
"загальна кількість кроків, створених за допомогою dr=1 minus загальна "
"кількість кроків, створених за допомогою dir=0."

msgid ""
"`endstop_home oid=%c clock=%u sample_ticks=%u sample_count=%c rest_ticks=%u "
"pin_value=%c` : This command is used during stepper \"homing\" operations. To "
"use this command a 'config_endstop' command with the same 'oid' parameter must"
" have been issued during micro-controller configuration. When this command is "
"invoked, the micro-controller will sample the endstop pin every 'rest_ticks' "
"clock ticks and check if it has a value equal to 'pin_value'. If the value "
"matches (and it continues to match for 'sample_count' additional samples "
"spread 'sample_ticks' apart) then the movement queue for the associated "
"stepper will be cleared and the stepper will come to an immediate halt. The "
"host uses this command to implement homing - the host instructs the endstop to"
" sample for the endstop trigger and then it issues a series of queue_step "
"commands to move a stepper towards the endstop. Once the stepper hits the "
"endstop, the trigger will be detected, the movement halted, and the host "
"notified."
msgstr ""
"`endstop_home oid=%c clock=%u sample_ticks=%u sample_count=%c rest_ticks=%u "
"pin_value=%c` : ця команда використовується під час крокових операцій "
"\"наведення\". Щоб використовувати цю команду, під час конфігурації "
"мікроконтролера має бути видано команду 'config_endstop' з тим самим "
"параметром 'oid'. Коли ця команда викликається, мікроконтролер буде пробувати "
"кінцевий висновок кожні такти 'rest_ticks' і перевіряти, чи має воно значення,"
" рівне 'pin_value'. Якщо значення збігається (і воно продовжує збігатися для "
"додаткових семплів 'sample_count', рознесених 'sample_ticks'), то чергу руху "
"для пов'язаного степера буде очищено, а степпер негайно зупиниться. Хост "
"використовує цю команду для реалізації самонаведення — хост дає вказівку "
"кінцевій зупинці здійснити вибірку для тригера кінцевої зупинки, а потім видає"
" серію команд queue_step для переміщення крокового кроку до кінцевої зупинки. "
"Коли степпер торкається кінцевого упору, тригер буде виявлено, рух зупинено, а"
" хост буде повідомлено."

msgid "Move queue"
msgstr "Перемістити чергу"

msgid ""
"Each queue_step command utilizes an entry in the micro-controller \"move "
"queue\". This queue is allocated when it receives the \"finalize_config\" "
"command, and it reports the number of available queue entries in \"config\" "
"response messages."
msgstr ""
"Кожна черга_покрокова команда використовує запис в мікроконтролері "
"\"переміщення черг\". Ця черга виділяється, коли вона отримує команду "
"\"finalize_config\", і вона повідомляє про кількість доступних записів черги в"
" повідомленнях \"config\" відповідь."

msgid ""
"It is the responsibility of the host to ensure that there is available space "
"in the queue before sending a queue_step command. The host does this by "
"calculating when each queue_step command completes and scheduling new "
"queue_step commands accordingly."
msgstr ""
"Це відповідальність хосту, щоб забезпечити, що є доступним простір в черзі "
"перед відправкою команди. Ведуться це шляхом обчислення, коли кожна "
"черга_покрокова команда завершує і scheduling нових команд чергування "
"відповідно."

msgid "SPI Commands"
msgstr "Команди SPI"

msgid ""
"`spi_transfer oid=%c data=%*s` : This command causes the micro-controller to "
"send 'data' to the spi device specified by 'oid' and it generates a "
"\"spi_transfer_response\" response message with the data returned during the "
"transmission."
msgstr ""
"`spi_transfer oid=%c data=%*s` : Ця команда викликає мікроконтролер для "
"надсилання \"даних\" до пристрою спі, зазначеного \"недійсним\" і генерує "
"повідомлення \"spi_transfer_response\" з даними, що повернулися під час "
"передачі."

msgid ""
"`spi_send oid=%c data=%*s` : This command is similar to \"spi_transfer\", but "
"it does not generate a \"spi_transfer_response\" message."
msgstr ""
"`spi_send oid=%c data=%*s` : Ця команда схожа на \"spi_transfer\", але вона не"
" генерує повідомлення \"spi_transfer_response\"."

#: docs/MCU_Commands.md:block 1 (header)
msgid "MCU commands"
msgstr "Команди МКУ"

#: docs/MCU_Commands.md:block 15 (unordered list)
msgid ""
"`config_stepper oid=%c step_pin=%c dir_pin=%c invert_step=%c "
"step_pulse_ticks=%u` : This command creates an internal stepper object. The "
"'step_pin' and 'dir_pin' parameters specify the step and direction pins "
"respectively; this command will configure them in digital output mode. The "
"'invert_step' parameter specifies whether a step occurs on a rising edge "
"(invert_step=0) or falling edge (invert_step=1). The 'step_pulse_ticks' "
"parameter specifies the minimum duration of the step pulse. If the mcu exports"
" the constant 'STEPPER_BOTH_EDGE=1' then setting step_pulse_ticks=0 and "
"invert_step=-1 will setup for stepping on both the rising and falling edges of"
" the step pin."
msgstr ""
"`config_stepper oid=%c Крок_pin=%c dir_pin=%c invert_step=%c "
"step_pulse_ticks=%u` : Ця команда створює об'єкт внутрішнього кроку. Параметри"
" 'step_pin' і 'dir_pin' вкажіть крок і напрямні шпильки відповідно; ця команда"
" налаштує їх в режимі цифрового виведення. параметр 'invert_step' визначає, чи"
" відбувається крок на висхідному краю (invert_step=0) або падіння краю "
"(invert_step=1). параметр 'step_pulse_ticks' визначає мінімальну тривалість "
"імпульсу кроку. Якщо мку вивозить постійний 'STEPPER_BOTH_EDGE=1' потім "
"встановивши крок_пульс_ticks=0 і invert_step=-1 буде налаштовуватися як на "
"вирості, так і знизу країв крокової шпильки."

#~ msgid ""
#~ "`config_stepper oid=%c step_pin=%c dir_pin=%c invert_step=%c` : This command "
#~ "creates an internal stepper object. The 'step_pin' and 'dir_pin' parameters "
#~ "specify the step and direction pins respectively; this command will configure "
#~ "them in digital output mode. The 'invert_step' parameter specifies whether a "
#~ "step occurs on a rising edge (invert_step=0) or falling edge (invert_step=1)."
#~ msgstr ""
