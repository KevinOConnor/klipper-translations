# mirokymac <toufubomb@gmail.com>, 2021.
# Yifei Ding <dingyifeiair@gmail.com>, 2021, 2022, 2023.
# Neko.vecter <Vecterfang@icloud.com>, 2022.
# 红豆蛋黄派 <zgpride87@outlook.com>, 2022.
# xm Y <3260838022@qq.com>, 2023.
# Hosted Weblate <mfvotmjhcj@iubridge.com>, 2023, 2024.
# Dayong Wang <wuyoutech@gmail.com>, 2023.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2024-02-23 22:02+0000\n"
"Last-Translator: Hosted Weblate <mfvotmjhcj@iubridge.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/klipper/measuring_resonances/zh_Hans/>\n"
"Language: zh_Hans\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.5-dev\n"

msgid "Measuring Resonances"
msgstr "共振值测量"

msgid "Installation instructions"
msgstr "安装指南"

msgid "Wiring"
msgstr "接线"

msgid ""
"You need to connect ADXL345 to your Raspberry Pi via SPI. Note that the I2C "
"connection, which is suggested by ADXL345 documentation, has too low "
"throughput and **will not work**. The recommended connection scheme:"
msgstr ""
"我们需要将ADXL345连接到树莓派的SPI接口。注意，尽管ADXL345文档推荐使用I2C，但其数据吞吐能力不足，**不能**实现共振测量的要求。推荐的接线图为："

msgid "ADXL345 pin"
msgstr "ADXL345引脚"

msgid "RPi pin"
msgstr "树莓派引脚"

msgid "RPi pin name"
msgstr "树莓派引脚名称"

msgid "3V3 (or VCC)"
msgstr "3V3 或 VCC"

msgid "01"
msgstr "01"

msgid "3.3v DC power"
msgstr "3.3v 直流（DC）电源"

msgid "GND"
msgstr "GND"

msgid "06"
msgstr "06"

msgid "Ground"
msgstr "地（GND）"

msgid "CS"
msgstr "CS"

msgid "24"
msgstr "24"

msgid "GPIO08 (SPI0_CE0_N)"
msgstr "GPIO08 (SPI0_CE0_N)"

msgid "SDO"
msgstr "SDO"

msgid "21"
msgstr "21"

msgid "GPIO09 (SPI0_MISO)"
msgstr "GPIO09 (SPI0_MISO)"

msgid "SDA"
msgstr "SDA"

msgid "19"
msgstr "19"

msgid "GPIO10 (SPI0_MOSI)"
msgstr "GPIO10 (SPI0_MOSI)"

msgid "SCL"
msgstr "SCL"

msgid "23"
msgstr "23"

msgid "GPIO11 (SPI0_SCLK)"
msgstr "GPIO11 (SPI0_SCLK)"

msgid "Fritzing wiring diagrams for some of the ADXL345 boards:"
msgstr "部分ADXL345开发板的Fritzing接线图如下："

msgid "![ADXL345-Rpi](img/adxl345-fritzing.png)"
msgstr "![ADXL345-树莓派](img/adxl345-fritzing.png)"

msgid "Mounting the accelerometer"
msgstr "固定加速度传感器"

msgid ""
"The accelerometer must be attached to the toolhead. One needs to design a "
"proper mount that fits their own 3D printer. It is better to align the axes of"
" the accelerometer with the printer's axes (but if it makes it more "
"convenient, axes can be swapped - i.e. no need to align X axis with X and so "
"forth - it should be fine even if Z axis of accelerometer is X axis of the "
"printer, etc.)."
msgstr ""
"加速度传感器应固定在打印头上。应根据打印机的情况设计合适的固定件。推荐将加速度的测量轴与打印机运行轴的方向进行对齐。然而，如果轴对齐极其麻烦，可以将打印机的轴使用其他测量轴对齐，比如打印机+X对应传感器-X，甚至打印机+X对应传感器-"
"Z等。"

msgid "An example of mounting ADXL345 on the SmartEffector:"
msgstr "下面是ADXL345固定到SmartEffector的示例："

msgid "![ADXL345 on SmartEffector](img/adxl345-mount.jpg)"
msgstr "![ADXL345固定在SmartEffector](img/adxl345-mount.jpg)"

msgid ""
"Note that on a bed slinger printer one must design 2 mounts: one for the "
"toolhead and one for the bed, and run the measurements twice. See the "
"corresponding [section](#bed-slinger-printers) for more details."
msgstr ""
"注意，滑床式打印机需要设计两个固定件：一个安装于打印头，另一个用于热床，并进行两次测量。详见 [对应分节](#bed-slinger-printers)。"

msgid ""
"**Attention:** make sure the accelerometer and any screws that hold it in "
"place do not touch any metal parts of the printer. Basically, the mount must "
"be designed such as to ensure the electrical isolation of the accelerometer "
"from the printer frame. Failing to ensure that can create a ground loop in the"
" system that may damage the electronics."
msgstr ""
"**注意！**：务必确保加速度传感器和任何螺丝都不应该接触到打印机的金属部分。紧固件必须设计成在加速度传感器和打印机框体间形成电气绝缘。错误的设计可能会形成短路，从而损坏电气元件。"

msgid "Software installation"
msgstr "软件设置"

msgid ""
"Make sure the Linux SPI driver is enabled by running `sudo raspi-config` and "
"enabling SPI under the \"Interfacing options\" menu."
msgstr ""
"通过运行`sudo raspi-config` 后的 \"Interfacing options\"菜单中启用 SPI 以确保Linux SPI "
"驱动已启用。"

msgid ""
"It is advised to start with 1 probe point, in the middle of the print bed, "
"slightly above it."
msgstr "建议在测试开始前，用探针在热床中央进行一次探测，触发后稍微上移。"

msgid "Restart Klipper via the `RESTART` command."
msgstr "通过`RESTART`命令重启Klipper。"

msgid "Measuring the resonances"
msgstr "测量共振值"

msgid "Checking the setup"
msgstr "检查设置"

msgid "Now you can test a connection."
msgstr "首先测试加速度传感器的连接。"

msgid ""
"For \"non bed-slingers\" (e.g. one accelerometer), in Octoprint, enter "
"`ACCELEROMETER_QUERY`"
msgstr "对于只有一个加速度传感器的情况，在Octoprint，输入`ACCELEROMETER_QUERY`（检查已连接的加速度传感器状态）"

msgid ""
"For \"bed-slingers\" (e.g. more than one accelerometer), enter "
"`ACCELEROMETER_QUERY CHIP=<chip>` where `<chip>` is the name of the chip as-"
"entered, e.g. `CHIP=bed` (see: [bed-slinger](#bed-slinger-printers)) for all "
"installed accelerometer chips."
msgstr ""
"对于“滑动床”（即有多个加速度传感器），输入`ACCELEROMETER_QUERY "
"CHIP=<chip>`，其中`<chip>`是设置文档中的加速度传感器命名，例如 `CHIP=bed`(参见：[bed-slinger](#bed-"
"slinger-printers))。"

msgid ""
"You should see the current measurements from the accelerometer, including the "
"free-fall acceleration, e.g."
msgstr "你应该会看到来自加速度计的当前测量值，包括自由落体（free-fall）的加速度，比如说。"

msgid ""
"Next, try running `MEASURE_AXES_NOISE` in Octoprint, you should get some "
"baseline numbers for the noise of accelerometer on the axes (should be "
"somewhere in the range of ~1-100). Too high axes noise (e.g. 1000 and more) "
"can be indicative of the sensor issues, problems with its power, or too noisy "
"imbalanced fans on a 3D printer."
msgstr ""
"下一步，在Octoprint中输入 "
"`MEASURE_AXES_NOISE`，之后将会显示各个轴的基准测量噪声（其值应在1-100之间）。如果轴的噪声极高（例如 1000 "
"或更高）可能意味着3D打印机上存在传感器问题、电源问题或不平衡的风扇。"

msgid "Now you can run some real-life tests. Run the following command:"
msgstr "现在可以运行进行实测。运行以下命令:"

msgid ""
"Note that it will create vibrations on X axis. It will also disable input "
"shaping if it was enabled previously, as it is not valid to run the resonance "
"testing with the input shaper enabled."
msgstr ""
"注意，这将在X轴上产生振动。如果之前启用了输入整形（input shaping ），它也将禁用输入整形，因为在启用输入整形的情况下运行共振测试是无效的。"

msgid ""
"**Attention!** Be sure to observe the printer for the first time, to make sure"
" the vibrations do not become too violent (`M112` command can be used to abort"
" the test in case of emergency; hopefully it will not come to this though). If"
" the vibrations do get too strong, you can attempt to specify a lower than the"
" default value for `accel_per_hz` parameter in `[resonance_tester]` section, "
"e.g."
msgstr ""
"**注意！**请确保第一次运行时时刻观察打印机，以确保振动不会太剧烈（`M112`命令可以在紧急情况下中止测试；但愿不会到这一步）。如果振动确实太强烈，你可以尝试在`[Resonance_tester]`分段中为`accel_per_hz`参数指定一个低于默认值的值，比如说。"

msgid "If it works for X axis, run for Y axis as well:"
msgstr "如果它适用于 X 轴，则也可以为 Y 轴运行："

msgid ""
"This script will generate the charts `/tmp/shaper_calibrate_x.png` and "
"`/tmp/shaper_calibrate_y.png` with frequency responses. You will also get the "
"suggested frequencies for each input shaper, as well as which input shaper is "
"recommended for your setup. For example:"
msgstr ""
"此脚本将生成频率响应的图表 `/tmp/shaper_calibrate_x.png` 和 "
"`/tmp/shaper_calibrate_y.png`。它还会给出每个输入整形器的建议频率，以及推荐的输入整形器。例如："

msgid "![Resonances](img/calibrate-y.png)"
msgstr "![共振](img/calibrate-y.png)"

msgid ""
"The suggested configuration can be added to `[input_shaper]` section of "
"`printer.cfg`, e.g.:"
msgstr "推荐的配置可以添加到`[input_shaper]`的`printer.cfg`分段中，例如："

msgid ""
"or you can choose some other configuration yourself based on the generated "
"charts: peaks in the power spectral density on the charts correspond to the "
"resonance frequencies of the printer."
msgstr "也可以根据生成的图表自己选择一些其他配置：图表上的功率谱密度的峰值对应于打印机的共振频率。"

msgid "Bed-slinger printers"
msgstr "平行于喷嘴移动打印床的打印机"

msgid ""
"If your printer is a bed slinger printer, you will need to change the location"
" of the accelerometer between the measurements for X and Y axes: measure the "
"resonances of X axis with the accelerometer attached to the toolhead and the "
"resonances of Y axis - to the bed (the usual bed slinger setup)."
msgstr ""
"如果打印机的打印床可以平行于喷嘴移动，测量X和Y轴时需要改变加速度计的安装位置。安装加速度计到打印头以测量X轴共振，安装到打印床以测量Y轴（该类打印机的常见配置）。"

msgid ""
"Then the commands `TEST_RESONANCES AXIS=X` and `TEST_RESONANCES AXIS=Y` will "
"use the correct accelerometer for each axis."
msgstr "然后，命令`TEST_RESONANCES AXIS=X`和`TEST_RESONANCES AXIS=Y`会使用每个轴相应的加速度计。"

msgid "Max smoothing"
msgstr "最大平滑度"

msgid ""
"Keep in mind that the input shaper can create some smoothing in parts. "
"Automatic tuning of the input shaper performed by `calibrate_shaper.py` script"
" or `SHAPER_CALIBRATE` command tries not to exacerbate the smoothing, but at "
"the same time they try to minimize the resulting vibrations. Sometimes they "
"can make a sub-optimal choice of the shaper frequency, or maybe you simply "
"prefer to have less smoothing in parts at the expense of a larger remaining "
"vibrations. In these cases, you can request to limit the maximum smoothing "
"from the input shaper."
msgstr ""
"请注意，输入整形器会在使一些打印的路径被平滑。由执行`calibrate_shaper.py`脚本或`SHAPER_CALIBRATE`命令自动得出的输入整形器会尽量不加剧平滑的同时试图最小化产生的振动。脚本可能会得出不是最优的整形器的频率，或者你可能希望以更强的剩余振动为代价来减少平滑度。在这些情况下，可以要求脚本限制输入整形器的最大平滑度。"

msgid "Let's consider the following results from the automatic tuning:"
msgstr "参考以下自动调谐结果："

msgid "![Resonances](img/calibrate-x.png)"
msgstr "![共振](img/calibrate-x.png)"

msgid ""
"Note that the reported `smoothing` values are some abstract projected values. "
"These values can be used to compare different configurations: the higher the "
"value, the more smoothing a shaper will create. However, these smoothing "
"scores do not represent any real measure of smoothing, because the actual "
"smoothing depends on [`max_accel`](#selecting-max-accel) and "
"`square_corner_velocity` parameters. Therefore, you should print some test "
"prints to see how much smoothing exactly a chosen configuration creates."
msgstr ""
"请注意，报告的 `smoothing "
"`（平滑）值是抽象的预测值。这些值可用于比较不同的配置：值越高，整形器造成的平滑度就越高。但是，这些平滑值并不表示任何实际的平滑度的量，因为实际的平滑取决于[`max_accel`](#selecting-"
"max-accel)和`square_corner_velocity`参数。因此，如果希望了解所选配置造成的实际平滑效果，需要打印一些测试件。"

msgid ""
"In the example above the suggested shaper parameters are not bad, but what if "
"you want to get less smoothing on the X axis? You can try to limit the maximum"
" shaper smoothing using the following command:"
msgstr "在上面的示例中，脚本给出了不错的整形器参数建议，但是如果想在 X 轴上减少平滑度，就需要尝试使用以下命令限制脚本挑选参数时的整形器平滑值极限："

msgid ""
"which limits the smoothing to 0.2 score. Now you can get the following result:"
msgstr "这将平滑值限制在0.2。现在可以得到以下结果："

msgid "![Resonances](img/calibrate-x-max-smoothing.png)"
msgstr "![共振](img/calibrate-x-max-smoothing.png)"

msgid ""
"If you compare to the previously suggested parameters, the vibrations are a "
"bit larger, but the smoothing is significantly smaller than previously, "
"allowing larger maximum acceleration."
msgstr "新的参数与之前的建议比，振动要大一些，但平滑度明显比之前小，允许打印时更高的极限加速度。"

msgid ""
"When deciding which `max_smoothing` parameter to choose, you can use a trial-"
"and-error approach. Try a few different values and see which results you get. "
"Note that the actual smoothing produced by the input shaper depends, "
"primarily, on the lowest resonance frequency of the printer: the higher the "
"frequency of the lowest resonance - the smaller the smoothing. Therefore, if "
"you request the script to find a configuration of the input shaper with the "
"unrealistically small smoothing, it will be at the expense of increased "
"ringing at the lowest resonance frequencies (which are, typically, also more "
"prominently visible in prints). So, always double-check the projected "
"remaining vibrations reported by the script and make sure they are not too "
"high."
msgstr ""
"在选择 `max_smoothing` "
"参数时，可以使用试错的方法。试试几个不同的值并对比得到的结果。请注意，输入整形器产生的实际平滑效果主要取决于打印机的最低谐振频率：最低谐振的频率越高，平滑效果越小。因此，如果要求脚本找到一个具有不切实际小平滑度的输入整形器配置，它将以增加最低共振频率的振纹为代价（通常，这在打印件中比平滑产生的影响更明显）。因此，一定要仔细检查脚本所报告的预计剩余振动，确保它们不会太高。"

msgid ""
"Note that if you chose a good `max_smoothing` value for both of your axes, you"
" can store it in the `printer.cfg` as"
msgstr "注意，如果为两个轴选择了一个相同的 `max_smoothing` 值，可以把它存储在 `printer.cfg` 为"

msgid ""
"Then, if you [rerun](#input-shaper-re-calibration) the input shaper auto-"
"tuning using `SHAPER_CALIBRATE` Klipper command in the future, it will use the"
" stored `max_smoothing` value as a reference."
msgstr ""
"如果在将来使用`SHAPER_CALIBRATE` Klipper命令[重新运行](#input-shaper-re-"
"calibration)输入整形器自动调谐，它将使用存储的`max_smoothing` 值作为参考。"

msgid "Selecting max_accel"
msgstr "选择 max_accel"

msgid ""
"Since the input shaper can create some smoothing in parts, especially at high "
"accelerations, you will still need to choose the `max_accel` value that does "
"not create too much smoothing in the printed parts. A calibration script "
"provides an estimate for `max_accel` parameter that should not create too much"
" smoothing. Note that the `max_accel` as displayed by the calibration script "
"is only a theoretical maximum at which the respective shaper is still able to "
"work without producing too much smoothing. It is by no means a recommendation "
"to set this acceleration for printing. The maximum acceleration your printer "
"is able to sustain depends on its mechanical properties and the maximum torque"
" of the used stepper motors. Therefore, it is suggested to set `max_accel` in "
"`[printer]` section that does not exceed the estimated values for X and Y "
"axes, likely with some conservative safety margin."
msgstr ""
"由于输入整形器会在打印件中产生一些平滑，特别是在高加速时，选择一个不会产生过多平滑的`max_accel` 依然很重要校准脚本为`max_accel` "
"参数提供了一个不应该产生过多平滑的估计值。请注意，由校准脚本显示的`max_accel` "
"只是一个理论上的最大值，在这个值上，各自的整形器仍然能够工作而不产生过多的平滑。这决不是建议设置的打印加速度。你的打印机能够承受的最大加速度取决于它的机械性能和所用步进电机的最大扭矩。因此，建议在`[printer]`"
" 部分设置`max_accel` 时不要超过X轴和Y轴的估计值，并保守一些。"

msgid ""
"Alternatively, follow [this](Resonance_Compensation.md#selecting-max_accel) "
"part of the input shaper tuning guide and print the test model to choose "
"`max_accel` parameter experimentally."
msgstr ""
"或者，按照[这个](Resonance_Compensation.md#selecting-"
"max_accel)章节的输入整形器调整指南，打印测试模型，通过实验选择`max_accel` 参数。"

msgid ""
"The same notice applies to the input shaper [auto-calibration](#input-shaper-"
"auto-calibration) with `SHAPER_CALIBRATE` command: it is still necessary to "
"choose the right `max_accel` value after the auto-calibration, and the "
"suggested acceleration limits will not be applied automatically."
msgstr ""
"同样的通知也适用于带有`SHAPER_CALIBRATE` 命令的输入整形器[自动校准](#input-shaper-auto-"
"calibration)：在自动校准后仍需选择正确的`max_accel` 值，建议的加速度限制将不会被自动应用。"

msgid ""
"If you are doing a shaper re-calibration and the reported smoothing for the "
"suggested shaper configuration is almost the same as what you got during the "
"previous calibration, this step can be skipped."
msgstr "如果重新校准一个整形器，并且建议的整形器配置的报告平滑度与你在以前的校准中得到的几乎相同，这个步骤可以被跳过。"

msgid "Input Shaper auto-calibration"
msgstr "输入整形器自动校准"

msgid ""
"Besides manually choosing the appropriate parameters for the input shaper "
"feature, it is also possible to run the auto-tuning for the input shaper "
"directly from Klipper. Run the following command via Octoprint terminal:"
msgstr "除了为输入整形器功能手动选择适当的参数外，还可以直接从Klipper运行输入整形器的自动调谐。通过Octoprint终端运行以下命令："

msgid ""
"This will run the full test for both axes and generate the csv output "
"(`/tmp/calibration_data_*.csv` by default) for the frequency response and the "
"suggested input shapers. You will also get the suggested frequencies for each "
"input shaper, as well as which input shaper is recommended for your setup, on "
"Octoprint console. For example:"
msgstr ""
"这将为两个轴运行完整的测试，并生成用于频率响应和建议的输入整形器的csv输出（默认为`/tmp/calibration_data_*.csv` "
"）。在Octoprint中会提示控制台每个输入整形器的建议频率，以及为这台打印机推荐的输入整形器。例如："

msgid ""
"If you agree with the suggested parameters, you can execute `SAVE_CONFIG` now "
"to save them and restart the Klipper. Note that this will not update "
"`max_accel` value in `[printer]` section. You should update it manually "
"following the considerations in [Selecting max_accel](#selecting-max_accel) "
"section."
msgstr ""
"如果认同建议的参数，现在可以执行`SAVE_CONFIG` 来保存设置并重新启动Klipper。 请注意，这不会更新`[printer]` "
"分段中的`max_accel`值。应该按照[选择max_accel](#selecting-max_accel)章节中的注意事项手动更新它。"

msgid ""
"If your printer is a bed slinger printer, you can specify which axis to test, "
"so that you can change the accelerometer mounting point between the tests (by "
"default the test is performed for both axes):"
msgstr "如果你的打印机热床水平移动，可以选择测试的轴，这样就可以在测试之间改变加速度计的安装点（默认情况下，测试会同时对两个轴一起进行）："

msgid "You can execute `SAVE_CONFIG` twice - after calibrating each axis."
msgstr "可以在校准每个轴之后执行`SAVE_CONFIG`。"

msgid ""
"However, if you connected two accelerometers simultaneously, you simply run "
"`SHAPER_CALIBRATE` without specifying an axis to calibrate the input shaper "
"for both axes in one go."
msgstr "然而，如果同时连接了两个加速度计，只需要运行`SHAPER_CALIBRATE` ，而不指定轴，就可以一次性校准两个轴的输入整形器。"

msgid "Input Shaper re-calibration"
msgstr "重新校准输入整形器"

msgid ""
"`SHAPER_CALIBRATE` command can be also used to re-calibrate the input shaper "
"in the future, especially if some changes to the printer that can affect its "
"kinematics are made. One can either re-run the full calibration using "
"`SHAPER_CALIBRATE` command, or restrict the auto-calibration to a single axis "
"by supplying `AXIS=` parameter, like"
msgstr ""
"`SHAPER_CALIBRATE` "
"命令也可以用来在将来重新校准输入整形器，特别是当打印机发生了一些可能影响其运动学的变化时。可以使用`SHAPER_CALIBRATE` "
"命令重新进行全面校准，或者通过提供`AXIS=` 参数将自动校准限制在一个轴上，例如"

msgid ""
"Also, due to some noise in measurements, it is possible that the tuning "
"results will be slightly different from one calibration run to another one. "
"Still, it is not expected that the noise will affect the print quality too "
"much. However, it is still advised to double-check the suggested parameters, "
"and print some test prints before using them to confirm they are good."
msgstr ""
"此外，由于测量中的一些噪音，每次校准得到的调谐结果会略有不同。不过，这些噪音一般不会对打印质量产生太大影响。然而，我们仍然建议仔细检查建议的参数，并在使用前打印一些测试件以确认它们是正确的。"

msgid "Offline processing of the accelerometer data"
msgstr "离线处理加速计数据"

msgid ""
"It is possible to generate the raw accelerometer data and process it offline "
"(e.g. on a host machine), for example to find resonances. In order to do so, "
"run the following commands via Octoprint terminal:"
msgstr "可以生成原始的加速度计数据并离线处理（例如在一台电脑上），以查找共振频率为例，在Octoprint的终端内运行如下命令："

msgid ""
"ignoring any errors for `SET_INPUT_SHAPER` command. For `TEST_RESONANCES` "
"command, specify the desired test axis. The raw data will be written into "
"`/tmp` directory on the RPi."
msgstr "忽略`SET_INPUT_SHAPER`命令的任何错误。对`TEST_RESONANCES`指定测试的方向。原始数据保存至`/tmp`目录内。"

msgid ""
"The data can be processed later by the following scripts: "
"`scripts/graph_accelerometer.py` and `scripts/calibrate_shaper.py`. Both of "
"them accept one or several raw csv files as the input depending on the mode. "
"The graph_accelerometer.py script supports several modes of operation:"
msgstr ""
"这些数据可在以后通过`scripts/graph_accelerometer.py`和scripts/calibrate_shaper.py`脚本进行处理，在不同的工作模式下，两种脚本支持一个或多个原始数据csv文件作为输入。graph_accelerometer.py支持以下几种模式："

msgid ""
"plotting raw accelerometer data (use `-r` parameter), only 1 input is "
"supported;"
msgstr "绘制原始加速度数据图（使用`-r`参数），仅支持一个输入；"

msgid ""
"plotting a frequency response (no extra parameters required), if multiple "
"inputs are specified, the average frequency response is computed;"
msgstr "绘制频率响应图（无需额外参数），如果指定了多个输入文件，将计算他们的平均值；"

msgid ""
"comparison of the frequency response between several inputs (use `-c` "
"parameter); you can additionally specify which accelerometer axis to consider "
"via `-a x`, `-a y` or `-a z` parameter (if none specified, the sum of "
"vibrations for all axes is used);"
msgstr ""
"在多个输入之间比较频率响应曲线（使用`-c`参数）；通过`-ax，`-ay`或`-az`参数，可以额外指定哪个轴参与比较（在未指定时将计算所有轴振动的总和）;"

msgid ""
"plotting the spectrogram (use `-s` parameter), only 1 input is supported; you "
"can additionally specify which accelerometer axis to consider via `-a x`, `-a "
"y` or `-a z` parameter (if none specified, the sum of vibrations for all axes "
"is used)."
msgstr ""
"绘制频谱图(使用`-s`参数)，只支持1个输入；您可以通过`-a x`、`-a y`或`-a "
"z`参数指定考虑哪个加速度计轴(如果不指定，则取所有轴的振动总和)。"

msgid ""
"Note that graph_accelerometer.py script supports only the raw_data\\*.csv "
"files and not resonances\\*.csv or calibration_data\\*.csv files."
msgstr ""
"请注意，graph_accelerometer.py脚本仅支持RAW_DATA\\*.csv文件，不支持共振\\*.csv或CALIBRATION_DATA\\*.csv文件。"

msgid "For example,"
msgstr "例如，"

msgid ""
"will plot the comparison of several `/tmp/raw_data_x_*.csv` files for Z axis "
"to `/tmp/resonances_x.png` file."
msgstr "将绘制Z轴的几个`/tmp/raw_data_x_*.csv`文件与`/tMP/Resonance_x.png`文件的比较。"

msgid ""
"The shaper_calibrate.py script accepts 1 or several inputs and can run "
"automatic tuning of the input shaper and suggest the best parameters that work"
" well for all provided inputs. It prints the suggested parameters to the "
"console, and can additionally generate the chart if `-o output.png` parameter "
"is provided, or the CSV file if `-c output.csv` parameter is specified."
msgstr ""
"Shaper_calbrate.py脚本接受1个或多个输入，可以运行输入整形器的自动调优，并建议适合所有提供的输入的最佳参数。它会将建议的参数打印到控制台，如果提供了`-o"
" output.png`参数，则可以额外生成图表；如果指定了`-c output.csv`参数，则可以额外生成CSV文件。"

msgid ""
"Providing several inputs to shaper_calibrate.py script can be useful if "
"running some advanced tuning of the input shapers, for example:"
msgstr "如果运行输入整形器的一些高级调优，向shaper_calbrate.py脚本提供几个输入可能会很有用，例如："

msgid ""
"Running `TEST_RESONANCES AXIS=X OUTPUT=raw_data` (and `Y` axis) for a single "
"axis twice on a bed slinger printer with the accelerometer attached to the "
"toolhead the first time, and the accelerometer attached to the bed the second "
"time in order to detect axes cross-resonances and attempt to cancel them with "
"input shapers."
msgstr ""
"在第一次将加速度计连接到刀头、第二次将加速度表连接到床的床甩油机打印机上，对单个轴运行两次`TEST_RESONANCES AXIS=X "
"OUTPUT=raw_data`（和`Y`轴），以检测轴的交叉共振，并尝试用输入整形器消除它们。"

msgid ""
"Running `TEST_RESONANCES AXIS=Y OUTPUT=raw_data` twice on a bed slinger with a"
" glass bed and a magnetic surfaces (which is lighter) to find the input shaper"
" parameters that work well for any print surface configuration."
msgstr ""
"在具有玻璃床和磁性表面（较轻）的甩床器上运行两次`TEST_RESONANCES AXIS=Y "
"OUTPUT=raw_data`，以找到适用于任何打印表面配置的输入整形器参数。"

msgid "Combining the resonance data from multiple test points."
msgstr "组合来自多个测试点的共振数据。"

msgid ""
"Combining the resonance data from 2 axis (e.g. on a bed slinger printer to "
"configure X-axis input_shaper from both X and Y axes resonances to cancel "
"vibrations of the *bed* in case the nozzle 'catches' a print when moving in X "
"axis direction)."
msgstr ""
"组合来自2个轴的共振数据(例如，在床吊杆打印机上配置X轴INPUT_SHAPER从X轴和Y轴共振，以消除*床*的振动，以防喷嘴在X轴方向上移动时‘捕捉’到印刷品)。"

#: docs/Measuring_Resonances.md:block 80 (header)
msgid "Testing custom axes"
msgstr "自定义测试轴"

#: docs/Measuring_Resonances.md:block 81 (paragraph)
msgid ""
"`TEST_RESONANCES` command supports custom axes. While this is not really "
"useful for input shaper calibration, it can be used to study printer "
"resonances in-depth and to check, for example, belt tension."
msgstr "`TEST_RESONANCES`命令支持自定义轴。虽然这对输入整形器校准并不真正有用，但它可用于深入研究打印机共振，并检查皮带张力等。"

#: docs/Measuring_Resonances.md:block 82 (paragraph)
msgid "To check the belt tension on CoreXY printers, execute"
msgstr "要检查CoreXY打印机上的皮带张力，请执行"

#: docs/Measuring_Resonances.md:block 84 (paragraph)
msgid "and use `graph_accelerometer.py` to process the generated files, e.g."
msgstr "并使用`graph_accelerometer.py`处理生成的文件，例如."

#: docs/Measuring_Resonances.md:block 86 (paragraph)
msgid "which will generate `/tmp/resonances.png` comparing the resonances."
msgstr "以生成`/tmp/resonances.png`，对比共振的数据。"

#: docs/Measuring_Resonances.md:block 87 (paragraph)
msgid ""
"For Delta printers with the default tower placement (tower A ~= 210 degrees, B"
" ~= 330 degrees, and C ~= 90 degrees), execute"
msgstr "对标准构型的三角洲打印机（A塔~210°，B塔~330°，C塔~90°），执行"

#: docs/Measuring_Resonances.md:block 89 (paragraph)
msgid "and then use the same command"
msgstr "然后使用同样的命令"

#: docs/Measuring_Resonances.md:block 91 (paragraph)
msgid "to generate `/tmp/resonances.png` comparing the resonances."
msgstr "以生成`/tmp/resonances.png`，对比共振的数据。"

#: docs/Measuring_Resonances.md:block 111 (paragraph)
msgid ""
"The raw data can also be obtained by running the command "
"`ACCELEROMETER_MEASURE` command twice during some normal printer activity - "
"first to start the measurements, and then to stop them and write the output "
"file. Refer to [G-Codes](G-Codes.md#adxl345) for more details."
msgstr ""
"在一些正常的打印机活动中，也可以通过运行命令 "
"`ACCELEROMETER_MEASURE`两次来获得原始数据——首先是开始测量，然后是停止测量并写入输出文件。有关更多详细信息，请参阅[G-Codes](G-Codes.md#adxl345)。"

#: docs/Measuring_Resonances.md:block 9 (table)
msgid "MPU-9250 pin"
msgstr "MPU-9250引脚"

#: docs/Measuring_Resonances.md:block 9 (table)
#, fuzzy
msgid "09"
msgstr "09"

#: docs/Measuring_Resonances.md:block 9 (table)
#, fuzzy
msgid "03"
msgstr "03"

#: docs/Measuring_Resonances.md:block 9 (table)
msgid "GPIO02 (SDA1)"
msgstr "GPIO02(SDA1)"

#: docs/Measuring_Resonances.md:block 9 (table)
msgid "05"
msgstr "05"

#: docs/Measuring_Resonances.md:block 9 (table)
msgid "GPIO03 (SCL1)"
msgstr "GPIO03 (SCL1)"

#: docs/Measuring_Resonances.md:block 20 (paragraph)
msgid ""
"Note that resonance measurements and shaper auto-calibration require "
"additional software dependencies not installed by default. First, run on your "
"Raspberry Pi the following commands:"
msgstr "请注意，共振测量和整形器自动校准需要默认情况下不安装的其他软件依赖项。首先，在你的树莓派上运行以下命令："

#: docs/Measuring_Resonances.md:block 22 (paragraph)
msgid ""
"Next, in order to install NumPy in the Klipper environment, run the command:"
msgstr "接下来，为了在Klipper环境中安装NumPy，运行命令："

#: docs/Measuring_Resonances.md:block 8 (paragraph)
msgid ""
"***Double-check your wiring before powering up to prevent damaging your "
"MCU/Raspberry Pi or the accelerometer.***"
msgstr "***通电前请仔细检查接线，以防止损坏您的MCU/树莓PI或加速度计。***"

#: docs/Measuring_Resonances.md:block 9 (header)
msgid "SPI Accelerometers"
msgstr "SPI加速度计"

#: docs/Measuring_Resonances.md:block 12 (header)
#, fuzzy
msgid "ADXL345"
msgstr "ADXL345"

#: docs/Measuring_Resonances.md:block 18 (header)
msgid "I2C Accelerometers"
msgstr "I2C加速度计"

#: docs/Measuring_Resonances.md:block 21 (header)
#, fuzzy
msgid "MPU-9250/MPU-9255/MPU-6515/MPU-6050/MPU-6500"
msgstr "MPU-9250/MPU-9255/MPU-6515/MPU-6050/MPU-6500"

#: docs/Measuring_Resonances.md:block 23 (paragraph)
msgid "Recommended connection scheme for I2C on the Raspberry Pi:"
msgstr "推荐的树莓派上的I2C连接方案："

#: docs/Measuring_Resonances.md:block 24 (table)
#, fuzzy
msgid "VCC"
msgstr "VCC"

#: docs/Measuring_Resonances.md:block 27 (table)
msgid "RP2040 pin"
msgstr "RP2040引脚"

#: docs/Measuring_Resonances.md:block 27 (table)
msgid "39"
msgstr "39"

#: docs/Measuring_Resonances.md:block 27 (table)
msgid "3v3"
msgstr "3v3"

#: docs/Measuring_Resonances.md:block 27 (table)
msgid "38"
msgstr "388"

#: docs/Measuring_Resonances.md:block 27 (table)
msgid "GP0 (I2C0 SDA)"
msgstr "GP0 (I2C0 SDA)"

#: docs/Measuring_Resonances.md:block 27 (table)
msgid "02"
msgstr "02"

#: docs/Measuring_Resonances.md:block 27 (table)
msgid "GP1 (I2C0 SCL)"
msgstr "GP1 (I2C0 SCL)"

#: docs/Measuring_Resonances.md:block 42 (header)
msgid "Configure ADXL345 With RPi"
msgstr "使用RPI配置ADXL345"

#: docs/Measuring_Resonances.md:block 44 (paragraph)
msgid "Add the following to the printer.cfg file:"
msgstr "在printer.cfg中添加以下内容："

#: docs/Measuring_Resonances.md:block 47 (header)
msgid "Configure MPU-6000/9000 series With RPi"
msgstr ""

#: docs/Measuring_Resonances.md:block 48 (paragraph)
msgid ""
"Make sure the Linux I2C driver is enabled and the baud rate is set to 400000 "
"(see [Enabling I2C](RPi_microcontroller.md#optional-enabling-i2c) section for "
"more details). Then, add the following to the printer.cfg:"
msgstr ""

#: docs/Measuring_Resonances.md:block 13 (header)
msgid "Direct to Raspberry Pi"
msgstr ""

#: docs/Measuring_Resonances.md:block 16 (table)
msgid "3.3V DC power"
msgstr ""

#: docs/Measuring_Resonances.md:block 19 (header)
msgid "Using Raspberry Pi Pico"
msgstr ""

#: docs/Measuring_Resonances.md:block 20 (paragraph)
msgid ""
"You may connect the ADXL345 to your Raspberry Pi Pico and then connect the "
"Pico to your Raspberry Pi via USB. This makes it easy to reuse the "
"accelerometer on other Klipper devices, as you can connect via USB instead of "
"GPIO. The Pico does not have much processing power, so make sure it is only "
"running the accelerometer and not performing any other duties."
msgstr ""

#: docs/Measuring_Resonances.md:block 21 (paragraph)
msgid ""
"In order to avoid damage to your RPi make sure to connect the ADXL345 to 3.3V "
"only. Depending on the board's layout, a level shifter may be present, which "
"makes 5V dangerous for your RPi."
msgstr ""

#: docs/Measuring_Resonances.md:block 22 (table)
msgid "Pico pin"
msgstr ""

#: docs/Measuring_Resonances.md:block 22 (table)
msgid "Pico pin name"
msgstr ""

#: docs/Measuring_Resonances.md:block 22 (table)
msgid "36"
msgstr ""

#: docs/Measuring_Resonances.md:block 22 (table)
msgid "2"
msgstr "2"

#: docs/Measuring_Resonances.md:block 22 (table)
msgid "GP1 (SPI0_CSn)"
msgstr ""

#: docs/Measuring_Resonances.md:block 22 (table)
msgid "1"
msgstr "1"

#: docs/Measuring_Resonances.md:block 22 (table)
msgid "GP0 (SPI0_RX)"
msgstr ""

#: docs/Measuring_Resonances.md:block 22 (table)
#, fuzzy
msgid "5"
msgstr "5"

#: docs/Measuring_Resonances.md:block 22 (table)
msgid "GP3 (SPI0_TX)"
msgstr ""

#: docs/Measuring_Resonances.md:block 22 (table)
msgid "4"
msgstr "4"

#: docs/Measuring_Resonances.md:block 22 (table)
msgid "GP2 (SPI0_SCK)"
msgstr ""

#: docs/Measuring_Resonances.md:block 23 (paragraph)
msgid "Wiring diagrams for some of the ADXL345 boards:"
msgstr ""

#: docs/Measuring_Resonances.md:block 24 (paragraph)
msgid "![ADXL345-Pico](img/adxl345-pico.png)"
msgstr ""

#: docs/Measuring_Resonances.md:block 54 (header)
msgid "Configure ADXL345 With Pi Pico"
msgstr ""

#: docs/Measuring_Resonances.md:block 55 (header)
msgid "Flash the Pico Firmware"
msgstr ""

#: docs/Measuring_Resonances.md:block 56 (paragraph)
msgid "On your Raspberry Pi, compile the firmware for the Pico."
msgstr ""

#: docs/Measuring_Resonances.md:block 58 (paragraph)
msgid "![Pico menuconfig](img/klipper_pico_menuconfig.png)"
msgstr ""

#: docs/Measuring_Resonances.md:block 59 (paragraph)
msgid ""
"Now, while holding down the `BOOTSEL` button on the Pico, connect the Pico to "
"the Raspberry Pi via USB. Compile and flash the firmware."
msgstr ""

#: docs/Measuring_Resonances.md:block 61 (paragraph)
msgid ""
"If that fails, you will be told which `FLASH_DEVICE` to use. In this example, "
"that's `make flash FLASH_DEVICE=2e8a:0003`. ![Determine flash "
"device](img/flash_rp2040_FLASH_DEVICE.png)"
msgstr ""

#: docs/Measuring_Resonances.md:block 62 (header)
msgid "Configure the Connection"
msgstr ""

#: docs/Measuring_Resonances.md:block 63 (paragraph)
msgid ""
"The Pico will now reboot with the new firmware and should show up as a serial "
"device. Find the pico serial device with `ls /dev/serial/by-id/*`. You can now"
" add an `adxl.cfg` file with the following settings:"
msgstr ""

#: docs/Measuring_Resonances.md:block 65 (paragraph)
msgid ""
"If setting up the ADXL345 configuration in a separate file, as shown above, "
"you'll also want to modify your `printer.cfg` file to include this:"
msgstr ""

#: docs/Measuring_Resonances.md:block 81 (paragraph)
msgid ""
"If you get an error like `Invalid adxl345 id (got xx vs e5)`, where `xx` is "
"some other ID, immediately try again. There's an issue with SPI "
"initialization. If you still get an error, it is indicative of the connection "
"problem with ADXL345, or the faulty sensor. Double-check the power, the wiring"
" (that it matches the schematics, no wire is broken or loose, etc.), and "
"soldering quality."
msgstr ""

#: docs/Measuring_Resonances.md:block 100 (paragraph)
msgid ""
"Note that alternatively you can run the input shaper auto-calibration from "
"Klipper [directly](#input-shaper-auto-calibration), which can be convenient, "
"for example, for the input shaper [re-calibration](#input-shaper-re-"
"calibration)."
msgstr ""

#: docs/Measuring_Resonances.md:block 152 (paragraph)
msgid ""
"**Warning!** It is not advisable to run the shaper auto-calibration very "
"frequently (e.g. before every print, or every day). In order to determine "
"resonance frequencies, auto-calibration creates intensive vibrations on each "
"of the axes. Generally, 3D printers are not designed to withstand a prolonged "
"exposure to vibrations near the resonance frequencies. Doing so may increase "
"wear of the printer components and reduce their lifespan. There is also an "
"increased risk of some parts unscrewing or becoming loose. Always check that "
"all parts of the printer (including the ones that may normally not move) are "
"securely fixed in place after each auto-tuning."
msgstr ""

#: docs/Measuring_Resonances.md:block 3 (paragraph)
msgid ""
"When sourcing accelerometers, be aware that there are a variety of different "
"PCB board designs and different clones of them. If it is going to be connected"
" to a 5V printer MCU ensure it has a voltage regulator and level shifters."
msgstr ""

#: docs/Measuring_Resonances.md:block 6 (header)
msgid "MCUs with Klipper I2C *fast-mode* Support"
msgstr ""

#: docs/Measuring_Resonances.md:block 7 (table)
msgid "MCU Family"
msgstr ""

#: docs/Measuring_Resonances.md:block 7 (table)
msgid "MCU(s) Tested"
msgstr "微控制器(S)测试"

#: docs/Measuring_Resonances.md:block 7 (table)
msgid "MCU(s) with Support"
msgstr "支持的微控制器(S)"

#: docs/Measuring_Resonances.md:block 7 (table)
msgid "Raspberry Pi"
msgstr "Raspberry Pi"

#: docs/Measuring_Resonances.md:block 7 (table)
#, fuzzy
msgid "3B+, Pico"
msgstr "3B+, Pico"

#: docs/Measuring_Resonances.md:block 7 (table)
#, fuzzy
msgid "3A, 3A+, 3B, 4"
msgstr "3A, 3A+, 3B, 4"

#: docs/Measuring_Resonances.md:block 7 (table)
msgid "AVR ATmega"
msgstr "AVR解锁"

#: docs/Measuring_Resonances.md:block 7 (table)
#, fuzzy
msgid "ATmega328p"
msgstr "ATmega328p"

#: docs/Measuring_Resonances.md:block 7 (table)
#, fuzzy
msgid ""
"ATmega32u4, ATmega128, ATmega168, ATmega328, ATmega644p, ATmega1280, "
"ATmega1284, ATmega2560"
msgstr ""
"ATmega32u4, ATmega128, ATmega168, ATmega328, ATmega644p, ATmega1280, "
"ATmega1284, ATmega2560"

#: docs/Measuring_Resonances.md:block 7 (table)
#, fuzzy
msgid "AVR AT90"
msgstr "AVR AT90"

#: docs/Measuring_Resonances.md:block 7 (table)
#, fuzzy
msgid "-"
msgstr "-"

#: docs/Measuring_Resonances.md:block 7 (table)
#, fuzzy
msgid "AT90usb646, AT90usb1286"
msgstr "AT90usb646, AT90usb1286"

#: docs/Measuring_Resonances.md:block 10 (paragraph)
msgid ""
"An ethernet cable with shielded twisted pairs (cat5e or better) is recommended"
" for signal integrity over a long distance. If you still experience signal "
"integrity issues (SPI/I2C errors):"
msgstr "建议使用带有屏蔽双绞线(CAT5e或更好的)的以太网电缆，以实现远距离信号的完整性。如果您仍然遇到信号完整性问题(SPI/I2C错误)："

#: docs/Measuring_Resonances.md:block 11 (unordered list)
msgid "Double check the wiring with a digital multimeter for:"
msgstr "用数字万用表仔细检查接线："

#: docs/Measuring_Resonances.md:block 11 (unordered list)
msgid "Correct connections when turned off (continuity)"
msgstr "关闭时正确连接(连续性)"

#: docs/Measuring_Resonances.md:block 11 (unordered list)
msgid "Correct power and ground voltages"
msgstr "正确的电源和接地电压"

#: docs/Measuring_Resonances.md:block 11 (unordered list)
msgid "I2C only:"
msgstr "仅限I2C："

#: docs/Measuring_Resonances.md:block 11 (unordered list)
msgid ""
"Check the SCL and SDA lines' resistances to 3.3V are in the range of 900 ohms "
"to 1.8K"
msgstr "检查SCL和SDA线路的3.3V电阻是否在900欧姆到1.8K的范围内"

#: docs/Measuring_Resonances.md:block 11 (unordered list)
msgid ""
"For full technical details consult [chapter 7 of the I2C-bus specification and"
" user manual UM10204](https://www.pololu.com/file/0J435/UM10204.pdf) for "
"*fast-mode*"
msgstr ""
"有关完整的技术细节，请参考[I2C-Bus规范的第7章和*FAST-"
"MODE*的用户手册UM10204](https://www.pololu.com/file/0J435/UM10204.pdf)"

#: docs/Measuring_Resonances.md:block 11 (unordered list)
msgid "Shorten the cable"
msgstr "缩短电缆"

#: docs/Measuring_Resonances.md:block 12 (paragraph)
msgid "Connect ethernet cable shielding only to the MCU board/Pi ground."
msgstr "仅将以太网电缆屏蔽连接到MCU板/PI接地。"

#: docs/Measuring_Resonances.md:block 15 (paragraph)
msgid "Suggested twisted pair order for three twisted pairs:"
msgstr "三条双绞线的建议双绞线顺序："

#: docs/Measuring_Resonances.md:block 17 (paragraph)
msgid "Note that unlike a cable shield, GND must be connected at both ends."
msgstr "请注意，与电缆屏蔽不同，GND必须在两端连接。"

#: docs/Measuring_Resonances.md:block 20 (paragraph)
msgid ""
"**Note: Many MCUs will work with an ADXL345 in SPI mode (e.g. Pi Pico), wiring"
" and configuration will vary according to your specific board and available "
"pins.**"
msgstr "**注：许多MCU将在SPI模式下使用ADXL345(例如PI Pico)，布线和配置将根据您的特定主板和可用的引脚而有所不同。**"

#: docs/Measuring_Resonances.md:block 32 (paragraph)
msgid "Suggested twisted pair order for three pairs (preferred):"
msgstr "建议的三对双绞线顺序(首选)："

#: docs/Measuring_Resonances.md:block 34 (paragraph)
msgid "or for two pairs:"
msgstr "或用于两对："

#: docs/Measuring_Resonances.md:block 36 (paragraph)
msgid ""
"Note that unlike a cable shield, any GND(s) should be connected at both ends."
msgstr "请注意，与电缆屏蔽不同，任何接地网(S)都应在两端连接。"

#: docs/Measuring_Resonances.md:block 38 (paragraph)
msgid ""
"These accelerometers have been tested to work over I2C on the RPi, RP2040 "
"(Pico) and AVR at 400kbit/s (*fast mode*). Some MPU accelerometer modules "
"include pull-ups, but some are too large at 10K and must be changed or "
"supplemented by smaller parallel resistors."
msgstr ""
"这些加速度计已在RPI、RP2040(Pico)和AVR上以400kbit/S(*快速模式*)的I2C模式工作。一些MPU加速度计模块包括上拉，但有些模块在10K时太大，必须更换或补充较小的并联电阻。"

#: docs/Measuring_Resonances.md:block 41 (paragraph)
msgid "The RPi has buit-in 1.8K pull-ups on both SCL and SDA."
msgstr "RPI在SCL和SDA上都有1.8k的Bit-in引体向上。"

#: docs/Measuring_Resonances.md:block 42 (paragraph)
msgid "![MPU-9250 connected to Pi](img/mpu9250-PI-fritzing.png)"
msgstr "！[MPU-9250接入PI](img/mpu9250-Pi-fritzing.png)"

#: docs/Measuring_Resonances.md:block 43 (paragraph)
msgid "Recommended connection scheme for I2C (i2c0a) on the RP2040:"
msgstr "RP2040上I2C(I2c0a)的建议连接方案："

#: docs/Measuring_Resonances.md:block 44 (table)
msgid "RP2040 pin name"
msgstr "RP2040引脚名称"

#: docs/Measuring_Resonances.md:block 45 (paragraph)
msgid "The Pico does not include any built-in I2C pull-up resistors."
msgstr "Pico不包括任何内置I2C上拉电阻。"

#: docs/Measuring_Resonances.md:block 46 (paragraph)
msgid "![MPU-9250 connected to Pico](img/mpu9250-PICO-fritzing.png)"
msgstr "！[MPU-9250接入Pico](img/mpu9250-Pico-fritzing.png)"

#: docs/Measuring_Resonances.md:block 47 (header)
msgid ""
"Recommended connection scheme for I2C(TWI) on the AVR ATmega328P Arduino Nano:"
msgstr "AVR ATmega328P Arduino Nano上I2C(TWI)的建议连接方案："

#: docs/Measuring_Resonances.md:block 48 (table)
msgid "Atmega328P TQFP32 pin"
msgstr "Atmega 328P TQFP 32针脚"

#: docs/Measuring_Resonances.md:block 48 (table)
msgid "Atmega328P pin name"
msgstr "Atmega 328P端号名称"

#: docs/Measuring_Resonances.md:block 48 (table)
msgid "Arduino Nano pin"
msgstr "Arduino纳米针"

#: docs/Measuring_Resonances.md:block 48 (table)
#, fuzzy
msgid "27"
msgstr "27"

#: docs/Measuring_Resonances.md:block 48 (table)
#, fuzzy
msgid "A4"
msgstr "A4"

#: docs/Measuring_Resonances.md:block 48 (table)
#, fuzzy
msgid "28"
msgstr "28"

#: docs/Measuring_Resonances.md:block 48 (table)
#, fuzzy
msgid "A5"
msgstr "A5"

#: docs/Measuring_Resonances.md:block 49 (paragraph)
msgid ""
"The Arduino Nano does not include any built-in pull-up resistors nor a 3.3V "
"power pin."
msgstr "Arduino Nano不包括任何内置上拉电阻，也不包括3.3V电源插针。"

#: docs/Measuring_Resonances.md:block 63 (paragraph)
msgid ""
"First, check and follow the instructions in the [RPi Microcontroller "
"document](RPi_microcontroller.md) to setup the \"linux mcu\" on the Raspberry "
"Pi. This will configure a second Klipper instance that runs on your Pi."
msgstr ""
"首先，检查并按照[RPI微控制器文档](rpi_微控制器.md)中的说明在Raspberry PI上设置“Linux "
"MCU”。这将配置在您的PI上运行的第二个Klipper实例。"

#: docs/Measuring_Resonances.md:block 87 (header)
msgid "Configure MPU-9520 Compatibles With Pico"
msgstr "配置与Pico兼容的MPU-9520"

#: docs/Measuring_Resonances.md:block 88 (paragraph)
msgid ""
"Pico I2C is set to 400000 on default. Simply add the following to the "
"printer.cfg:"
msgstr "默认情况下，Pico I2C设置为400000。只需将以下内容添加到printer.cfg："

#: docs/Measuring_Resonances.md:block 90 (header)
msgid "Configure MPU-9520 Compatibles with AVR"
msgstr ""

#: docs/Measuring_Resonances.md:block 91 (paragraph)
msgid ""
"AVR I2C will be set to 400000 by the mpu9250 option. Simply add the following "
"to the printer.cfg:"
msgstr ""

#: docs/Measuring_Resonances.md:block 101 (paragraph)
msgid ""
"**If you are using a MPU-9250 compatible accelerometer and it shows up as "
"`mpu-unknown`, use with caution! They are probably refurbished chips!**"
msgstr ""

#: docs/Measuring_Resonances.md:block 122 (paragraph)
msgid ""
"However, you can also connect two accelerometers simultaneously, though the "
"ADXL345 must be connected to different boards (say, to an RPi and printer MCU "
"board), or to two different physical SPI interfaces on the same board (rarely "
"available). Then they can be configured in the following manner:"
msgstr ""

#: docs/Measuring_Resonances.md:block 124 (paragraph)
msgid ""
"Two MPUs can share one I2C bus, but they **cannot** measure simultaneously as "
"the 400kbit/s I2C bus is not fast enough. One must have its AD0 pin pulled-"
"down to 0V (address 104) and the other its AD0 pin pulled-up to 3.3V (address "
"105):"
msgstr ""

#: docs/Measuring_Resonances.md:block 126 (paragraph)
msgid ""
"[Test with each MPU individually before connecting both to the bus for easy "
"debugging.]"
msgstr ""

#: docs/Measuring_Resonances.md:block 148 (paragraph)
msgid ""
"Keep in mind that the maximum acceleration without too much smoothing depends "
"on the `square_corner_velocity`. The general recommendation is not to change "
"it from its default value 5.0, and this is the value used by default by the "
"`calibrate_shaper.py` script. If you did change it though, you should inform "
"the script about it by passing `--square_corner_velocity=...` parameter, e.g."
msgstr ""

#: docs/Measuring_Resonances.md:block 150 (paragraph)
msgid ""
"so that it can calculate the maximum acceleration recommendations correctly. "
"Note that the `SHAPER_CALIBRATE` command already takes the configured "
"`square_corner_velocity` parameter into account, and there is no need to "
"specify it explicitly."
msgstr ""

#: docs/Measuring_Resonances.md:block 111 (paragraph)
msgid ""
"This will generate 2 CSV files (`/tmp/resonances_x_*.csv` and "
"`/tmp/resonances_y_*.csv`). These files can be processed with the stand-alone "
"script on a Raspberry Pi. This script is intended to be run with a single CSV "
"file for each axis measured, although it can be used with multiple CSV files "
"if you desire to average the results. Averaging results can be useful, for "
"example, if resonance tests were done at multiple test points. Delete the "
"extra CSV files if you do not desire to average them."
msgstr ""

#: docs/Measuring_Resonances.md:block 2 (paragraph)
msgid ""
"Klipper has built-in support for the ADXL345, MPU-9250, LIS2DW and LIS3DH "
"compatible accelerometers which can be used to measure resonance frequencies "
"of the printer for different axes, and auto-tune [input "
"shapers](Resonance_Compensation.md) to compensate for resonances. Note that "
"using accelerometers requires some soldering and crimping. The ADXL345 can be "
"connected to the SPI interface of a Raspberry Pi or MCU board (it needs to be "
"reasonably fast). The MPU family can be connected to the I2C interface of a "
"Raspberry Pi directly, or to an I2C interface of an MCU board that supports "
"400kbit/s *fast mode* in Klipper. The LIS2DW and LIS3DH can be connected to "
"either SPI or I2C with the same considerations as above."
msgstr ""

#: docs/Measuring_Resonances.md:block 4 (paragraph)
msgid ""
"For ADXL345s, make sure that the board supports SPI mode (a small number of "
"boards appear to be hard-configured for I2C by pulling SDO to GND)."
msgstr ""

#: docs/Measuring_Resonances.md:block 5 (paragraph)
msgid ""
"For MPU-9250/MPU-9255/MPU-6515/MPU-6050/MPU-6500s and LIS2DW/LIS3DH there are "
"also a variety of board designs and clones with different I2C pull-up "
"resistors which will need supplementing."
msgstr ""

#: docs/Measuring_Resonances.md:block 7 (table)
msgid "SAMD"
msgstr ""

#: docs/Measuring_Resonances.md:block 7 (table)
msgid "SAMC21G18"
msgstr ""

#: docs/Measuring_Resonances.md:block 7 (table)
msgid ""
"SAMC21G18, SAMD21G18, SAMD21E18, SAMD21J18, SAMD21E15, SAMD51G19, SAMD51J19, "
"SAMD51N19, SAMD51P20, SAME51J19, SAME51N19, SAME54P20"
msgstr ""

#: docs/Measuring_Resonances.md:block 61 (paragraph)
msgid ""
"Note that, depending on the performance of the CPU, it may take *a lot* of "
"time, up to 10-20 minutes. Be patient and wait for the completion of the "
"installation. On some occasions, if the board has too little RAM the "
"installation may fail and you will need to enable swap. Also note the forced "
"version, due to newer versions of NumPY having requirements that may not be "
"satisfied in some klipper python environments."
msgstr ""

#: docs/Measuring_Resonances.md:block 62 (paragraph)
msgid "Once installed please check that no errors show from the command:"
msgstr ""

#: docs/Measuring_Resonances.md:block 64 (paragraph)
msgid "The correct output should simply be a new line."
msgstr ""

#: docs/Measuring_Resonances.md:block 85 (header)
msgid "Configure LIS2DW series over SPI"
msgstr ""

#: docs/Measuring_Resonances.md:block 155 (header)
msgid "Unreliable measurements of resonance frequencies"
msgstr ""

#: docs/Measuring_Resonances.md:block 156 (paragraph)
msgid ""
"Sometimes the resonance measurements can produce bogus results, leading to the"
" incorrect suggestions for the input shapers. This can be caused by a variety "
"of reasons, including running fans on the toolhead, incorrect position or non-"
"rigid mounting of the accelerometer, or mechanical problems such as loose "
"belts or binding or bumpy axis. Keep in mind that all fans should be disabled "
"for resonance testing, especially the noisy ones, and that the accelerometer "
"should be rigidly mounted on the corresponding moving part (e.g. on the bed "
"itself for the bed slinger, or on the extruder of the printer itself and not "
"the carriage, and some people get better results by mounting the accelerometer"
" on the nozzle itself). As for mechanical problems, the user should inspect if"
" there is any fault that can be fixed with a moving axis (e.g. linear guide "
"rails cleaned up and lubricated and V-slot wheels tension adjusted correctly)."
" If none of that helps, a user may try the other shapers from the produced "
"list besides the one recommended by default."
msgstr ""

#, fuzzy
#~ msgid "~/klippy-env/bin/pip install -v numpy\n"
#~ msgstr "~/klippy-env/bin/pip install -v numpy\n"

#, fuzzy
#~ msgid "Recv: // adxl345 values (x, y, z): 470.719200, 941.438400, 9728.196800\n"
#~ msgstr "Recv: // adxl345 values (x, y, z): 470.719200, 941.438400, 9728.196800\n"

#~ msgid "TEST_RESONANCES AXIS=X\n"
#~ msgstr "TEST_RESONURS AXIS=X\n"

#~ msgid ""
#~ "[resonance_tester]\n"
#~ "accel_chip: adxl345\n"
#~ "accel_per_hz: 50  # default is 75\n"
#~ "probe_points: ...\n"
#~ msgstr ""
#~ "[共振测试仪]。\n"
#~ "加速芯片：adxl345。\n"
#~ "Accel_PER_HZ：50#默认为75。\n"
#~ "探测点：...\n"

#, fuzzy
#~ msgid "TEST_RESONANCES AXIS=Y\n"
#~ msgstr "TEST_RESONANCES AXIS=Y\n"

#, fuzzy
#~ msgid ""
#~ "~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png\n"
#~ "~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png\n"
#~ msgstr ""
#~ "~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png\n"
#~ "~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png\n"

#~ msgid ""
#~ "Fitted shaper 'zv' frequency = 34.4 Hz (vibrations = 4.0%, smoothing ~= 0.132)\n"
#~ "To avoid too much smoothing with 'zv', suggested max_accel <= 4500 mm/sec^2\n"
#~ "Fitted shaper 'mzv' frequency = 34.6 Hz (vibrations = 0.0%, smoothing ~= 0.170)\n"
#~ "To avoid too much smoothing with 'mzv', suggested max_accel <= 3500 mm/sec^2\n"
#~ "Fitted shaper 'ei' frequency = 41.4 Hz (vibrations = 0.0%, smoothing ~= 0.188)\n"
#~ "To avoid too much smoothing with 'ei', suggested max_accel <= 3200 mm/sec^2\n"
#~ "Fitted shaper '2hump_ei' frequency = 51.8 Hz (vibrations = 0.0%, smoothing ~= 0.201)\n"
#~ "To avoid too much smoothing with '2hump_ei', suggested max_accel <= 3000 mm/sec^2\n"
#~ "Fitted shaper '3hump_ei' frequency = 61.8 Hz (vibrations = 0.0%, smoothing ~= 0.215)\n"
#~ "To avoid too much smoothing with '3hump_ei', suggested max_accel <= 2800 mm/sec^2\n"
#~ "Recommended shaper is mzv @ 34.6 Hz\n"
#~ msgstr ""
#~ "贴合成形器‘zv’频率=34.4HZ(振动=4.0%，平滑~=0.132)。\n"
#~ "为避免使用‘zv’进行过多平滑处理，建议使用max_Accel<=4500 mm/秒^2。\n"
#~ "贴合成形器‘mzv’频率=34.6hz(振动=0.0%，平滑~=0.170)。\n"
#~ "为避免使用‘mzv’进行过多平滑处理，建议使用max_Accel<=3500 mm/秒^2。\n"
#~ "贴合成形器‘EI’频率=41.4HZ(振动=0.0%，平滑~=0.188)。\n"
#~ "为避免使用‘ei’进行过多平滑处理，建议使用max_Accel<=3200 mm/秒^2。\n"
#~ "贴合成形器‘2hump_ei’频率=51.8HZ(振动=0.0%，平滑~=0.201)。\n"
#~ "为避免使用‘2hump_ei’时过于平滑，建议使用max_Accel<=3000 mm/秒^2。\n"
#~ "成型器‘3hump_ei’频率=61.8HZ(振动=0.0%，平滑~=0.215)。\n"
#~ "为避免使用‘3hump_ei’时过于平滑，建议使用max_Accel<=2800 mm/秒^2。\n"
#~ "推荐的整形器为mzv@34.6 hz\n"

#~ msgid ""
#~ "[input_shaper]\n"
#~ "shaper_freq_x: ...\n"
#~ "shaper_type_x: ...\n"
#~ "shaper_freq_y: 34.6\n"
#~ "shaper_type_y: mzv\n"
#~ "\n"
#~ "[printer]\n"
#~ "max_accel: 3000  # should not exceed the estimated max_accel for X and Y axes\n"
#~ msgstr ""
#~ "[输入整形器]。\n"
#~ "造型频率x：...。\n"
#~ "Shaper_type_x：...。\n"
#~ "Shaper_freq_y：34.6。\n"
#~ "Shaper_type_y：mzv。\n"
#~ "\n"
#~ "[打印机]。\n"
#~ "Max_Accel：3000#不应超过X和Y轴的估计max_Accel\n"

#~ msgid ""
#~ "[adxl345 hotend]\n"
#~ "# Assuming `hotend` chip is connected to an RPi\n"
#~ "cs_pin: rpi:None\n"
#~ "\n"
#~ "[adxl345 bed]\n"
#~ "# Assuming `bed` chip is connected to a printer MCU board\n"
#~ "cs_pin: ...  # Printer board SPI chip select (CS) pin\n"
#~ "\n"
#~ "[resonance_tester]\n"
#~ "# Assuming the typical setup of the bed slinger printer\n"
#~ "accel_chip_x: adxl345 hotend\n"
#~ "accel_chip_y: adxl345 bed\n"
#~ "probe_points: ...\n"
#~ msgstr ""
#~ "[adx1345 HOTEND]。\n"
#~ "#假设`hotend`芯片连接到RPI。\n"
#~ "CS_PIN：RPI：无。\n"
#~ "\n"
#~ "[adx1345张床]。\n"
#~ "#假设`bed`芯片连接到打印机MCU板。\n"
#~ "CS_PIN：...#打印板SPI芯片选择(CS)针脚。\n"
#~ "\n"
#~ "[共振测试仪]。\n"
#~ "#假设床吊杆打印机的典型设置。\n"
#~ "加速芯片_x：adx1345主机。\n"
#~ "Accel芯片y：adx1345床。\n"
#~ "探测点：...\n"

#~ msgid ""
#~ "Fitted shaper 'zv' frequency = 57.8 Hz (vibrations = 20.3%, smoothing ~= 0.053)\n"
#~ "To avoid too much smoothing with 'zv', suggested max_accel <= 13000 mm/sec^2\n"
#~ "Fitted shaper 'mzv' frequency = 34.8 Hz (vibrations = 3.6%, smoothing ~= 0.168)\n"
#~ "To avoid too much smoothing with 'mzv', suggested max_accel <= 3600 mm/sec^2\n"
#~ "Fitted shaper 'ei' frequency = 48.8 Hz (vibrations = 4.9%, smoothing ~= 0.135)\n"
#~ "To avoid too much smoothing with 'ei', suggested max_accel <= 4400 mm/sec^2\n"
#~ "Fitted shaper '2hump_ei' frequency = 45.2 Hz (vibrations = 0.1%, smoothing ~= 0.264)\n"
#~ "To avoid too much smoothing with '2hump_ei', suggested max_accel <= 2200 mm/sec^2\n"
#~ "Fitted shaper '3hump_ei' frequency = 48.0 Hz (vibrations = 0.0%, smoothing ~= 0.356)\n"
#~ "To avoid too much smoothing with '3hump_ei', suggested max_accel <= 1500 mm/sec^2\n"
#~ "Recommended shaper is 2hump_ei @ 45.2 Hz\n"
#~ msgstr ""
#~ "Fitted shaper 'zv' frequency = 57.8 Hz (vibrations = 20.3%, smoothing ~= 0.053)\n"
#~ "To avoid too much smoothing with 'zv', suggested max_accel <= 13000 mm/sec^2\n"
#~ "Fitted shaper 'mzv' frequency = 34.8 Hz (vibrations = 3.6%, smoothing ~= 0.168)\n"
#~ "To avoid too much smoothing with 'mzv', suggested max_accel <= 3600 mm/sec^2\n"
#~ "Fitted shaper 'ei' frequency = 48.8 Hz (vibrations = 4.9%, smoothing ~= 0.135)\n"
#~ "To avoid too much smoothing with 'ei', suggested max_accel <= 4400 mm/sec^2\n"
#~ "Fitted shaper '2hump_ei' frequency = 45.2 Hz (vibrations = 0.1%, smoothing ~= 0.264)\n"
#~ "To avoid too much smoothing with '2hump_ei', suggested max_accel <= 2200 mm/sec^2\n"
#~ "Fitted shaper '3hump_ei' frequency = 48.0 Hz (vibrations = 0.0%, smoothing ~= 0.356)\n"
#~ "To avoid too much smoothing with '3hump_ei', suggested max_accel <= 1500 mm/sec^2\n"
#~ "Recommended shaper is 2hump_ei @ 45.2 Hz\n"

#~ msgid ""
#~ "~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o "
#~ "/tmp/shaper_calibrate_x.png --max_smoothing=0.2\n"
#~ msgstr ""
#~ "~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o "
#~ "/tmp/shaper_calibrate_x.png --max_smoothing=0.2\n"

#~ msgid ""
#~ "Fitted shaper 'zv' frequency = 55.4 Hz (vibrations = 19.7%, smoothing ~= 0.057)\n"
#~ "To avoid too much smoothing with 'zv', suggested max_accel <= 12000 mm/sec^2\n"
#~ "Fitted shaper 'mzv' frequency = 34.6 Hz (vibrations = 3.6%, smoothing ~= 0.170)\n"
#~ "To avoid too much smoothing with 'mzv', suggested max_accel <= 3500 mm/sec^2\n"
#~ "Fitted shaper 'ei' frequency = 48.2 Hz (vibrations = 4.8%, smoothing ~= 0.139)\n"
#~ "To avoid too much smoothing with 'ei', suggested max_accel <= 4300 mm/sec^2\n"
#~ "Fitted shaper '2hump_ei' frequency = 52.0 Hz (vibrations = 2.7%, smoothing ~= 0.200)\n"
#~ "To avoid too much smoothing with '2hump_ei', suggested max_accel <= 3000 mm/sec^2\n"
#~ "Fitted shaper '3hump_ei' frequency = 72.6 Hz (vibrations = 1.4%, smoothing ~= 0.155)\n"
#~ "To avoid too much smoothing with '3hump_ei', suggested max_accel <= 3900 mm/sec^2\n"
#~ "Recommended shaper is 3hump_ei @ 72.6 Hz\n"
#~ msgstr ""
#~ "Fitted shaper 'zv' frequency = 55.4 Hz (vibrations = 19.7%, smoothing ~= 0.057)\n"
#~ "To avoid too much smoothing with 'zv', suggested max_accel <= 12000 mm/sec^2\n"
#~ "Fitted shaper 'mzv' frequency = 34.6 Hz (vibrations = 3.6%, smoothing ~= 0.170)\n"
#~ "To avoid too much smoothing with 'mzv', suggested max_accel <= 3500 mm/sec^2\n"
#~ "Fitted shaper 'ei' frequency = 48.2 Hz (vibrations = 4.8%, smoothing ~= 0.139)\n"
#~ "To avoid too much smoothing with 'ei', suggested max_accel <= 4300 mm/sec^2\n"
#~ "Fitted shaper '2hump_ei' frequency = 52.0 Hz (vibrations = 2.7%, smoothing ~= 0.200)\n"
#~ "To avoid too much smoothing with '2hump_ei', suggested max_accel <= 3000 mm/sec^2\n"
#~ "Fitted shaper '3hump_ei' frequency = 72.6 Hz (vibrations = 1.4%, smoothing ~= 0.155)\n"
#~ "To avoid too much smoothing with '3hump_ei', suggested max_accel <= 3900 mm/sec^2\n"
#~ "Recommended shaper is 3hump_ei @ 72.6 Hz\n"

#~ msgid ""
#~ "[resonance_tester]\n"
#~ "accel_chip: ...\n"
#~ "probe_points: ...\n"
#~ "max_smoothing: 0.25  # an example\n"
#~ msgstr ""
#~ "[resonance_tester]\n"
#~ "accel_chip: ...\n"
#~ "probe_points: ...\n"
#~ "max_smoothing: 0.25  # an example\n"

#~ msgid "SHAPER_CALIBRATE\n"
#~ msgstr "SHAPER_CALIBRATE\n"

#~ msgid ""
#~ "Calculating the best input shaper parameters for y axis\n"
#~ "Fitted shaper 'zv' frequency = 39.0 Hz (vibrations = 13.2%, smoothing ~= 0.105)\n"
#~ "To avoid too much smoothing with 'zv', suggested max_accel <= 5900 mm/sec^2\n"
#~ "Fitted shaper 'mzv' frequency = 36.8 Hz (vibrations = 1.7%, smoothing ~= 0.150)\n"
#~ "To avoid too much smoothing with 'mzv', suggested max_accel <= 4000 mm/sec^2\n"
#~ "Fitted shaper 'ei' frequency = 36.6 Hz (vibrations = 2.2%, smoothing ~= 0.240)\n"
#~ "To avoid too much smoothing with 'ei', suggested max_accel <= 2500 mm/sec^2\n"
#~ "Fitted shaper '2hump_ei' frequency = 48.0 Hz (vibrations = 0.0%, smoothing ~= 0.234)\n"
#~ "To avoid too much smoothing with '2hump_ei', suggested max_accel <= 2500 mm/sec^2\n"
#~ "Fitted shaper '3hump_ei' frequency = 59.0 Hz (vibrations = 0.0%, smoothing ~= 0.235)\n"
#~ "To avoid too much smoothing with '3hump_ei', suggested max_accel <= 2500 mm/sec^2\n"
#~ "Recommended shaper_type_y = mzv, shaper_freq_y = 36.8 Hz\n"
#~ msgstr ""
#~ "Calculating the best input shaper parameters for y axis\n"
#~ "Fitted shaper 'zv' frequency = 39.0 Hz (vibrations = 13.2%, smoothing ~= 0.105)\n"
#~ "To avoid too much smoothing with 'zv', suggested max_accel <= 5900 mm/sec^2\n"
#~ "Fitted shaper 'mzv' frequency = 36.8 Hz (vibrations = 1.7%, smoothing ~= 0.150)\n"
#~ "To avoid too much smoothing with 'mzv', suggested max_accel <= 4000 mm/sec^2\n"
#~ "Fitted shaper 'ei' frequency = 36.6 Hz (vibrations = 2.2%, smoothing ~= 0.240)\n"
#~ "To avoid too much smoothing with 'ei', suggested max_accel <= 2500 mm/sec^2\n"
#~ "Fitted shaper '2hump_ei' frequency = 48.0 Hz (vibrations = 0.0%, smoothing ~= 0.234)\n"
#~ "To avoid too much smoothing with '2hump_ei', suggested max_accel <= 2500 mm/sec^2\n"
#~ "Fitted shaper '3hump_ei' frequency = 59.0 Hz (vibrations = 0.0%, smoothing ~= 0.235)\n"
#~ "To avoid too much smoothing with '3hump_ei', suggested max_accel <= 2500 mm/sec^2\n"
#~ "Recommended shaper_type_y = mzv, shaper_freq_y = 36.8 Hz\n"

#~ msgid "SHAPER_CALIBRATE AXIS=Y\n"
#~ msgstr "SHAPER_CALIBRATE AXIS=Y\n"

#~ msgid "SHAPER_CALIBRATE AXIS=X\n"
#~ msgstr "SHAPER_CALIBRATE AXIS=X\n"

#~ msgid ""
#~ "SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0\n"
#~ "TEST_RESONANCES AXIS=X OUTPUT=raw_data\n"
#~ msgstr ""
#~ "SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0\n"
#~ "TEST_RESONANCES AXIS=X OUTPUT=raw_data\n"

#~ msgid ""
#~ "~/klipper/scripts/graph_accelerometer.py /tmp/raw_data_x_*.csv -o "
#~ "/tmp/resonances_x.png -c -a z\n"
#~ msgstr ""
#~ "~/klipper/scripts/graph_accelerometer.py /tmp/raw_data_x_*.csv -o "
#~ "/tmp/resonances_x.png -c -a z\n"

#, fuzzy
#~ msgid ""
#~ "TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data\n"
#~ "TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data\n"
#~ msgstr ""
#~ "TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data\n"
#~ "TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data\n"

#, fuzzy
#~ msgid ""
#~ "~/klipper/scripts/graph_accelerometer.py -c /tmp/raw_data_axis*.csv -o "
#~ "/tmp/resonances.png\n"
#~ msgstr ""
#~ "~/klipper/scripts/graph_accelerometer.py -c /tmp/raw_data_axis*.csv -o "
#~ "/tmp/resonances.png\n"

#~ msgid ""
#~ "TEST_RESONANCES AXIS=0,1 OUTPUT=raw_data\n"
#~ "TEST_RESONANCES AXIS=-0.866025404,-0.5 OUTPUT=raw_data\n"
#~ "TEST_RESONANCES AXIS=0.866025404,-0.5 OUTPUT=raw_data\n"
#~ msgstr ""
#~ "TEST_RESONANCES AXIS=0,1 OUTPUT=raw_data\n"
#~ "TEST_RESONANCES AXIS=-0.866025404,-0.5 OUTPUT=raw_data\n"
#~ "TEST_RESONANCES AXIS=0.866025404,-0.5 OUTPUT=raw_data\n"

#~ msgid ""
#~ "[mcu rpi]\n"
#~ "serial: /tmp/klipper_host_mcu\n"
#~ "\n"
#~ "[adxl345]\n"
#~ "cs_pin: rpi:None\n"
#~ "\n"
#~ "[resonance_tester]\n"
#~ "accel_chip: adxl345\n"
#~ "probe_points:\n"
#~ "    100, 100, 20  # an example\n"
#~ msgstr ""
#~ "[MCU RPI]。\n"
#~ "序列：/tmp/Klipper_host_mcu。\n"
#~ "\n"
#~ "[adx1345]。\n"
#~ "CS_PIN：RPI：无。\n"
#~ "\n"
#~ "[共振测试仪]。\n"
#~ "加速芯片：adxl345。\n"
#~ "探测点(_P)：\n"
#~ "100、100、20#一个例子\n"

#~ msgid ""
#~ "Note that, depending on the performance of the CPU, it may take *a lot* of "
#~ "time, up to 10-20 minutes. Be patient and wait for the completion of the "
#~ "installation. On some occasions, if the board has too little RAM the "
#~ "installation may fail and you will need to enable swap."
#~ msgstr ""
#~ "请注意，根据CPU性能的不同，这可能需要*很长*时间，最长可达10-20分钟。请耐心等待安装完成。在某些情况下，如果主板的RAM太少，安装可能会失败，您需要启用交换。"

#~ msgid ""
#~ "[mcu rpi]\n"
#~ "serial: /tmp/klipper_host_mcu\n"
#~ "\n"
#~ "[mpu9250]\n"
#~ "i2c_mcu: rpi\n"
#~ "i2c_bus: i2c.1\n"
#~ "\n"
#~ "[resonance_tester]\n"
#~ "accel_chip: mpu9250\n"
#~ "probe_points:\n"
#~ "    100, 100, 20  # an example\n"
#~ msgstr ""
#~ "[MCU RPI]。\n"
#~ "序列：/tmp/Klipper_host_mcu。\n"
#~ "\n"
#~ "[mpu9250]。\n"
#~ "I2C_MCU：RPI。\n"
#~ "I2C_BUS：I2c.1。\n"
#~ "\n"
#~ "[共振测试仪]。\n"
#~ "加速芯片：mpu9250。\n"
#~ "探测点(_P)：\n"
#~ "100、100、20#一个例子\n"

#~ msgid ""
#~ "GND+MISO\n"
#~ "3.3V+MOSI\n"
#~ "SCLK+CS\n"
#~ msgstr ""
#~ "GND+MISO\n"
#~ "3.3V+MOSI\n"
#~ "SCLK +CS\n"

#, fuzzy
#~ msgid ""
#~ "3.3V+SDA\n"
#~ "GND+SCL\n"
#~ msgstr ""
#~ "3.3V+SDA\n"
#~ "GND+SCL\n"

#~ msgid ""
#~ "cd ~/klipper\n"
#~ "make clean\n"
#~ "make menuconfig\n"
#~ msgstr ""

#~ msgid "make flash FLASH_DEVICE=first\n"
#~ msgstr ""

#~ msgid ""
#~ "[mcu adxl]\n"
#~ "# Change <mySerial> to whatever you found above. For example,\n"
#~ "# usb-Klipper_rp2040_E661640843545B2E-if00\n"
#~ "serial: /dev/serial/by-id/usb-Klipper_rp2040_<mySerial>\n"
#~ "\n"
#~ "[adxl345]\n"
#~ "cs_pin: adxl:gpio1\n"
#~ "spi_bus: spi0a\n"
#~ "axes_map: x,z,y\n"
#~ "\n"
#~ "[resonance_tester]\n"
#~ "accel_chip: adxl345\n"
#~ "probe_points:\n"
#~ "    # Somewhere slightly above the middle of your print bed\n"
#~ "    147,154, 20\n"
#~ "\n"
#~ "[output_pin power_mode] # Improve power stability\n"
#~ "pin: adxl:gpio23\n"
#~ msgstr ""

#~ msgid ""
#~ "[include adxl.cfg] # Comment this out when you disconnect the accelerometer\n"
#~ msgstr ""

#~ msgid ""
#~ "Klipper has built-in support for the ADXL345, MPU-9250 and LIS2DW compatible "
#~ "accelerometers which can be used to measure resonance frequencies of the "
#~ "printer for different axes, and auto-tune [input "
#~ "shapers](Resonance_Compensation.md) to compensate for resonances. Note that "
#~ "using accelerometers requires some soldering and crimping. The ADXL345/LIS2DW "
#~ "can be connected to the SPI interface of a Raspberry Pi or MCU board (it needs"
#~ " to be reasonably fast). The MPU family can be connected to the I2C interface "
#~ "of a Raspberry Pi directly, or to an I2C interface of an MCU board that "
#~ "supports 400kbit/s *fast mode* in Klipper."
#~ msgstr ""

#~ msgid ""
#~ "For ADXL345s/LIS2DWs, make sure that the board supports SPI mode (a small "
#~ "number of boards appear to be hard-configured for I2C by pulling SDO to GND)."
#~ msgstr ""

#~ msgid ""
#~ "For MPU-9250/MPU-9255/MPU-6515/MPU-6050/MPU-6500s there are also a variety of "
#~ "board designs and clones with different I2C pull-up resistors which will need "
#~ "supplementing."
#~ msgstr ""

#, fuzzy
#~ msgid ""
#~ "3.3V+GND\n"
#~ "SDA+GND\n"
#~ "SCL+GND\n"
#~ msgstr ""
#~ "3.3V+GND\n"
#~ "SDA+GND\n"
#~ "SCL+GND\n"

#~ msgid "Configure LIS2DW series"
#~ msgstr "配置LIS2DW系列"

#~ msgid ""
#~ "[mcu lis]\n"
#~ "# Change <mySerial> to whatever you found above. For example,\n"
#~ "# usb-Klipper_rp2040_E661640843545B2E-if00\n"
#~ "serial: /dev/serial/by-id/usb-Klipper_rp2040_<mySerial>\n"
#~ "\n"
#~ "[lis2dw]\n"
#~ "cs_pin: lis:gpio1\n"
#~ "spi_bus: spi0a\n"
#~ "axes_map: x,z,y\n"
#~ "\n"
#~ "[resonance_tester]\n"
#~ "accel_chip: lis2dw\n"
#~ "probe_points:\n"
#~ "    # Somewhere slightly above the middle of your print bed\n"
#~ "    147,154, 20\n"
#~ msgstr ""
#~ "[MCU列表]。\n"
#~ "#将<mySerial>更改为您在上面找到的任何内容。例如,。\n"
#~ "#usb-klipper_rp2040_E661640843545B2E-if00。\n"
#~ "序列号：/dev/serial/by-id/usb-Klipper_rp2040_<mySerial>。\n"
#~ "\n"
#~ "[lis2dw]。\n"
#~ "Cs_pin：lis：gpio1。\n"
#~ "SPI_BUS：SP0A。\n"
#~ "AXES_MAP：x、z、y。\n"
#~ "\n"
#~ "[共振测试仪]。\n"
#~ "加速芯片：lis2dw。\n"
#~ "探测点(_P)：\n"
#~ "#在你的打印床中间稍高一点的地方。\n"
#~ "147,154，20\n"

#~ msgid ""
#~ "[mcu pico]\n"
#~ "serial: /dev/serial/by-id/<your Pico's serial ID>\n"
#~ "\n"
#~ "[mpu9250]\n"
#~ "i2c_mcu: pico\n"
#~ "i2c_bus: i2c0a\n"
#~ "\n"
#~ "[resonance_tester]\n"
#~ "accel_chip: mpu9250\n"
#~ "probe_points:\n"
#~ "    100, 100, 20  # an example\n"
#~ "\n"
#~ "[static_digital_output pico_3V3pwm] # Improve power stability\n"
#~ "pins: pico:gpio23\n"
#~ msgstr ""

#~ msgid ""
#~ "[mcu nano]\n"
#~ "serial: /dev/serial/by-id/<your nano's serial ID>\n"
#~ "\n"
#~ "[mpu9250]\n"
#~ "i2c_mcu: nano\n"
#~ "\n"
#~ "[resonance_tester]\n"
#~ "accel_chip: mpu9250\n"
#~ "probe_points:\n"
#~ "    100, 100, 20  # an example\n"
#~ msgstr ""

#~ msgid ""
#~ "[mpu9250 hotend]\n"
#~ "i2c_mcu: rpi\n"
#~ "i2c_bus: i2c.1\n"
#~ "i2c_address: 104 # This MPU has pin AD0 pulled low\n"
#~ "\n"
#~ "[mpu9250 bed]\n"
#~ "i2c_mcu: rpi\n"
#~ "i2c_bus: i2c.1\n"
#~ "i2c_address: 105 # This MPU has pin AD0 pulled high\n"
#~ "\n"
#~ "[resonance_tester]\n"
#~ "# Assuming the typical setup of the bed slinger printer\n"
#~ "accel_chip_x: mpu9250 hotend\n"
#~ "accel_chip_y: mpu9250 bed\n"
#~ "probe_points: ...\n"
#~ msgstr ""

#~ msgid ""
#~ "sudo apt update\n"
#~ "sudo apt install python3-numpy python3-matplotlib libatlas-base-dev libopenblas-dev\n"
#~ msgstr ""

#~ msgid ""
#~ "~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o "
#~ "/tmp/shaper_calibrate_x.png --square_corner_velocity=10.0\n"
#~ msgstr ""

#~ msgid ""
#~ "This will generate 2 CSV files (`/tmp/resonances_x_*.csv` and "
#~ "`/tmp/resonances_y_*.csv`). These files can be processed with the stand-alone "
#~ "script on a Raspberry Pi. To do that, run the following commands:"
#~ msgstr ""
#~ "这将生成2个CSV文件（`/tmp/reonances_x_*.CSV`和`/tmp/Reonances_y_*.CSV'）。这些文件可以在树莓派上使用独立脚本进行处理。要执行此操作，请运行以下命令："

#, fuzzy
#~ msgid ""
#~ "sudo apt update\n"
#~ "sudo apt install python3-numpy python3-matplotlib libatlas-base-dev\n"
#~ msgstr ""
#~ "sudo apt update\n"
#~ "sudo apt install python3-numpy python3-matplotlib libatlas-base-dev\n"

#~ msgid ""
#~ "Klipper has built-in support for ADXL345 accelerometer, which can be used to "
#~ "measure resonance frequencies of the printer for different axes, and auto-tune"
#~ " [input shapers](Resonance_Compensation.md) to compensate for resonances. Note"
#~ " that using ADXL345 requires some soldering and crimping. ADXL345 can be "
#~ "connected to a Raspberry Pi directly, or to an SPI interface of an MCU board "
#~ "(it needs to be reasonably fast)."
#~ msgstr ""
#~ "Klipper内建有ADXL345加速度传感器驱动，可用以测量打印机不同运动轴发生共振的频率，从而自动进行 "
#~ "[输入整形](Resonance_Compensation.md) "
#~ "以实现共振补偿。注意使用ADXL345需要进行焊接和压线。ADXL345可以直接连接到树莓派，也可以连接到MCU的SPI总线（注意MCU有一定的性能需求）。"

#~ msgid ""
#~ "Afterwards, check and follow the instructions in the [RPi Microcontroller "
#~ "document](RPi_microcontroller.md) to setup the \"linux mcu\" on the Raspberry "
#~ "Pi."
#~ msgstr "之后，参考[树莓派作为微控制器文档](RPi_microcontroller.md)的指引完成“LINUX微处理器”的设置。"

#~ msgid ""
#~ "However, you can also connect two accelerometers simultaneously, though they "
#~ "must be connected to different boards (say, to an RPi and printer MCU board), "
#~ "or to two different physical SPI interfaces on the same board (rarely "
#~ "available). Then they can be configured in the following manner:"
#~ msgstr ""
#~ "也可以同时连接两个加速度计，尽管它们必须连接到不同的主板（例如，连接到树莓派和MCU），或者连接到同一板上两个不同的物理SPI接口（大多数情况下不可用）。然后可以按以下方式配置它们："

#~ msgid ""
#~ "When sourcing ADXL345, be aware that there is a variety of different PCB board"
#~ " designs and different clones of them. Make sure that the board supports SPI "
#~ "mode (small number of boards appear to be hard-configured for I2C by pulling "
#~ "SDO to GND), and, if it is going to be connected to a 5V printer MCU, that it "
#~ "has a voltage regulator and a level shifter."
#~ msgstr ""
#~ "在采购ADXL345时，请注意有各种不同的PCB板设计和它们的不同克隆。确保板支持SPI模式（通过将SDO拉到GND，少数板似乎是为I2C硬配置的），并且，如果要连接到5V打印机MCU，它有一个电压调节器和一个电平转换器。"

#~ msgid "Connect ethernet cable shielding to the controller board/RPI ground."
#~ msgstr ""

#~ msgid "Suggested twisted pair order:"
#~ msgstr ""

#~ msgid ""
#~ "Alternatives to the ADXL345 are MPU-9250/MPU-9255/MPU-6515/MPU-6050/MPU-6500. "
#~ "These accelerometers have been tested to work over I2C on the RPi or "
#~ "RP2040(pico) at 400kbaud."
#~ msgstr ""

#~ msgid "![MPU-9250 connected to RPI](img/mpu9250-PI-fritzing.png)"
#~ msgstr ""

#~ msgid "Recommended connection scheme for I2C(i2c0a) on the RP2040:"
#~ msgstr ""

#~ msgid "![MPU-9250 connected to PICO](img/mpu9250-PICO-fritzing.png)"
#~ msgstr ""

#~ msgid "Configure MPU-6000/9000 series With PICO"
#~ msgstr ""

#~ msgid ""
#~ "PICO I2C is set to 400000 on default. Simply add the following to the "
#~ "printer.cfg:"
#~ msgstr ""

#~ msgid ""
#~ "**If you are using MPU-6000/9000 series accelerometer and it show up as `mpu-"
#~ "unknown`, use with caution! They are probably refurbished chips!**"
#~ msgstr ""

#~ msgid ""
#~ "An ethernet cable with shielded twisted pairs (cat5e or better) is recommended"
#~ " for signal integrity over a long distance. If you still experience signal "
#~ "integrity issues (SPI/I2C errors), shorten the cable."
#~ msgstr ""

#~ msgid ""
#~ "**Note: Many MCUs will work with an ADXL345 in SPI mode(eg Pi Pico), wiring "
#~ "and configuration will vary according to your specific board and available "
#~ "pins.**"
#~ msgstr ""

#~ msgid ""
#~ "[mcu pico]\n"
#~ "serial: /dev/serial/by-id/<your PICO's serial ID>\n"
#~ "\n"
#~ "[mpu9250]\n"
#~ "i2c_mcu: pico\n"
#~ "i2c_bus: i2c0a\n"
#~ "\n"
#~ "[resonance_tester]\n"
#~ "accel_chip: mpu9250\n"
#~ "probe_points:\n"
#~ "    100, 100, 20  # an example\n"
#~ "\n"
#~ "[static_digital_output pico_3V3pwm] # Improve power stability\n"
#~ "pin: pico:gpio23\n"
#~ msgstr ""

#~ msgid ""
#~ "If you get an error like `Invalid adxl345 id (got xx vs e5)`, where `xx` is "
#~ "some other ID, it is indicative of the connection problem with ADXL345, or the"
#~ " faulty sensor. Double-check the power, the wiring (that it matches the "
#~ "schematics, no wire is broken or loose, etc.), and soldering quality."
#~ msgstr ""
#~ "如果输出类似 `Invalid adxl345 id (got xx vs "
#~ "e5)`，其中'xx'为e5以外ID，这表示出现连接问题（如，连接错误、线缆电阻过大、干扰等），或传感器错误（如，残次传感器 或 "
#~ "错误的传感器）。请在此检查电源，接线（再三确定接线正确，没有破损、松动的电线）或焊接问题。"

#~ msgid ""
#~ "Note that alternatively you can run the input shaper autocalibration from "
#~ "Klipper [directly](#input-shaper-auto-calibration), which can be convenient, "
#~ "for example, for the input shaper [re-calibration](#input-shaper-re-"
#~ "calibration)."
#~ msgstr ""
#~ "请注意，可以[直接](#input-shaper-auto-"
#~ "calibration)在Klipper中运行输入整形器自动校准，这可能更方便，例如，对于输入整形器[重新校准](#input-shaper-re-"
#~ "calibration)。"

#~ msgid ""
#~ "**Warning!** It is not advisable to run the shaper autocalibration very "
#~ "frequently (e.g. before every print, or every day). In order to determine "
#~ "resonance frequencies, autocalibration creates intensive vibrations on each of"
#~ " the axes. Generally, 3D printers are not designed to withstand a prolonged "
#~ "exposure to vibrations near the resonance frequencies. Doing so may increase "
#~ "wear of the printer components and reduce their lifespan. There is also an "
#~ "increased risk of some parts unscrewing or becoming loose. Always check that "
#~ "all parts of the printer (including the ones that may normally not move) are "
#~ "securely fixed in place after each auto-tuning."
#~ msgstr ""
#~ "**警告！ **不建议非常频繁地运行成型机自动校准（例如，在每次打印之前或每天）。为了确定共振频率，自动校准会在每个轴上产生强烈的振动。通常，3D "
#~ "打印机的设计不能承受长时间暴露于共振频率附近的振动。这样做可能会增加打印机组件的磨损并缩短其使用寿命。某些零件拧松或松动的风险也会增加。每次自动调整后，请务必检查打印机的所有部件（包括通常不会移动的部件）是否牢固地固定到位。"

#~ msgid ""
#~ "An ethernet cable with shielded twisted pairs (cat5e or better) is recommended"
#~ " for signal integrety over a long distance. If you still experience signal "
#~ "integrity issues (SPI/I2C errors), shorten the cable."
#~ msgstr ""

#~ msgid ""
#~ "**Note: Many MCUs will work with an ADXL345 in SPI mode(eg Pi Pico), wiring "
#~ "and configuration will vary according to your specific board and avaliable "
#~ "pins.**"
#~ msgstr ""

#~ msgid ""
#~ "[mcu pico]\n"
#~ "serial: /dev/serial/by-id/<your PICO's serial ID>\n"
#~ "\n"
#~ "[mpu9250]\n"
#~ "i2c_mcu: pico\n"
#~ "i2c_bus: i2c1a\n"
#~ "\n"
#~ "[resonance_tester]\n"
#~ "accel_chip: mpu9250\n"
#~ "probe_points:\n"
#~ "    100, 100, 20  # an example\n"
#~ "\n"
#~ "[static_digital_output pico_3V3pwm] # Improve power stability\n"
#~ "pin: pico:gpio23\n"
#~ msgstr ""

#~ msgid ""
#~ "Double-check your wiring before powering up the Raspberry Pi to prevent "
#~ "damaging it or the accelerometer."
#~ msgstr "为避免损坏树莓派或者加速度传感器，请检测接线正确再对树莓派上电。"

#~ msgid ""
#~ "An alternative to the ADXL345 is the MPU-9250 (or MPU-6050). This "
#~ "accelerometer has been tested to work over I2C on the RPi at 400kbaud. "
#~ "Recommended connection scheme for I2C:"
#~ msgstr ""

#~ msgid "For the ADXL345, add the following to the printer.cfg file:"
#~ msgstr ""

#~ msgid ""
#~ "For the MPU-9250, make sure the Linux I2C driver is enabled and the baud rate "
#~ "is set to 400000 (see [Enabling I2C](RPi_microcontroller.md#optional-"
#~ "enabling-i2c) section for more details). Then, add the following to the "
#~ "printer.cfg:"
#~ msgstr ""

#~ msgid ""
#~ "Note that resonance measurements and shaper auto-calibration require "
#~ "additional software dependencies not installed by default. First, you will "
#~ "have to run on your Raspberry Pi the following command:"
#~ msgstr "共振测量和自动整形校正需要额外的依赖项，这些依赖在Klipper安装时未作部署，因此，需要在树莓派上运行下面的命令："

#~ msgid ""
#~ "to install `numpy` package. Note that, depending on the performance of the "
#~ "CPU, it may take *a lot* of time, up to 10-20 minutes. Be patient and wait for"
#~ " the completion of the installation. On some occasions, if the board has too "
#~ "little RAM, the installation may fail and you will need to enable swap."
#~ msgstr ""
#~ "安装`numpy`包。numpy需要在安装时进行编译。编译时间据主机的CPU算力而异，需要*耗费大量时间*，最大可至半小时（PiZero），请耐心等待编译安装完成。少部分情况下，主机的RAM不足会导致安装失败，需要开启swap功能以实现安装。"

#~ msgid "Next, run the following commands to install the additional dependencies:"
#~ msgstr ""

#~ msgid ""
#~ "sudo apt update\n"
#~ "sudo apt install python3-numpy python3-matplotlib\n"
#~ msgstr ""

#~ msgid ""
#~ "This will generate 2 CSV files (`/tmp/resonances_x_*.csv` and "
#~ "`/tmp/resonances_y_*.csv`). These files can be processed with the stand-alone "
#~ "script on a Raspberry Pi. To do that, run running the following commands:"
#~ msgstr ""
#~ "这将产生2个CSV文件（`/tmp/resonances_x_*.csv`和`/tmp/resonances_y_*.csv`）。这两个文件可以在树莓派上用独立的脚本进行处理。运行以下命令进行处理："

#~ msgid ""
#~ "The raw data can also be obtained by running the command "
#~ "`ACCELEROMETER_MEASURE` command twice during some normal printer activity - "
#~ "first to start the measurements, and then to stop them and write the output "
#~ "file. Refer to [G-Codes](G-Codes.md#adxl345-accelerometer-commands) for more "
#~ "details."
#~ msgstr ""

#~ msgid ""
#~ "[mcu rpi]\n"
#~ "serial: /tmp/klipper_host_mcu\n"
#~ "\n"
#~ "[adxl345]\n"
#~ "cs_pin: rpi:None\n"
#~ "\n"
#~ "[resonance_tester]\n"
#~ "accel_chip: adxl345\n"
#~ "probe_points:\n"
#~ "    100,100,20  # an example\n"
#~ msgstr ""

#~ msgid ""
#~ "sudo apt update\n"
#~ "sudo apt install python-numpy python-matplotlib\n"
#~ msgstr ""

#~ msgid ""
#~ "When sourcing ADLX345, be aware that there is a variety of different PCB board"
#~ " designs and different clones of them. Make sure that the board supports SPI "
#~ "mode (small number of boards appear to be hard-configured for I2C by pulling "
#~ "SDO to GND), and, if it is going to be connected to a 5V printer MCU, that it "
#~ "has a voltage regulator and a level shifter."
#~ msgstr ""
#~ "购买ADXL345时，要注意选择合适的PCB版型，务必购买支持SPI模式的产品。少数产品将SDO引脚连接到GND，从而使ADXL硬设置到I2C模式。同时，在将ADXL345连接到5V驱动的MCU时，应在ADXL345和MCU引脚间使用调压模块和电流转换模块。"

#~ msgid "Next, run the following command to install the additional dependencies:"
#~ msgstr ""

#~ msgid "sudo apt install python-numpy python-matplotlib\n"
#~ msgstr ""
