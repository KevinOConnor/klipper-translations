# Fred Chan <fred2088@gmail.com>, 2022.
# Yifei Ding <dingyifeiair@gmail.com>, 2022.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2022-04-10 07:49+0000\n"
"Last-Translator: Yifei Ding <dingyifeiair@gmail.com>\n"
"Language-Team: Chinese (Traditional) <https://hosted.weblate.org/projects/"
"klipper/installation/zh_Hant/>\n"
"Language: zh_Hant\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.12-dev\n"

msgid ""
"These instructions assume the software will run on a Raspberry Pi computer "
"in conjunction with OctoPrint. It is recommended that a Raspberry Pi 2, 3, "
"or 4 computer be used as the host machine (see the [FAQ](FAQ.md#can-i-run-"
"klipper-on-something-other-than-a-raspberry-pi-3) for other machines)."
msgstr ""
"本教程假定軟體將會在樹莓派上和 Octoprint 一起執行。推薦使用樹莓派2/3/4作為主機（關於其他裝置，請見[常見問題](FAQ.md#can-"
"i-run-klipper-on-something-other-than-a-raspberry-pi-3)）。"

msgid "Prepping an OS image"
msgstr "準備操作系統映象"

msgid ""
"After installing OctoPi and upgrading OctoPrint, it will be necessary to ssh"
" into the target machine to run a handful of system commands. If using a "
"Linux or MacOS desktop, then the \"ssh\" software should already be "
"installed on the desktop. There are free ssh clients available for other "
"desktops (eg, [PuTTY](https://www.chiark.greenend.org.uk/~sgtatham/putty/))."
" Use the ssh utility to connect to the Raspberry Pi (ssh pi@octopi -- "
"password is \"raspberry\") and run the following commands:"
msgstr ""
"在安裝 OctoPi 和升級 OctoPrint后，用 ssh 進入目標裝置，以執行少量的系統命令。如果使用Linux或MacOS系統，那麼 "
"\"ssh\"軟體應該已經預裝在系統上。有一些免費的ssh客戶端可用於其他操作系統（例如，[PuTTY](https://www.chiark.greenend.org.uk/~sgtatham/putty/)）。使用ssh工具連線到Raspberry"
" Pi（ssh pi@octopi --密碼是 \"raspberry\"），並執行以下命令："

msgid ""
"The above will download Klipper, install some system dependencies, setup "
"Klipper to run at system startup, and start the Klipper host software. It "
"will require an internet connection and it may take a few minutes to "
"complete."
msgstr ""
"以上將會下載 Klipper 、安裝一些系統依賴、設定 Klipper 在系統啟動時執行並啟動Klipper "
"主機程式。這將需要網際網路連線以及可能需要幾分鐘時間才能完成。"

msgid "Building and flashing the micro-controller"
msgstr "構建和刷寫微控制器"

msgid ""
"To compile the micro-controller code, start by running these commands on the"
" Raspberry Pi:"
msgstr "在編譯微控制器程式碼之前，首先在樹莓派上執行這些命令："

msgid ""
"Select the appropriate micro-controller and review any other options "
"provided. Once configured, run:"
msgstr "選擇恰當的微控制器並複查提供的其他選項。配置好后，執行："

msgid ""
"It is necessary to determine the serial port connected to the micro-"
"controller. For micro-controllers that connect via USB, run the following:"
msgstr "必須先確定連線到微控制器的串列埠。對於通過 USB 連線的微控制器，執行以下命令："

msgid "It should report something similar to the following:"
msgstr "它應該報告類似以下的內容："

msgid ""
"It's common for each printer to have its own unique serial port name. This "
"unique name will be used when flashing the micro-controller. It's possible "
"there may be multiple lines in the above output - if so, choose the line "
"corresponding to the micro-controller (see the [FAQ](FAQ.md#wheres-my-"
"serial-port) for more information)."
msgstr ""
"通常每一個印表機都有自己獨特的串列埠名，這個獨特串列埠名將會在刷寫微處理器時用到。在上述輸出中可能有多行。如果是這樣的話選擇與微控制器相應的 "
"(檢視[FAQ](FAQ.md#wheres-my-serial-port)瞭解更多資訊)."

msgid ""
"For common micro-controllers, the code can be flashed with something similar"
" to:"
msgstr "對於常見的微控制器，可以用類似以下的方法來刷寫韌體："

msgid ""
"Be sure to update the FLASH_DEVICE with the printer's unique serial port "
"name."
msgstr "請務必用印表機的唯一串列埠名稱來更新 FLASH_DEVICE 參數。"

msgid ""
"When flashing for the first time, make sure that OctoPrint is not connected "
"directly to the printer (from the OctoPrint web page, under the "
"\"Connection\" section, click \"Disconnect\")."
msgstr "第一次刷寫時要確保 OctoPrint 沒有直接連線到印表機（在 OctoPrint 網頁的 \"連線 \"分段中點選 \"斷開連線\"）。"

msgid "Configuring OctoPrint to use Klipper"
msgstr "為Klipper配置 OctoPrint"

msgid ""
"The OctoPrint web server needs to be configured to communicate with the "
"Klipper host software. Using a web browser, login to the OctoPrint web page "
"and then configure the following items:"
msgstr ""
"OctoPrint網路伺服器需要進行配置，以便與Klipper host 軟體進行通訊。使用網路瀏覽器，登錄到OctoPrint網頁，然後配置以下專案："

msgid ""
"Navigate to the Settings tab (the wrench icon at the top of the page). Under"
" \"Serial Connection\" in \"Additional serial ports\" add \"/tmp/printer\". "
"Then click \"Save\"."
msgstr "導航到 \"設定 \"（頁面頂部的扳手圖示）。在 \"序列連線 \"下的 \"附加串列埠 \"中新增\"/tmp/printer\"。然後點選 \"儲存\"。"

msgid ""
"Enter the Settings tab again and under \"Serial Connection\" change the "
"\"Serial Port\" setting to \"/tmp/printer\"."
msgstr "再次進入 \"設定\"，在 \"序列連線\" 下將 \"串列埠\" 設定改為\"/tmp/printer\"。"

msgid ""
"In the Settings tab, navigate to the \"Behavior\" sub-tab and select the "
"\"Cancel any ongoing prints but stay connected to the printer\" option. "
"Click \"Save\"."
msgstr "在 \"設定 \"中，瀏覽到 \"Behavior \"子選項卡，選擇 \"取消任何正在進行的列印，但保持與印表機的連線 \"選項。點選 \"儲存\"。"

msgid ""
"From the main page, under the \"Connection\" section (at the top left of the"
" page) make sure the \"Serial Port\" is set to \"/tmp/printer\" and click "
"\"Connect\". (If \"/tmp/printer\" is not an available selection then try "
"reloading the page.)"
msgstr ""
"在主頁上，在 \"連線 \"部分（在頁面的左上方），確保 \"串列埠 \"被設定為\"/tmp/printer\"，然後點選 "
"\"連線\"。(如果\"/tmp/printer \"不是一個可用的選擇，那麼試著重新載入頁面)"

msgid ""
"Once connected, navigate to the \"Terminal\" tab and type \"status\" "
"(without the quotes) into the command entry box and click \"Send\". The "
"terminal window will likely report there is an error opening the config file"
" - that means OctoPrint is successfully communicating with Klipper. Proceed "
"to the next section."
msgstr ""
"連線后，導航到 \"終端 \"選項卡，在命令輸入框中輸入 \"status\"（不帶引號），然後點選 "
"\"發送\"。終端視窗可能會報告在打開配置檔案時出現了錯誤--這意味著 OctoPrint 與 Klipper 成功地進行了通訊。繼續下一部分。"

msgid "Configuring Klipper"
msgstr "配置 Klipper"

msgid ""
"Arguably the easiest way to update the Klipper configuration file is to use "
"a desktop editor that supports editing files over the \"scp\" and/or "
"\"sftp\" protocols. There are freely available tools that support this (eg, "
"Notepad++, WinSCP, and Cyberduck). Use one of the example config files as a "
"starting point and save it as a file named \"printer.cfg\" in the home "
"directory of the pi user (ie, /home/pi/printer.cfg)."
msgstr ""
"可以說，更新Klipper configuration 檔案的最簡單方法是使用一個支援通過 \"scp \"或 \"sftp "
"\"協議編輯檔案的桌面編輯器。有一些免費的工具支援這個功能（例如，Notepad++、WinSCP和Cyberduck）。使用其中一個配置檔案的例子作為起點，並將其儲存為pi使用者的主目錄中名為"
" \"printer.cfg \"的檔案（例如，/home/pi/printer.cfg）。"

msgid ""
"Alternatively, one can also copy and edit the file directly on the Raspberry"
" Pi via ssh - for example:"
msgstr "另外，也可以通過ssh在Raspberry Pi上直接複製和編輯該檔案。比如說："

msgid ""
"Make sure to review and update each setting that is appropriate for the "
"hardware."
msgstr "確保你檢查和更新每一個設定並且與硬體相符合。"

msgid ""
"It's common for each printer to have its own unique name for the micro-"
"controller. The name may change after flashing Klipper, so rerun the `ls "
"/dev/serial/by-id/*` command and then update the config file with the unique"
" name. For example, update the `[mcu]` section to look something similar to:"
msgstr ""
"通常每臺印表機都有自己獨特的微控制器名稱。刷寫Klipper后這個名字可能會改變，所以重新執行`ls /dev/serial/by-"
"id/*`命令，然後用這個唯一的名字更新配置檔案。例如，更新\"[mcu]\"部分，看起來類似於:"

msgid ""
"After creating and editing the file it will be necessary to issue a "
"\"restart\" command in the OctoPrint web terminal to load the config. A "
"\"status\" command will report the printer is ready if the Klipper config "
"file is successfully read and the micro-controller is successfully found and"
" configured. It is not unusual to have configuration errors during the "
"initial setup - update the printer config file and issue \"restart\" until "
"\"status\" reports the printer is ready."
msgstr ""
"在建立和編輯該檔案后，有必要在OctoPrint網路終端發出 \"restart\"命令去重新載入config。\"status\" "
"命令將報告印表機已準備就緒。在初始設定期間出現配置錯誤是很正常的。更新印表機配置檔案併發出 \"restart\"命令，直到 \"狀態 "
"\"報告印表機已準備就緒。"

msgid ""
"Klipper reports error messages via the OctoPrint terminal tab. The "
"\"status\" command can be used to re-report error messages. The default "
"Klipper startup script also places a log in **/tmp/klippy.log** which "
"provides more detailed information."
msgstr ""
"Klipper通過OctoPrint終端標籤報告錯誤資訊。可以使用 \"status "
"\"命令來重新報告錯誤資訊。預設的Klipper啟動指令碼也在**/tmp/klippy.log**中放置一個日誌，提供更詳細的資訊。"

msgid ""
"In addition to common g-code commands, Klipper supports a few extended "
"commands - \"status\" and \"restart\" are examples of these commands. Use "
"the \"help\" command to get a list of other extended commands."
msgstr ""
"除此之外常見的g-code命令之外，Klipper還支援一些擴充套件命令\"status \"和 \"restart \"就是這些命令的例子。使用 "
"\"help \"命令可以獲得其他擴充套件命令的列表。"

msgid ""
"After Klipper reports that the printer is ready go on to the [config check "
"document](Config_checks.md) to perform some basic checks on the pin "
"definitions in the config file."
msgstr ""
"在Klipper反饋印表機已經準備好后，進入[config check "
"document](Config_checks.md)對配置檔案中的引腳定義進行一些基本檢查。"

msgid "Contacting the developers"
msgstr "聯繫開發者"

msgid ""
"Be sure to see the [FAQ](FAQ.md) for answers to some common questions. See "
"the [contact page](Contact.md) to report a bug or to contact the developers."
msgstr "請務必檢視[FAQ](FAQ.md)，瞭解一些常見問題的答案。請參閱[聯繫頁面](Contact.md)來報告一個錯誤或聯繫開發者。"

msgid ""
"cd ~/klipper/\n"
"make menuconfig\n"
msgstr ""
"cd ~/klipper/\n"
"make menuconfig\n"

msgid "make\n"
msgstr "make\n"

msgid "ls /dev/serial/by-id/*\n"
msgstr "ls /dev/serial/by-id/*\n"

msgid "/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0\n"
msgstr "/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0\n"

msgid ""
"sudo service klipper stop\n"
"make flash FLASH_DEVICE=/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0\n"
"sudo service klipper start\n"
msgstr ""
"sudo service klipper stop\n"
"make flash FLASH_DEVICE=/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0\n"
"sudo service klipper start\n"

msgid ""
"cp ~/klipper/config/example-cartesian.cfg ~/printer.cfg\n"
"nano ~/printer.cfg\n"
msgstr ""
"cp ~/klipper/config/example-cartesian.cfg ~/printer.cfg\n"
"nano ~/printer.cfg\n"

msgid ""
"[mcu]\n"
"serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0\n"
msgstr ""
"[mcu]\n"
"serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0\n"

#: docs/Installation.md:block 1 (header)
msgid "Installation"
msgstr "安裝"

#: docs/Installation.md:block 7 (code)
msgid ""
"git clone https://github.com/Klipper3d/klipper\n"
"./klipper/scripts/install-octopi.sh\n"
msgstr ""
"git clone https://github.com/Klipper3d/klipper\n"
"./klipper/scripts/install-octopi.sh\n"

#: docs/Installation.md:block 3 (paragraph)
msgid ""
"Klipper currently supports a number of Atmel ATmega based micro-controllers,"
" [ARM based micro-controllers](Features.md#step-benchmarks), and [Beaglebone"
" PRU](Beaglebone.md) based printers."
msgstr ""
"Klipper 目前支援多種基於 Atmel ATmega 微控制器、[基於 ARM 微控制器](Features.md#step-"
"benchmarks) 和基於 [Beaglebone 可程式設計實時單元](Beaglebone.md) 的印表機。"

#: docs/Installation.md:block 5 (paragraph)
msgid ""
"Start by installing [OctoPi](https://github.com/guysoft/OctoPi) on the "
"Raspberry Pi computer. Use OctoPi v0.17.0 or later - see the [OctoPi "
"releases](https://github.com/guysoft/OctoPi/releases) for release "
"information. One should verify that OctoPi boots and that the OctoPrint web "
"server works. After connecting to the OctoPrint web page, follow the prompt "
"to upgrade OctoPrint to v1.4.2 or later."
msgstr ""
"先在樹莓派上安裝 [OctoPi](https://github.com/guysoft/OctoPi)。請使用OctoPi "
"v0.17.0或更高版本，檢視 [Octopi "
"發行版](https://github.com/guysoft/OctoPi/releases)來獲取最新發布版本。安裝完系統后，請先驗證 OctoPi"
" 能正常啟動，並且 OctoPrint 網路伺服器正常執行。連線到 OctoPrint 網頁后，按照提示將 OctoPrint "
"更新到v1.4.2或更高版本。"

#: docs/Installation.md:block 31 (paragraph)
msgid ""
"The Klipper configuration is stored in a text file on the Raspberry Pi. Take"
" a look at the example config files in the [config directory](../config/). "
"The [Config Reference](Config_Reference.md) contains documentation on config"
" parameters."
msgstr ""
"Klipper 配置儲存在樹莓派上的一個文字檔案中。請檢視在[config資料夾](../config/"
")中的配置示例。[配置參考](Config_Reference.md)中有配置參數的文件。"

#~ msgid ""
#~ "Klipper currently supports a number of Atmel ATmega based micro-controllers,"
#~ " [ARM based micro-controllers](Features.md#step-benchmarks), and [Beaglebone"
#~ " PRU](beaglebone.md) based printers."
#~ msgstr ""

#~ msgid ""
#~ "Start by installing [OctoPi](https://github.com/guysoft/OctoPi) on the "
#~ "Raspberry Pi computer. Use OctoPi v0.17.0 or later - see the [octopi "
#~ "releases](https://github.com/guysoft/OctoPi/releases) for release "
#~ "information. One should verify that OctoPi boots and that the OctoPrint web "
#~ "server works. After connecting to the OctoPrint web page, follow the prompt "
#~ "to upgrade OctoPrint to v1.4.2 or later."
#~ msgstr ""

#~ msgid ""
#~ "The Klipper configuration is stored in a text file on the Raspberry Pi. Take"
#~ " a look at the example config files in the [config directory](../config/). "
#~ "The [config reference](Config_Reference.md) contains documentation on config"
#~ " parameters."
#~ msgstr ""

#~ msgid ""
#~ "git clone https://github.com/KevinOConnor/klipper\n"
#~ "./klipper/scripts/install-octopi.sh\n"
#~ msgstr ""
